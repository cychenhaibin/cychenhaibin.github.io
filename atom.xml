<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Camila&#39;s blog</title>
  
  
  <link href="http://cychenhaibin.github.io/atom.xml" rel="self"/>
  
  <link href="http://cychenhaibin.github.io/"/>
  <updated>2024-07-05T11:21:25.243Z</updated>
  <id>http://cychenhaibin.github.io/</id>
  
  <author>
    <name>Camila</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://cychenhaibin.github.io/2024/07/14/JavaScript(%E5%AE%8C%E6%95%B4)/"/>
    <id>http://cychenhaibin.github.io/2024/07/14/JavaScript(%E5%AE%8C%E6%95%B4)/</id>
    <published>2024-07-14T11:40:38.239Z</published>
    <updated>2024-07-05T11:21:25.243Z</updated>
    
    <content type="html"><![CDATA[<p>20240613 1:41</p><hr><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h4 id="1、什么是JavaScript"><a href="#1、什么是JavaScript" class="headerlink" title="1、什么是JavaScript"></a>1、什么是JavaScript</h4><p>“弱类型”的脚本语言</p><p>基于”原型”的脚本语言 </p><h4 id="2、JavaScript的构成"><a href="#2、JavaScript的构成" class="headerlink" title="2、JavaScript的构成"></a>2、JavaScript的构成</h4><p>ECMAScript：核心语法、基本对象</p><p>DOM：文档对象模型</p><p>BOM：浏览器对象模型</p><h4 id="3、JavaScript的输出语句"><a href="#3、JavaScript的输出语句" class="headerlink" title="3、JavaScript的输出语句"></a>3、JavaScript的输出语句</h4><p><code>document.write()</code>        在文档中打印内容 ，要用引号包起来</p><p><code>console.log()</code>              在控制台打印内容</p><h4 id="4、如何延迟加载js：defer"><a href="#4、如何延迟加载js：defer" class="headerlink" title="4、如何延迟加载js：defer"></a>4、如何延迟加载js：defer</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> defer src=<span class="string">&#x27;路径&#x27;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>defer：js脚本可以延迟到文档完全被解析和显示之后执行</p><h4 id="5、如何异步加载js：async"><a href="#5、如何异步加载js：async" class="headerlink" title="5、如何异步加载js：async"></a>5、如何异步加载js：async</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> <span class="keyword">async</span> src=<span class="string">&#x27;路径&#x27;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>async：立即执行脚本，但不妨碍页面其他的操作</p><p>简单粗暴：谁加载完了谁执行</p><h4 id="6、js中的变量"><a href="#6、js中的变量" class="headerlink" title="6、js中的变量"></a>6、js中的变量</h4><p>命名规则：</p><ul><li>首位：字母、下划线、$</li><li>严格区分大小写</li><li>采用驼峰命名（第二个单词开始之后每一个单词首字母开头大写）</li><li>声明变量：<code>var</code></li></ul><p>注释：</p><ul><li><p>公共的js文件</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*文件用途说明</span></span><br><span class="line"><span class="comment">*作者姓名、联系方式</span></span><br><span class="line"><span class="comment">*制作日期</span></span><br><span class="line"><span class="comment">**/</span></span><br></pre></td></tr></table></figure></li><li><p>大的模块注释方法</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//====================</span></span><br><span class="line"><span class="comment">// 代码用途</span></span><br><span class="line"><span class="comment">//====================</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="一、数据类型"><a href="#一、数据类型" class="headerlink" title="一、数据类型"></a>一、数据类型</h3><ol><li><h5 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h5><p><code>string</code>：字符串，基本上加入引号的都是字符串类型</p><p><code>number</code>：数值</p><p><code>boolean</code>：布尔</p><p><code>undefined</code>：未定义，表示缺少值，应该有一个值，但是还没有赋值</p><p><code>null</code>：表示没有对象，即该处不应该有值，特殊的object</p><p><strong>区别</strong></p><p><code>null</code>表示无对象，把他转化成数值是0</p><p><code>underfined</code>表示”缺少值”，把他转换数值是NaN</p></li><li><h5 id="引用数据类型【array、function】"><a href="#引用数据类型【array、function】" class="headerlink" title="引用数据类型【array、function】"></a>引用数据类型【array、function】</h5><p><code>object</code></p></li></ol><h4 id="7、规范"><a href="#7、规范" class="headerlink" title="7、规范"></a>7、规范</h4><ol><li>单引号优先（如果不是引号嵌套，不要用双引号）</li><li>变量命名：<ol><li>str、num、bol、obj、fun、arr：作用域不大的情况</li><li>循环 i、j、k</li></ol></li></ol><h3 id="二、数据类型的转换"><a href="#二、数据类型的转换" class="headerlink" title="二、数据类型的转换"></a>二、数据类型的转换</h3><ol><li><h5 id="其他类型转【字符串类型】"><a href="#其他类型转【字符串类型】" class="headerlink" title="其他类型转【字符串类型】"></a>其他类型转【字符串类型】</h5><p><code>数据.toString()</code></p><p><code>String(数据)</code></p></li><li><h5 id="其他类型转【数值类型】"><a href="#其他类型转【数值类型】" class="headerlink" title="其他类型转【数值类型】"></a>其他类型转【数值类型】</h5><p><code>Number(数据)</code></p><p><code>parseInt(数据)</code> &#x3D;&gt; 整数</p><p><code>parseInt(数据)</code> &#x3D;&gt; 小数</p><p>字符串不是纯数字的都是NaN</p><p><strong>NaN</strong>【数值类型】：属性，代表非数字值得特殊值</p></li><li><h5 id="其他类型转【布尔类型】"><a href="#其他类型转【布尔类型】" class="headerlink" title="其他类型转【布尔类型】"></a>其他类型转【布尔类型】</h5><p><code>Boolean(数据)</code></p><p>数值：0—false、NaN—false、其他值—true、</p><p>字符串：非空字符串—true、空字符串—false</p><p>null—false、underfined—false</p></li></ol><h3 id="三、变量的存储机制和原理"><a href="#三、变量的存储机制和原理" class="headerlink" title="三、变量的存储机制和原理"></a>三、变量的存储机制和原理</h3><ol><li><h5 id="内存生命周期（三个周期）"><a href="#内存生命周期（三个周期）" class="headerlink" title="内存生命周期（三个周期）"></a>内存生命周期（三个周期）</h5><ol><li>分配器：分配所需内存</li><li>使用期：读、写</li><li>释放期：不需要时将其释放</li></ol></li><li><h5 id="JavaScript内存的生命周期"><a href="#JavaScript内存的生命周期" class="headerlink" title="JavaScript内存的生命周期"></a>JavaScript内存的生命周期</h5><ol><li>内存分配：分配所需要的暂时使用的内存大小</li><li>内存使用：读、写内存</li><li>内存回收：对于不需要使用的内存将其释放</li></ol></li><li><h5 id="栈内存、堆内存"><a href="#栈内存、堆内存" class="headerlink" title="栈内存、堆内存"></a>栈内存、堆内存</h5><ol><li>栈内存：<ol><li>基本类型（string、number、boolean、undefined、null）</li><li>按值访问</li><li>存储大小固定</li><li>系统会自动分配内存空间</li><li>空间小，运行效率高</li><li>先进后出</li></ol></li><li>堆内存：<ol><li>引用类型（object）</li><li>按引用访问</li><li>存储大小不固定</li><li>由代码进行指定分配</li><li>孔金阿达、运行效率相对较低</li><li>无需存储（根据引用直接获取）</li></ol></li></ol></li></ol><h3 id="四、数据类型隐式转换"><a href="#四、数据类型隐式转换" class="headerlink" title="四、数据类型隐式转换"></a>四、数据类型隐式转换</h3><ol><li>布尔和数字或者纯布尔相加（+），布尔会自动转换成数值类型</li><li>字符串和任何类型（+），其他类型都会转换成字符串</li></ol><h3 id="五、函数"><a href="#五、函数" class="headerlink" title="五、函数"></a>五、函数</h3><ol><li><h4 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h4><ol><li><h5 id="函数声明："><a href="#函数声明：" class="headerlink" title="函数声明："></a>函数声明：</h5><p>语法格式：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名()&#123;</span><br><span class="line">    函数体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="函数表达式："><a href="#函数表达式：" class="headerlink" title="函数表达式："></a>函数表达式：</h5><p>语法格式：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><p>​<strong>区别：</strong></p><p>​函数表达式：函数只能在声明之后调用，因为这种方式的函数，是在函数运行的阶段赋值给变量的</p><p>​        函数声明：函数可以在声明函数的作用域任意范围内调用，因为这种方式，是在函数解析阶段赋值给函数名</p><ol><li><h4 id="函数的调用【使用】"><a href="#函数的调用【使用】" class="headerlink" title="函数的调用【使用】"></a>函数的调用【使用】</h4><p>函数表达式或者函数声明是不能自己执行的，需要调用才可以执行</p><p>调用：<code>函数名()</code></p></li></ol><ul><li>函数如果没有调用，则不会保存在内存中</li><li>当函数调用完毕，其中函数的代码就会被系统内存回收</li></ul><ol><li><h4 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">形参<span class="number">1</span>，形参<span class="number">2</span>，形参<span class="number">3.</span>..</span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>(实参<span class="number">1</span>，实参<span class="number">2</span>，实参<span class="number">3.</span>..)</span><br></pre></td></tr></table></figure></li><li><h4 id="arguments对象"><a href="#arguments对象" class="headerlink" title="arguments对象"></a>arguments对象</h4><p>作用：就是操作实参</p><p><code>arguments.length</code>  就是实参的个数【长度】</p></li><li><h4 id="匿名函数【没有名字的函数】"><a href="#匿名函数【没有名字的函数】" class="headerlink" title="匿名函数【没有名字的函数】"></a>匿名函数【没有名字的函数】</h4><p>匿名函数立即执行</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li><p>匿名函数的自我执行</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">function</span>(<span class="params">形参<span class="number">1</span>，形参<span class="number">2.</span>..</span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;)(实参<span class="number">1</span>，实参<span class="number">2.</span>..)</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="六、Js执行环境"><a href="#六、Js执行环境" class="headerlink" title="六、Js执行环境"></a>六、Js执行环境</h3><ol><li><h5 id="什么是执行环境"><a href="#什么是执行环境" class="headerlink" title="什么是执行环境"></a>什么是执行环境</h5><p>执行环境又被称为：执行上下文</p><p>执行环境定义了变量或者函数有权或无权访问其他数据，决定了各自的行为</p></li><li><h5 id="执行分类（3大类）"><a href="#执行分类（3大类）" class="headerlink" title="执行分类（3大类）"></a>执行分类（3大类）</h5><ol><li>全局执行环境<ol><li>是最外围的执行环境、在页面中，全局执行环境就是window对象</li><li>当一打开页面，会自动生成window对象，那么全局的变量或者函数都属于window对象的内容。那么window就是全局的。</li><li>回收机制：<ol><li>某个执行环境中的所有代码执行完毕，保存在执行环境中的变量或者函数都会进行销毁（回收）</li><li>但是全局执行环境是到关闭浏览器或者当前页面才会被回收</li></ol></li></ol></li><li>函数的执行环境<ol><li>当某个函数被调用时，首先会创建一个执行环境以及作用域链，然后使用arguments和其他参数来初始化这个执行环境</li></ol></li></ol></li><li><h5 id="执行环境的生命周期"><a href="#执行环境的生命周期" class="headerlink" title="执行环境的生命周期"></a>执行环境的生命周期</h5><ol><li><p>创建阶段</p><ol><li>生成变量对象</li><li>建立作用域链</li><li>确定this指向</li></ol></li><li><p>执行阶段</p><ol><li>变量赋值</li><li>函数调用</li><li>执行其他代码</li></ol></li><li><p>销毁阶段</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 第一次页面加载创建全局执行环境</span></span><br><span class="line"><span class="comment">// 先到创建阶段----&gt;扫描全局的变量以及函数</span></span><br><span class="line"><span class="comment">// 扫描结果是num = undefined</span></span><br><span class="line"><span class="comment">// 执行阶段再运行赋值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num)</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="七、BOM"><a href="#七、BOM" class="headerlink" title="七、BOM"></a>七、BOM</h3><ol><li><h5 id="浏览器对象模型"><a href="#浏览器对象模型" class="headerlink" title="浏览器对象模型"></a>浏览器对象模型</h5><p>围绕 ”浏览器“ 的一些操作</p><p>BOM可以：</p><ol><li>获取到浏览器的型号（手机型号）</li><li>url操作</li><li>屏幕的大小尺寸</li></ol></li><li><h5 id="location对象：操作浏览器当前的url"><a href="#location对象：操作浏览器当前的url" class="headerlink" title="location对象：操作浏览器当前的url"></a>location对象：操作浏览器当前的url</h5><ol><li><p>href：本身是可以获取到当前的url、设置对应跳转的url</p><p><code>localtion.href = &#39;url&#39;</code> 是在本页面进行的跳转，不是新窗口打开</p><p><code>window.open(url,&#39;_blank&#39;)</code> 可以在新窗口打开</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    location.<span class="property">href</span> = <span class="string">&#x27;http:///www.xuexiluxian.cn&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;userName&#x27;</span>/&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;userPwd&#x27;</span>/&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&#x27;登录&#x27;</span> <span class="attr">id</span>=<span class="string">&#x27;login&#x27;</span>/&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    login.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> uName = userName.<span class="property">value</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> uPwd = userPwd.<span class="property">value</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">if</span>(uName==<span class="string">&#x27;admin&#x27;</span> &amp;&amp; uPws==<span class="string">&#x27;admin&#x27;</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            location.<span class="property">href</span>=<span class="string">&#x27;home.html&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="comment">// window.open(url,&#x27;_blank&#x27;);</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;<span class="keyword">else</span>&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="title function_">alert</span>(<span class="string">&#x27;用户名或密码不正确&#x27;</span>);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>search：设置或者获取，从问号（？），开始的url</p><p><strong>解码</strong> <code>decodeURIComponent</code>  中文字体乱码，需要解码</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="property">title</span> = <span class="built_in">decodeURIComponent</span>(location.<span class="property">search</span>);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240525090131708.png" alt="image-20240525090131708"></p></li><li><p>hash：设置或者获取，从井号（#），开始的url</p></li></ol></li><li><h5 id="history：操作浏览器窗口访问过的url"><a href="#history：操作浏览器窗口访问过的url" class="headerlink" title="history：操作浏览器窗口访问过的url"></a>history：操作浏览器窗口访问过的url</h5><ol><li><p>back：返回上一页</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// home.html</span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&#x27;js&#x27;</span>&gt;</span>js<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    js.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            loaction.<span class="property">href</span> = <span class="string">&#x27;list.html&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// list.html</span></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;oReturn&#x27;</span>&gt;</span> &lt; <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    oReturn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            history.<span class="title function_">back</span>();</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>forward：前进下一页</p></li><li><p>go：前往指定的页面</p><ol><li><code>go(-1)</code> ：返回上一页 back</li><li><code>go(1)</code> ：前进下一页 forward</li><li><code>go(0)</code> ：刷新</li></ol></li></ol></li><li><h5 id="navigator：包含有关浏览器的信息"><a href="#navigator：包含有关浏览器的信息" class="headerlink" title="navigator：包含有关浏览器的信息"></a>navigator：包含有关浏览器的信息</h5><ol><li><p>userAgent：用户代理头的值、用的什么浏览器</p></li><li><p>platform：返回运行浏览器的操作系统</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240525092511679.png" alt="image-20240525092511679"></p></li></ol></li><li><h5 id="screen：客户端屏幕信息"><a href="#screen：客户端屏幕信息" class="headerlink" title="screen：客户端屏幕信息"></a>screen：客户端屏幕信息</h5><ol><li>width：返回显示的屏幕宽度</li><li>height：返回屏幕的高度</li></ol></li></ol><h3 id="八、定时器"><a href="#八、定时器" class="headerlink" title="八、定时器"></a>八、定时器</h3><ol><li><h5 id="setInterval：间歇调用，”后”，将定时任务处理的函数添加到执行队列到队尾"><a href="#setInterval：间歇调用，”后”，将定时任务处理的函数添加到执行队列到队尾" class="headerlink" title="setInterval：间歇调用，”后”，将定时任务处理的函数添加到执行队列到队尾"></a>setInterval：间歇调用，”后”，将定时任务处理的函数添加到执行队列到队尾</h5><ol><li><p>语法格式：</p><p><code>setInterval(执行匿名函数，毫秒数)</code></p></li></ol></li><li><h5 id="setTimeout：超时调用，”后”，将定时任务处理的函数添加到执行队列到队尾"><a href="#setTimeout：超时调用，”后”，将定时任务处理的函数添加到执行队列到队尾" class="headerlink" title="setTimeout：超时调用，”后”，将定时任务处理的函数添加到执行队列到队尾"></a>setTimeout：超时调用，”后”，将定时任务处理的函数添加到执行队列到队尾</h5><ol><li><p>语法格式：</p><p><code>setTimeout(执行匿名函数，毫秒数)</code></p></li></ol></li><li><h5 id="清除定时器"><a href="#清除定时器" class="headerlink" title="清除定时器"></a>清除定时器</h5><ol><li><p><code>clearInterval</code>——-<code>setInterval</code></p></li><li><p><code>clearTimeout</code>———<code>setTimeout</code></p></li><li><p>语法格式：</p><p><code>clearInterval(清楚哪一个定时器)</code></p><p><code>clearTimeout(清楚哪一个定时器)</code></p></li></ol></li></ol><h3 id="九、js的单线程"><a href="#九、js的单线程" class="headerlink" title="九、js的单线程"></a>九、js的单线程</h3><p>同一时间只能做一件时间，这也就意味着所有的任务需要排队，前一个任务执行结束了，才可以继续执行下一个任务</p><ol><li><p>js语言为什么是单线程</p><p>取决于用在什么地方、用户体验</p><p>事件队列（定时器、ajax…）：先进先出</p><p>先执行主线程，再执行事件队列</p></li></ol><h5 id="获取id：document-getElementById-id值"><a href="#获取id：document-getElementById-id值" class="headerlink" title="获取id：document.getElementById(&#39;id值&#39;)"></a>获取id：<code>document.getElementById(&#39;id值&#39;)</code></h5><h5 id="获取集合元素：document-getElementsByTagName-元素名称"><a href="#获取集合元素：document-getElementsByTagName-元素名称" class="headerlink" title="获取集合元素：document.getElementsByTagName(&#39;元素名称&#39;)"></a>获取集合元素：<code>document.getElementsByTagName(&#39;元素名称&#39;)</code></h5><h3 id="十、数组"><a href="#十、数组" class="headerlink" title="十、数组"></a>十、数组</h3><ol><li><h5 id="什么是数组"><a href="#什么是数组" class="headerlink" title="什么是数组"></a>什么是数组</h5><p>使用单独的变量名来存储”一系列”的值</p></li><li><h5 id="数组可以"><a href="#数组可以" class="headerlink" title="数组可以"></a>数组可以</h5><p>存储一系列（大量）的值</p></li><li><h5 id="使用数组"><a href="#使用数组" class="headerlink" title="使用数组"></a>使用数组</h5><ol><li><p>如何创建数组</p><p><strong>构造函数形式</strong>：<code>new Array(&#39;字符串&#39;,数值,布尔)</code>   、如果只有一个参数，这个参数就是数组的长度【只限数值】</p><p><strong>字面量</strong>：<code>[&#39;字符串&#39;,数值,布尔]</code></p></li></ol><p>​       数组是一个对象、存储在堆内存中</p><ol><li>数组属性：长度length</li></ol></li></ol><h3 id="十一、数组方法"><a href="#十一、数组方法" class="headerlink" title="十一、数组方法"></a>十一、数组方法</h3><ol><li><h5 id="concat-：合并数组，最后返回一个新的数组"><a href="#concat-：合并数组，最后返回一个新的数组" class="headerlink" title="concat()：合并数组，最后返回一个新的数组"></a><code>concat()</code>：合并数组，最后返回一个新的数组</h5><p><code>数组.方法名称(参数)</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">var</span> brr = [<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>];</span><br><span class="line">arr.<span class="title function_">concat</span>(brr);</span><br></pre></td></tr></table></figure></li><li><h5 id="reverse-：反转数组的顺序，会改变原来的数组"><a href="#reverse-：反转数组的顺序，会改变原来的数组" class="headerlink" title="reverse()：反转数组的顺序，会改变原来的数组"></a><code>reverse()</code>：反转数组的顺序，会改变原来的数组</h5></li><li><h5 id="join-分隔符-：将数组转换成字符串"><a href="#join-分隔符-：将数组转换成字符串" class="headerlink" title="join(&#39;分隔符&#39;)：将数组转换成字符串"></a><code>join(&#39;分隔符&#39;)</code>：将数组转换成字符串</h5><p>将数组的元素组成一个字符串，用参数分隔符进行分割，默认以逗号分隔</p></li><li><h5 id="push-：将参数添加到原数组的末尾，并且返回数组的长度"><a href="#push-：将参数添加到原数组的末尾，并且返回数组的长度" class="headerlink" title="push()：将参数添加到原数组的末尾，并且返回数组的长度"></a><code>push()</code>：将参数添加到原数组的末尾，并且返回数组的长度</h5></li><li><h5 id="unshift-：将参数添加到原数组开头，并且返回数组的长度"><a href="#unshift-：将参数添加到原数组开头，并且返回数组的长度" class="headerlink" title="unshift()：将参数添加到原数组开头，并且返回数组的长度"></a><code>unshift()</code>：将参数添加到原数组开头，并且返回数组的长度</h5></li><li><h5 id="pop-：数组末尾移除最后一项，返回移除的项"><a href="#pop-：数组末尾移除最后一项，返回移除的项" class="headerlink" title="pop()：数组末尾移除最后一项，返回移除的项"></a><code>pop()</code>：数组末尾移除最后一项，返回移除的项</h5></li><li><h5 id="shift-：删除原数组第一项，返回移除的项"><a href="#shift-：删除原数组第一项，返回移除的项" class="headerlink" title="shift()：删除原数组第一项，返回移除的项"></a><code>shift()</code>：删除原数组第一项，返回移除的项</h5></li><li><h5 id="slice-开始位置，结束位置-：截取，返回新数组"><a href="#slice-开始位置，结束位置-：截取，返回新数组" class="headerlink" title="slice(开始位置，结束位置)：截取，返回新数组"></a><code>slice(开始位置，结束位置)</code>：截取，返回新数组</h5><p>一个参数（正数）：从当前下标（包括下标）开始往后截取</p><p>两个参数（正数）：从开始位置（包括开始位置）到结束位置（不包括结束位置）</p></li><li><h5 id="sort-：按升序排列数组项"><a href="#sort-：按升序排列数组项" class="headerlink" title="sort()：按升序排列数组项"></a><code>sort()</code>：按升序排列数组项</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">sort</span>(<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> a-b;   <span class="comment">// 从小到大</span></span><br><span class="line">    <span class="keyword">return</span> b-a;   <span class="comment">// 从大到小</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><h5 id="indexOf-参数-：查找，查找参数在数组中是否存在"><a href="#indexOf-参数-：查找，查找参数在数组中是否存在" class="headerlink" title="indexOf(参数)：查找，查找参数在数组中是否存在"></a><code>indexOf(参数)</code>：查找，查找参数在数组中是否存在</h5><p>如果存在返回下标</p><p>如果不存在返回-1</p></li><li><h5 id="splice-：可以实现删除、插入、替换操作"><a href="#splice-：可以实现删除、插入、替换操作" class="headerlink" title="splice()：可以实现删除、插入、替换操作"></a><code>splice()</code>：可以实现删除、插入、替换操作</h5><p>删除：2个参数，（1，2）从下标1开始，删除2个</p><p>替换：3个参数，（0，1，4）从下标0开始，长度为1的数组元素替换成4</p><p>插入：3个参数，（1，0，5）表示下标为1处添加一项5</p></li></ol><h3 id="十二、循环遍历数组"><a href="#十二、循环遍历数组" class="headerlink" title="十二、循环遍历数组"></a>十二、循环遍历数组</h3><ol><li><h5 id="forEach"><a href="#forEach" class="headerlink" title="forEach"></a><code>forEach</code></h5><p>语法格式：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">数组.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item,index</span>)&#123;</span><br><span class="line">    <span class="comment">// item:数组每一项</span></span><br><span class="line">    <span class="comment">// index:数组的下标</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>缺点：不可以使用break和return</p></li><li><h5 id="map：里面支持return，并且返回新的数组"><a href="#map：里面支持return，并且返回新的数组" class="headerlink" title="map：里面支持return，并且返回新的数组"></a><code>map</code>：里面支持return，并且返回新的数组</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">var brr = [];</span></span><br><span class="line"><span class="comment">for(var i=0;i&lt;arr.length;i++)&#123;</span></span><br><span class="line"><span class="comment">brr.push(arr[i]+&#x27;0&#x27;);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">console.log(brr);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> brr = arr.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">item,index</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> item+<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(brr);</span><br></pre></td></tr></table></figure></li><li><h5 id="filter：过滤，并且返回新的数组"><a href="#filter：过滤，并且返回新的数组" class="headerlink" title="filter：过滤，并且返回新的数组"></a><code>filter</code>：过滤，并且返回新的数组</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">18</span>，<span class="number">19</span>，<span class="number">20</span>，<span class="number">22</span>，<span class="number">25</span>，<span class="number">33</span>，<span class="number">26</span>];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">var brr = [];</span></span><br><span class="line"><span class="comment">for(var i=0;i&lt;arr.length;i++)&#123;</span></span><br><span class="line"><span class="comment">if(arr[i]&gt;20)&#123;</span></span><br><span class="line"><span class="comment">brr.push(arr[i]);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">console.log(brr);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">var</span> brr = arr.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">item,index</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> item&gt;<span class="number">20</span>;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(brr);</span><br></pre></td></tr></table></figure></li><li><h5 id="every：所有为true，返回true"><a href="#every：所有为true，返回true" class="headerlink" title="every：所有为true，返回true"></a><code>every</code>：所有为true，返回true</h5></li><li><h5 id="some：只要有一项为true，返回true"><a href="#some：只要有一项为true，返回true" class="headerlink" title="some：只要有一项为true，返回true"></a><code>some</code>：只要有一项为true，返回true</h5></li></ol><h3 id="十三、字符串"><a href="#十三、字符串" class="headerlink" title="十三、字符串"></a>十三、字符串</h3><ol><li><h5 id="字面量"><a href="#字面量" class="headerlink" title="字面量"></a>字面量</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;你好&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><h5 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&#x27;你好&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ol><p><strong>区别</strong></p><ul><li>字面量形式存储在栈内存，构造函数形式存储在堆内存<ul><li><code>typeof</code>字面量返回 string</li><li><code>typeof</code>构造函数返回 object</li></ul></li><li>为什么字面量的string、boolean、number也有属性和方法<ul><li>string、boolean、number：原始的资料类型</li><li>new String、new Number、new Boolean：包装对象</li><li>原始的资料类型向包装对象借用</li></ul></li></ul><ol><li><h5 id="字符串方法"><a href="#字符串方法" class="headerlink" title="字符串方法"></a>字符串方法</h5><ol><li><p><code>charAt(数值)</code>：返回指定”位置”的字符</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;abcdef&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str[<span class="number">1</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">chatAt</span>(<span class="number">1</span>));</span><br></pre></td></tr></table></figure></li><li><p><code>indexOf(字符)</code>：查找，有返回下标，没有返回-1</p></li><li><p><code>replace(把什么，替换成什么)</code>：替换、只替换一处，并不是全部替换</p><ol><li><p>全部替换：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">str.<span class="title function_">replace</span>(<span class="regexp">/字符/g</span>,<span class="string">&#x27;替换的内容&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ol></li><li><p><code>trim()</code>：去除前后空格</p></li><li><p><code>toLowerCase()</code>：把字符转换成小写</p></li><li><p><code>toUpperCase()</code>：把字符转换成大写</p></li><li><p><code>split()</code>：把字符串转换成数组</p></li><li><p><code>join()</code>：把数组转换成字符串</p></li></ol></li><li><h5 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h5><ol><li><code>slice(start,end)</code></li><li><code>substring(start,end)</code> 负数转换成0</li><li><code>substr(start,length)</code>：start为开始位置，length为长度</li></ol></li></ol><h4 id="上传文件判断后缀名"><a href="#上传文件判断后缀名" class="headerlink" title="上传文件判断后缀名"></a>上传文件判断后缀名</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// files.value就是文件的路径</span></span><br><span class="line">    <span class="keyword">var</span> val = filea.<span class="property">value</span>;</span><br><span class="line">    <span class="comment">// 找到.的位置，也就是下标</span></span><br><span class="line">    <span class="keyword">var</span> idx = val.<span class="title function_">indexOf</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">    <span class="comment">// 截取.后面的内容</span></span><br><span class="line">    <span class="keyword">var</span> fileName = val.<span class="title function_">slice</span>(idx+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(fileName!=<span class="string">&#x27;jpg&#x27;</span> &amp;&amp; fileName!=<span class="string">&#x27;png&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;文件有误&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;上传正确&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="手机号中4位隐藏"><a href="#手机号中4位隐藏" class="headerlink" title="手机号中4位隐藏"></a>手机号中4位隐藏</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;tel&#x27;</span>&gt;</span>   // 获取到value</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;替换&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;changeBtn&#x27;</span>&gt;</span>   // 添加事件</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;endTel&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span>   // 放入最终值</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> tel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;tel&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> changeBtn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;changeBtn&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> endTel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;endTel&#x27;</span>);</span><br><span class="line">changeBtn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 获取到input的value</span></span><br><span class="line">    <span class="keyword">var</span> telVal = tel.<span class="property">value</span>;</span><br><span class="line">    <span class="comment">// 最终赋值</span></span><br><span class="line">    endTel.<span class="property">innerText</span> = <span class="title function_">fHide</span>(telVal,<span class="number">3</span>,<span class="number">4</span>,*);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fHide</span>(<span class="params">str,first,last,start</span>)&#123;</span><br><span class="line">    <span class="comment">// 参数1：input的value值</span></span><br><span class="line">    <span class="comment">// 参数2：是数字3、开始的3位显示</span></span><br><span class="line">    <span class="comment">// 参数3：是数字4、结束的4位显示</span></span><br><span class="line">    <span class="comment">// 参数4：代表中间的内容要被替换成*</span></span><br><span class="line">    <span class="keyword">var</span> len = str.<span class="property">length</span> - first - last;</span><br><span class="line">    <span class="keyword">var</span> sStart = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        sStart+=<span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.<span class="title function_">slice</span>(<span class="number">0</span>,start) + sStart + str.<span class="title function_">slice</span>(-last);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十四、Math（数学）对象"><a href="#十四、Math（数学）对象" class="headerlink" title="十四、Math（数学）对象"></a>十四、Math（数学）对象</h3><ol><li><h5 id="取最大"><a href="#取最大" class="headerlink" title="取最大"></a>取最大</h5><p><code>Math.max()</code></p></li><li><h5 id="取最小值"><a href="#取最小值" class="headerlink" title="取最小值"></a>取最小值</h5><p><code>Math.min()</code></p></li><li><h5 id="四舍五入"><a href="#四舍五入" class="headerlink" title="四舍五入"></a>四舍五入</h5><p><code>Math.round()</code></p></li><li><h5 id="返回数的绝对值"><a href="#返回数的绝对值" class="headerlink" title="返回数的绝对值"></a>返回数的绝对值</h5><p><code>Math.abs()</code></p></li><li><h5 id="返回数的平方根"><a href="#返回数的平方根" class="headerlink" title="返回数的平方根"></a>返回数的平方根</h5><p>Mmath.sqrt()&#96;</p></li><li><h5 id="向下取整"><a href="#向下取整" class="headerlink" title="向下取整"></a>向下取整</h5><p><code>Math.floor()</code></p></li><li><h5 id="向上取整"><a href="#向上取整" class="headerlink" title="向上取整"></a>向上取整</h5><p><code>Math.ceil()</code></p></li><li><h5 id="返回随机数"><a href="#返回随机数" class="headerlink" title="返回随机数"></a>返回随机数</h5><p><code>Math.random()</code></p><p>随机的公式：</p><ol><li>不包含最大值，包含最小值 <code>Math.floor(Math.random() * (max - min))+min</code></li><li>包含最大值，包含最小值 <code>Math.floor(Math.random() * (max - min + 1))+min</code></li><li></li></ol></li></ol><h4 id="随机验证码"><a href="#随机验证码" class="headerlink" title="随机验证码"></a>随机验证码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;txt&#x27;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&#x27;code&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;btn&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 点击验证码可以切换</span></span><br><span class="line"><span class="comment">// 验证码是否正确</span></span><br><span class="line"><span class="keyword">var</span> code = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;code&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> txt = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;txt&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line"><span class="comment">// 生成验证码的函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fRandom</span>(<span class="params">codeLen</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">&#x27;abcdef1234567890&#x27;</span>;</span><br><span class="line">    <span class="keyword">var</span> strCode = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;codeLen;i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> n = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * str.<span class="property">length</span>);</span><br><span class="line">        strCode += str[n];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 给验证码盒子内容赋值，让其显示这个验证码</span></span><br><span class="line">    code.<span class="property">innerText</span> = strCode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fRandom</span>(<span class="number">4</span>)</span><br><span class="line"><span class="comment">// 点击验证码</span></span><br><span class="line">code.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">fRandom</span>(<span class="number">4</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 点击登录判断</span></span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(txt.<span class="property">value</span> === code.<span class="property">innerText</span>)&#123;</span><br><span class="line">        location.<span class="property">href</span>=<span class="string">&#x27;http://www.xuexiluxian.cn/&#x27;</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;验证码不正确&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="十五、日期对象【new-Date-】"><a href="#十五、日期对象【new-Date-】" class="headerlink" title="十五、日期对象【new Date()】"></a>十五、日期对象【new Date()】</h3><ol><li><h5 id="日期对象的方法"><a href="#日期对象的方法" class="headerlink" title="日期对象的方法"></a>日期对象的方法</h5><ol><li><p><code>对象.getFullYear()</code>         年</p></li><li><p><code>对象.getMonth()</code>               月</p></li><li><p><code>对象.getDate()</code>                 日</p></li><li><p><code>对象.getHours()</code>               时</p></li><li><p><code>对象.getMinutes()</code>           分</p></li><li><p><code>对象.getSeconds()</code>           秒</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">date.<span class="title function_">getSeconds</span>();</span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h5><p>从1970年1月1日至今的时间（毫秒）</p><p><code>对象.getTime()</code></p></li></ol><h4 id="京东秒杀"><a href="#京东秒杀" class="headerlink" title="京东秒杀"></a>京东秒杀</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>京东秒杀<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span>12:00<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">            点场 倒计时</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&#x27;hour&#x27;</span>&gt;</span>01<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&#x27;minute&#x27;</span>&gt;</span>01<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&#x27;second&#x27;</span>&gt;</span>01<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> hour = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hour&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> minute = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;minute&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> second = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;second&#x27;</span>);</span><br><span class="line"><span class="comment">// 什么时候停止秒杀</span></span><br><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2020-6-18 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fCountDown</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 这是现在时间</span></span><br><span class="line">    <span class="keyword">var</span> nowTime = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="comment">// 目标停止时间 减去 当前时间、算出来、差额时间</span></span><br><span class="line">    <span class="keyword">var</span> times = (date - nowTime)/<span class="number">1000</span>;</span><br><span class="line">    <span class="comment">// 获取差额的小时</span></span><br><span class="line">    <span class="keyword">var</span> h = <span class="built_in">parseInt</span>(times/<span class="number">60</span>/<span class="number">60</span>%<span class="number">24</span>);</span><br><span class="line">    h = h&lt;<span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span>+h : h;</span><br><span class="line">    hour.<span class="property">innerText</span> = h;</span><br><span class="line">    <span class="comment">// 获取差额的分钟</span></span><br><span class="line">    <span class="keyword">var</span> m = <span class="built_in">parseInt</span>(times/<span class="number">60</span>%<span class="number">60</span>);</span><br><span class="line">    m = m&lt;<span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span>+m : m;</span><br><span class="line">    minute.<span class="property">innerText</span> = m;</span><br><span class="line">    <span class="comment">// 获取差额的秒</span></span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">parseInt</span>(times%<span class="number">60</span>);</span><br><span class="line">    s = s&lt;<span class="number">10</span> ? <span class="string">&#x27;0&#x27;</span>+s : s;</span><br><span class="line">    second.<span class="property">innerText</span> = s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 一开始就刷新页面</span></span><br><span class="line"><span class="title function_">fCountDown</span>();</span><br><span class="line"><span class="built_in">setInterval</span>(fCountDown,<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><h3 id="十六、DOM"><a href="#十六、DOM" class="headerlink" title="十六、DOM"></a>十六、DOM</h3><p>document object model：文档对象模型</p><ol><li><h5 id="获取文档节点【元素】的方法"><a href="#获取文档节点【元素】的方法" class="headerlink" title="获取文档节点【元素】的方法"></a>获取文档节点【元素】的方法</h5><ul><li><p>获取id：<code>document.getElementById(&#39;main&#39;)</code></p></li><li><p>获取标签名：<code>document.getElementsByTagName(&#39;li&#39;)</code> 获取到的是集合元素</p></li><li><p>获取class名：<code>document.getElementsByClassName(&#39;class&#39;)</code> 获取到的是集合元素</p></li><li><p>通过选择器来获取一个节点：<code>document.querySelector()</code></p></li><li><p>通过选择器来获取所有节点：<code>document.querySelectorAll()</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;main&#x27;</span> <span class="attr">class</span>=<span class="string">&#x27;container&#x27;</span>&gt;</span></span><br><span class="line">    我是main</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;#main&#x27;</span>)[<span class="number">0</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.container&#x27;</span>);</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="节点属性"><a href="#节点属性" class="headerlink" title="节点属性"></a>节点属性</h5><ol><li><code>innerHTML</code>、<code>innerText</code>：给节点添加内容       <code>innerText</code>解析不了html标签</li><li><code>nodeName</code>：返回节点名称、用来做判断使用、返回大写字母</li><li><code>firstElementChild</code>：获取到第一个子元素节点</li><li><code>lastElememtChild</code>：获取到最后一个子元素节点</li><li><code>parentNode</code>：获取到父节点</li></ol></li><li><h5 id="节点方法（操作节点属性的方法）"><a href="#节点方法（操作节点属性的方法）" class="headerlink" title="节点方法（操作节点属性的方法）"></a>节点方法（操作节点属性的方法）</h5><ol><li>获取：<code>节点对象.getAttribute(&#39;属性名称&#39;)</code>：返回对应属性名称的值</li><li>设置：<code>节点对象.setAttribute(&#39;属性名称&#39;，‘对应的值)</code></li><li>删除：<code>节点.removeAttribute(&#39;属性名称&#39;)</code></li></ol></li><li><h5 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h5><p><code>document.createElement(&#39;节点名称&#39;)</code> </p></li><li><h5 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h5><ol><li><p>追加 <code>父节点.appendChild(子节点)</code></p></li><li><p>前置 <code>父节点.insertBefore(添加的子节点，添加到谁前面)</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> add = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;add&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> uls = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;uls&#x27;</span>);</span><br><span class="line">add.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 创建li节点</span></span><br><span class="line">    <span class="keyword">var</span> newLi = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> liLen = <span class="variable language_">document</span>.<span class="title function_">getElementByTagName</span>(<span class="string">&#x27;li&#x27;</span>).<span class="property">length</span>;</span><br><span class="line">    newLi.<span class="property">innerText</span> = liLen;</span><br><span class="line">    <span class="comment">// 添加节点-&gt;追加</span></span><br><span class="line">    uls.<span class="title function_">appendChild</span>(newLi);</span><br><span class="line">    <span class="comment">// 添加节点-&gt;前置</span></span><br><span class="line">    uls.<span class="title function_">insertBefore</span>(newLi,<span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>)[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h5><p><code>父节点.removeChild(子节点)</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        1111</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        2222</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        3333</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        4444</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        5555</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:;&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> uls = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;uls&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> oA = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> oAlen = oA.<span class="property">length</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;oAlen;i++)&#123;</span><br><span class="line">    oA[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        uls.<span class="title function_">removeChild</span>(<span class="variable language_">this</span>.<span class="property">parentNode</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="获取样式表中的样式"><a href="#获取样式表中的样式" class="headerlink" title="获取样式表中的样式"></a>获取样式表中的样式</h5><p>语法格式：<code>getComputedStyle(节点,null).样式名称</code></p></li><li><h5 id="获取元素的大小和偏移位置"><a href="#获取元素的大小和偏移位置" class="headerlink" title="获取元素的大小和偏移位置"></a>获取元素的大小和偏移位置</h5><ul><li>大小：<ul><li>计算<strong>width+padding+border</strong>、没有px单位，返回的是数值类型<ul><li><code>节点对象.offsetWidth</code></li><li><code>节点对象.offsetHeight</code></li></ul></li><li>计算<strong>width+padding</strong>、没有px单位，返回的是数值类型<ul><li><code>节点对象.clientWidth</code></li><li><code>节点对象.clientHeight</code></li></ul></li></ul></li><li>偏移值：<ul><li><code>节点对象.offsetLeft</code> （从左到右）</li><li><code>节点对象.offsetTop</code>   （从上到下）</li><li>如果节点没有定位的情况下：相对整个文档偏移</li><li>如果节点有定位的情况下：相对于父节点偏移</li></ul></li></ul></li><li><h5 id="滚动距离"><a href="#滚动距离" class="headerlink" title="滚动距离"></a>滚动距离</h5><p><code>节点对象.scrollLeft</code></p><p><code>节点对象.scrollTop</code></p><h4 id="回到顶部"><a href="#回到顶部" class="headerlink" title="回到顶部"></a>回到顶部</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.is-fx</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">position</span>: fixed;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">bottom</span>；<span class="number">0px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">style</span>=<span class="string">&#x27;height: 5000px;&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;isFx&#x27;</span> <span class="attr">class</span>=<span class="string">&#x27;is-fx&#x27;</span>&gt;</span></span><br><span class="line">        回到顶部</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> isFx = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;isFx&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    isFx.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">scrollTop</span> = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">   </span><br></pre></td></tr></table></figure></li></ol><h3 id="十七、事件"><a href="#十七、事件" class="headerlink" title="十七、事件"></a>十七、事件</h3><ul><li>什么是事件：事件指可以被JavaScript检测到的行为<ul><li>事情的起因</li></ul></li><li>都有哪些事件<ul><li>即鼠标点击、页面或图像载入、鼠标悬浮于页面的某个热点之上、在表单中选取输入框、确认表单、键盘按键等操作。</li></ul></li><li>事件在什么时候执行<ul><li>事件通常与函数配合使用，当事件发生时函数才会执行</li></ul></li></ul><ol><li><h5 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h5><p>事件执行的顺序</p><ol><li>历史原因：早期的IE事件传播方向为由上至下，即从document逐级向下传播到目标元素；而Netscape公司则是朝相反的方向传播，也就是从目标元素开始向上逐级传播最终至window后来ECMAScript在DOM2中对事件流进行了进一步规范，基本上就是两者的结合。<ol><li>当事件发生时，最先得到通知的是window，然后是document，由上至下逐级依次而入，直到真正触发事件的那个元素（目标元素）为止，这个过程就是捕获。</li><li>接下来，事件会从目标元素开始起泡，由下至上逐级依次传播，直到window对象为止，这个过程就是冒泡，所以捕获比冒泡先执行。</li></ol></li><li>事件流分为两种：事件捕获、事件冒泡<ol><li>事件捕获：是从window开始向下传播，一直目标节点</li><li>事件冒泡：是从目标节点开始向上传播，一直到window</li></ol></li></ol></li><li><h5 id="鼠标类事件"><a href="#鼠标类事件" class="headerlink" title="鼠标类事件"></a>鼠标类事件</h5><ol><li><p><code>onclick</code>                单击事件</p></li><li><p><code>ondblclick</code>          双击事件</p></li><li><p><code>oncontextmenu</code>    右击事件、要 <code>return false</code></p></li><li><p>屏蔽右击</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="property">oncontextmenu</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>onmousedown</code>         鼠标按下、在拖拽的时候会用到</p></li><li><p><code>onmouseup</code>             鼠标释放、在拖拽的时候会用到</p></li><li><p><code>onmouseover</code>         鼠标经过</p></li><li><p><code>onmouseout</code>           鼠标离开</p></li><li><p><code>onmousemove</code>         鼠标悬浮、放大镜效果</p></li></ol></li><li><h5 id="键盘类事件"><a href="#键盘类事件" class="headerlink" title="键盘类事件"></a>键盘类事件</h5><ol><li><p><code>onkeydown</code>              键盘按下</p></li><li><p><code>onkeyup</code>                  键盘按下</p></li><li><p>通过keyCode获得键值  <code>e.keyCode</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">txt.<span class="property">onkeydown</span> = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">keyCode</span> == <span class="number">13</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> lis = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">        lis.<span class="property">innerHTML</span> = txt.<span class="property">value</span>;</span><br><span class="line">        uls.<span class="title function_">appendChild</span>(lis);</span><br><span class="line">        txt.<span class="property">value</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="其他类事件"><a href="#其他类事件" class="headerlink" title="其他类事件"></a>其他类事件</h5><ol><li><code>onload</code>                     加载完毕后立即执行的操作</li><li><code>window.onload</code>       网页加载完毕后</li><li><code>onfocus</code>                    获取焦点</li><li><code>onblur</code>                      失去焦点</li><li><code>onscroll</code>                  滚动条事件</li><li><code>onchange</code>                  内容改变时触发</li></ol></li><li><h5 id="事件处理程序-添加"><a href="#事件处理程序-添加" class="headerlink" title="事件处理程序-添加"></a>事件处理程序-添加</h5><ol><li><p>HTML事件处理程序 ：把事件直接写在节点上</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">&#x27;alert(1)&#x27;</span>&gt;</span></span><br><span class="line">    我是一个div</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onclick</span>=<span class="string">&#x27;fNum(20,5)&#x27;</span>&gt;</span></span><br><span class="line">    我是一个div</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">fNum</span>(<span class="params">num1,num2</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(num1 + num2);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>缺点：代码耦合</p></li><li><p>DOM 0级事件处理程序：</p><p><code>main.onclick = function()&#123;&#125;</code></p><p>缺点：同样元素的同样事件会被覆盖</p></li><li><p>DOM 2级事件处理程序：</p><p><code>dom对象.addEventListener(事件名称,函数,false|true)</code></p><p>注：事件名称：不需要加入on</p><p>​        false：冒泡</p><p>​        true：捕获</p></li></ol></li><li><h5 id="事件处理程序-删除"><a href="#事件处理程序-删除" class="headerlink" title="事件处理程序-删除"></a>事件处理程序-删除</h5><ol><li><p>DOM 0级删除事件</p><p><code>dom对象.事件名称 = null</code></p></li><li><p>DOM 2级删除事件</p><p><code>dom对象.remove EventListener(事件名称,函数,false|true)</code></p><p>注：要使用一个内存的</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;2级&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line">main.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,fn,<span class="literal">false</span>)</span><br><span class="line">main.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;click&#x27;</span>,fn,<span class="literal">false</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="事件对象-事件委托"><a href="#事件对象-事件委托" class="headerlink" title="事件对象-事件委托"></a>事件对象-事件委托</h5><ol><li><p>事件对象：e</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">mian.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>事件对象的属性</p><ol><li><code>事件对象.target</code>：目标，返回对应的dom对象</li><li><code>clientX</code> ：             当前鼠标的位置距离浏览器左侧的距离</li><li><code>clientY</code>：              当前鼠标的位置距离浏览器顶部的距离</li></ol></li><li><p>事件委托</p><ol><li><p>优点：性能好、即使后添加的内容也有效</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 无事件委托</span></span><br><span class="line"><span class="keyword">var</span> lis = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;lis&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> liLen = lis.<span class="property">length</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;liLen;i++)&#123;</span><br><span class="line">    lis[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> newLi = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">    newLi.<span class="property">innerHTML</span> = <span class="string">&#x27;后添加的&#x27;</span>;</span><br><span class="line">    uls.<span class="title function_">appendChild</span>(newLi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 有事件委托</span></span><br><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> uls = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;uls&#x27;</span>);</span><br><span class="line">btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> newLi = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line">    newLi.<span class="property">innerHTML</span> = <span class="string">&#x27;后添加的&#x27;</span>;</span><br><span class="line">    uls.<span class="title function_">appendChild</span>(newLi);</span><br><span class="line">&#125;</span><br><span class="line">uls.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.<span class="property">target</span>.<span class="property">nodeName</span> == <span class="string">&#x27;LI&#x27;</span>)&#123;</span><br><span class="line">        e.<span class="property">target</span>.<span class="property">style</span>.<span class="property">background</span> = <span class="string">&#x27;red&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol></li><li><h5 id="阻止冒泡-阻止默认行为"><a href="#阻止冒泡-阻止默认行为" class="headerlink" title="阻止冒泡-阻止默认行为"></a>阻止冒泡-阻止默认行为</h5><ol><li><p>阻止事件冒泡</p><p><code>事件对象.stopPropagation()</code></p></li><li><p>阻止默认行为</p><p><code>事件对象.preventDefault()</code></p></li></ol><h4 id="案例：拖拽"><a href="#案例：拖拽" class="headerlink" title="案例：拖拽"></a>案例：拖拽</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.drag</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: pink;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;drag&quot;</span> <span class="attr">class</span>=<span class="string">&quot;drag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 三个事件</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 鼠标按下：onmousedown</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 鼠标移动：onmouseover|onmousemove</span></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 鼠标方式：onmouseup</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> drag = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;drag&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  drag.<span class="property">onmousedown</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 按下时候鼠标位置距离浏览器左侧的距离 - 盒子左侧距离浏览器的位置</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> x = e.<span class="property">clientX</span> - drag.<span class="property">offsetLeft</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 按下时候鼠标位置距离浏览器顶部的距离 - 盒子顶部距离浏览器的位置</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> y = e.<span class="property">clientY</span> - drag.<span class="property">offsetTop</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 鼠标距离浏览器左侧的距离值</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> l = e.<span class="property">clientX</span> - x;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// 鼠标距离浏览器顶部的距离值</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> t = e.<span class="property">clientY</span> - y;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (l &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        l = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;<span class="keyword">else</span> <span class="keyword">if</span> (l &gt; <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> - drag.<span class="property">offsetWidth</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        l = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> - drag.<span class="property">offsetWidth</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (t &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        t = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">      &#125;<span class="keyword">else</span> <span class="keyword">if</span> (t &gt; <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span> - drag.<span class="property">offsetHeight</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        t = <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span> - drag.<span class="property">offsetHeight</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      drag.<span class="property">style</span>.<span class="property">left</span> = l + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">      drag.<span class="property">style</span>.<span class="property">top</span> = t + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  drag.<span class="property">onmouseup</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">onmousemove</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="案例：放大镜"><a href="#案例：放大镜" class="headerlink" title="案例：放大镜"></a>案例：放大镜</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>放大镜<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    * &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.u-l</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.mian</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin</span>: <span class="number">150px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.s-img</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.s-img</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.s-img</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">opacity</span>: <span class="number">0.5</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.p-img</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-left</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.p-img</span> <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span> <span class="attr">id</span>=<span class="string">&quot;main&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 小图 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;s-img u-l&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sImg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/400.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;lens&quot;</span> <span class="attr">id</span>=<span class="string">&quot;lens&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 大图 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p-img u-l&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pImg&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;images/800.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;picImg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 小盒子</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> sImg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sImg&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 阴影</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> lens = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;lens&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 大盒子</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> pImg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pImg&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// main节点</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> main = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;main&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 大图片</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> picImg = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;picImg&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// 给小盒子加入鼠标移入事件，让阴影和大盒子显示</span></span></span><br><span class="line"><span class="language-javascript">  sImg.<span class="property">onmouseover</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    lens.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    pImg.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;block&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  sImg.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 当前鼠标的位置 - 盒子距离浏览器左侧的偏移 - 阴影宽度的一半</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> x = e.<span class="property">clientX</span> - main.<span class="property">offsetLeft</span> - lens.<span class="property">offsetWidth</span> / <span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> y = e.<span class="property">clientY</span> - main.<span class="property">offsetTop</span> - lens.<span class="property">offsetHeight</span> / <span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      x = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (x &gt; sImg.<span class="property">offsetWidth</span> - lens.<span class="property">offsetWidth</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      x = sImg.<span class="property">offsetWidth</span> - lens.<span class="property">offsetWidth</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (y &lt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      y = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (y &gt; sImg.<span class="property">offsetHeight</span> - lens.<span class="property">offsetHeight</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      y = sImg.<span class="property">offsetHeight</span> - lens.<span class="property">offsetHeight</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 阴影位置</span></span></span><br><span class="line"><span class="language-javascript">    lens.<span class="property">style</span>.<span class="property">left</span> = x + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    lens.<span class="property">style</span>.<span class="property">top</span> = y + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 大图片位置</span></span></span><br><span class="line"><span class="language-javascript">    picImg.<span class="property">style</span>.<span class="property">left</span> = -x * <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    picImg.<span class="property">style</span>.<span class="property">top</span> = -y * <span class="number">2</span> + <span class="string">&#x27;px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  sImg.<span class="property">onmouseout</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    lens.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    pImg.<span class="property">style</span>.<span class="property">display</span> = <span class="string">&#x27;none&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="十八、正则表达式"><a href="#十八、正则表达式" class="headerlink" title="十八、正则表达式"></a>十八、正则表达式</h3><ol><li><h5 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式"></a>什么是正则表达式</h5><p>规则表达式</p></li><li><h5 id="正则的使用"><a href="#正则的使用" class="headerlink" title="正则的使用"></a>正则的使用</h5><ol><li><p>定义</p><p>字面量：&#x2F;&#x2F;</p><p>构造函数：<code>new RegExp()</code></p></li><li><p>区别</p><p><code>new RegEep()</code>  放入变量</p></li></ol></li><li><h5 id="正则的方法"><a href="#正则的方法" class="headerlink" title="正则的方法"></a>正则的方法</h5><ol><li><p><code>test()</code>：检测一个内容是否与正则匹配</p><p>如果匹配返回true</p><p>如果不匹配返回false</p></li><li><p><code>exec()</code>：检测一个内容是否与正则匹配</p><p>如果匹配返回数组</p><p>如果不匹配返回null</p></li></ol></li><li><h5 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h5><table><thead><tr><th align="center">元字符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">[]</td><td align="center">匹配中括号内的任意一个字符、<strong>验证手机号</strong>   <code>[abc]</code></td></tr><tr><td align="center">[^]</td><td align="center">除了中括号内任意字符、 <code>[^abc]</code></td></tr><tr><td align="center">[0-9]</td><td align="center">匹配数字0-9范围的</td></tr><tr><td align="center"></td><td align="center">[a-z]   [A-Z]   [a-zA-Z]</td></tr><tr><td align="center">\d</td><td align="center">匹配数字[0-9]</td></tr><tr><td align="center">\D</td><td align="center">匹配非数字</td></tr><tr><td align="center">\w</td><td align="center">匹配数字、字母、下划线   <code>[a-zA-Z0-9_]</code></td></tr><tr><td align="center">\W</td><td align="center">匹配非数字、字母、下划线</td></tr><tr><td align="center">\s</td><td align="center">匹配空格</td></tr><tr><td align="center">\S</td><td align="center">匹配非空格</td></tr><tr><td align="center">\b</td><td align="center">匹配边界</td></tr><tr><td align="center">\B</td><td align="center">匹配非边界</td></tr><tr><td align="center">.</td><td align="center">匹配除了换行符以外的任意字符</td></tr></tbody></table></li><li><h5 id="转义（-）"><a href="#转义（-）" class="headerlink" title="转义（\）"></a>转义（\）</h5><p><code>/\./</code>   失去原有功能</p></li><li><h5 id="选择符"><a href="#选择符" class="headerlink" title="选择符"></a>选择符</h5><p>|：或</p></li><li><h5 id="修饰符"><a href="#修饰符" class="headerlink" title="修饰符"></a>修饰符</h5><table><thead><tr><th align="center">修饰符</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">i</td><td align="center">不区分大小写  <code>/[a-z]/i</code> &#x3D; <code>/[a-zA-Z]/</code></td></tr><tr><td align="center">g</td><td align="center">全文匹配</td></tr><tr><td align="center">m（不常用）</td><td align="center"></td></tr></tbody></table><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/菜B|大爷/g</span>;</span><br><span class="line"><span class="keyword">if</span>(reg.<span class="title function_">test</span>(val))&#123;</span><br><span class="line">    val = val.<span class="title function_">replace</span>(reg,<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="字符串方法可以配合正则去用"><a href="#字符串方法可以配合正则去用" class="headerlink" title="字符串方法可以配合正则去用"></a>字符串方法可以配合正则去用</h5><p>replace</p><p>match：类似于exec、查找返回对应的值【值是数组】、没有找到返回null、支持全局</p></li><li><h5 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h5><p>^    开始</p><p>$    结束</p><p>验证手机号的时候：11位数字</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 以数字1开头</span></span><br><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/^1/</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以数字1开始，以数字结束</span></span><br><span class="line"><span class="comment">// 数字1后面必须是一位的数字</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="regexp">/^1\d$/</span>;</span><br></pre></td></tr></table></figure></li><li><h5 id="重复"><a href="#重复" class="headerlink" title="重复"></a>重复</h5><table><thead><tr><th align="center">符号</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">{n}</td><td align="center">重复n次</td></tr><tr><td align="center">{n,}</td><td align="center">重复最少n次、最多不限</td></tr><tr><td align="center">{n,m}</td><td align="center">重复最少n次、最多m次</td></tr><tr><td align="center">*</td><td align="center">重复最少0次、最多不限</td></tr><tr><td align="center">+</td><td align="center">重复最好1次、最多不限</td></tr><tr><td align="center">?</td><td align="center">重复最好0次、最多1次</td></tr></tbody></table></li><li><h5 id="贪婪模式"><a href="#贪婪模式" class="headerlink" title="贪婪模式"></a>贪婪模式</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/\d&#123;3,6&#125;/g</span>;</span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;123456789&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">replace</span>(reg1,<span class="string">&#x27;*&#x27;</span>));</span><br><span class="line"><span class="comment">// ******789</span></span><br></pre></td></tr></table></figure></li><li><h5 id="非贪婪模式（懒惰模式）"><a href="#非贪婪模式（懒惰模式）" class="headerlink" title="非贪婪模式（懒惰模式）"></a>非贪婪模式（懒惰模式）</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/\d&#123;3,6&#125;?/g</span>;</span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;123456789&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">replace</span>(reg1,<span class="string">&#x27;*&#x27;</span>));</span><br><span class="line"><span class="comment">// ***456789</span></span><br></pre></td></tr></table></figure></li><li><h5 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h5><p>()    把部分内容组合在一起</p></li><li><h5 id="字符类：来获取分组"><a href="#字符类：来获取分组" class="headerlink" title="字符类：来获取分组"></a>字符类：来获取分组</h5><p>$1   第一个分组</p><p>$2   第二个分组</p><p>$3   第三个分组</p><p>…</p></li><li><h5 id="前瞻-和-后顾"><a href="#前瞻-和-后顾" class="headerlink" title="前瞻  和  后顾"></a>前瞻  和  后顾</h5><p>js正则没有后顾</p><ol><li><p>正向前瞻：（?&#x3D;）：匹配符合的</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 看一看 \d（数字）后面的是不是字母，是字母匹配到</span></span><br><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/\d(?=[a-z])/g</span>;</span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;1a2b*%3cdddd5&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">replace</span>(reg1,<span class="string">&#x27;*&#x27;</span>));</span><br><span class="line"><span class="comment">// *a*b*%*cdddd5</span></span><br></pre></td></tr></table></figure><p><code>/(?=.*\d)/</code>  开始字符后必须是数字</p></li><li><p>负向前瞻：（?!）：匹配不符合的</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 看一看 \d不是字母，可以匹配到</span></span><br><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/\d(?![a-z])/g</span>;</span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;1a2b*%3cdddd5&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">replace</span>(reg1,<span class="string">&#x27;*&#x27;</span>));</span><br><span class="line"><span class="comment">// 1a2b*%3cdddd*</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><h4 id="案例：验证表单"><a href="#案例：验证表单" class="headerlink" title="案例：验证表单"></a>案例：验证表单</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        * &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.register</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.reg-item</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">398px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.reg-item</span> <span class="selector-tag">label</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">87px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">         &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.reg-item</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">288px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.reg-error</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-top</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;register&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span> <span class="attr">ID</span>=<span class="string">&quot;tel&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-error&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="comment">&lt;!-- *输入有误 --&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-item&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-error&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="comment">&lt;!-- *只能输入4-20位，且只能包含字母、数字、下划线 --&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> tel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;tel&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> userName = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userName&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> telError = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.reg-error:nth-child(1) span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> userNameError = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.reg-error:nth-child(2) span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    tel.<span class="property">oninput</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> reg = <span class="regexp">/^1[34578]\d&#123;9&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">fMag</span>(<span class="variable language_">this</span>,reg,<span class="string">&#x27;请输入正确的手机号&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    userName.<span class="property">oninput</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> reg = <span class="regexp">/^[a-zA-Z0-9_]&#123;4,20&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">fMag</span>(<span class="variable language_">this</span>,reg,<span class="string">&#x27;请输入4-20位，且只能包含字母、数字、下划线&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 后续提示信息</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fMag</span>(<span class="params">that,reg,errormsg</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> span = that.<span class="property">parentNode</span>.<span class="property">parentNode</span>.<span class="property">children</span>[<span class="number">1</span>].<span class="title function_">querySelector</span>(<span class="string">&quot;span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(reg.<span class="title function_">test</span>(that.<span class="property">value</span>))&#123;</span></span><br><span class="line"><span class="language-javascript">            span.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;green&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            span.<span class="property">innerHTML</span> = <span class="string">&quot;*正确&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">            span.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">            span.<span class="property">innerHTML</span> = errormsg;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="案例：验证表单-验证码"><a href="#案例：验证表单-验证码" class="headerlink" title="案例：验证表单+验证码"></a>案例：验证表单+验证码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">* &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.register</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.reg-item</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">398px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin</span>: <span class="number">30px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.reg-item</span> <span class="selector-tag">label</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">87px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.reg-item</span> <span class="selector-tag">input</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">288px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.reg-error</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">padding-top</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>: orange;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.reg-success</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.success</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css"><span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background</span>: pink;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css"><span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">cursor</span>: pointer;</span></span><br><span class="line"><span class="language-css"><span class="attribute">letter-spacing</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">&quot;register&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>手机号<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入手机号&quot;</span> <span class="attr">ID</span>=<span class="string">&quot;tel&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-error&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="comment">&lt;!-- *输入有误 --&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-item&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">id</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;reg-error&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="comment">&lt;!-- *只能输入4-20位，且只能包含字母、数字、下划线 --&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;reg-item&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;reg-success&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span>验证码<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入验证码&quot;</span> <span class="attr">id</span>=<span class="string">&quot;code&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&#x27;success&#x27;</span>&gt;</span>1234<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;reg-error&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;codeError&quot;</span>&gt;</span><span class="comment">&lt;!-- *只能输入4位，必须有数字--&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">//验证码===》随机（点击可以换）  4位数字</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> tel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;tel&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> userName = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;userName&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> telError = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.reg-error:nth-child(1) span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> userNameError = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.reg-error:nth-child(2) span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> success = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.reg-success span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> code = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;code&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">tel.<span class="property">oninput</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> reg = <span class="regexp">/^1[34578]\d&#123;9&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">fMag</span>(<span class="variable language_">this</span>, reg, <span class="string">&#x27;请输入正确的手机号&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">userName.<span class="property">oninput</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> reg = <span class="regexp">/^[a-zA-Z0-9_]&#123;4,20&#125;$/</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="title function_">fMag</span>(<span class="variable language_">this</span>, reg, <span class="string">&#x27;请输入4-20位，且只能包含字母、数字、下划线&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">code.<span class="property">oninput</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> reg = <span class="regexp">/^\d&#123;4&#125;$/</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">fMag</span>(<span class="variable language_">this</span>, reg, <span class="string">&#x27;请输入4位数字&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// console.log(this.value)</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// console.log(success.innerHTML)</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 和验证码匹配</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> codeError = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;codeError&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(codeError)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 判断验证码是否正确</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">value</span> === success.<span class="property">innerHTML</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">codeError.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;green&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">codeError.<span class="property">innerHTML</span> = <span class="string">&quot;*正确&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">codeError.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">codeError.<span class="property">innerHTML</span> = <span class="string">&quot;验证码错误&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 页面加载刷新验证码</span></span></span><br><span class="line"><span class="language-javascript">success.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 点击验证码刷新</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">this</span>.<span class="property">innerHTML</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>().<span class="title function_">substr</span>(<span class="number">2</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 后续提示信息</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">fMag</span>(<span class="params">that, reg, errormsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> span = that.<span class="property">parentNode</span>.<span class="property">parentNode</span>.<span class="property">children</span>[<span class="number">1</span>].<span class="title function_">querySelector</span>(<span class="string">&quot;span&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 对验证码实时验证</span></span></span><br><span class="line"><span class="language-javascript">success.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 点击验证码刷新</span></span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">this</span>.<span class="property">innerHTML</span> = <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>().<span class="title function_">substr</span>(<span class="number">2</span>, <span class="number">4</span>);</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">innerHTML</span> == that.<span class="property">value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">span.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;green&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">span.<span class="property">innerHTML</span> = <span class="string">&quot;*正确&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">span.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">span.<span class="property">innerHTML</span> = <span class="string">&quot;验证码错误&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">if</span> (reg.<span class="title function_">test</span>(that.<span class="property">value</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">span.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;green&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">span.<span class="property">innerHTML</span> = <span class="string">&quot;*正确&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">span.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;red&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">span.<span class="property">innerHTML</span> = errormsg;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="案例：手机号钝点"><a href="#案例：手机号钝点" class="headerlink" title="案例：手机号钝点"></a>案例：手机号钝点</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;tel&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> tel = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;tel&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fTelFormat</span>(<span class="params">tel</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> tel.<span class="title function_">replace</span>(<span class="regexp">/(\d&#123;3&#125;)(\d&#123;4&#125;)(\d&#123;4&#125;)/</span>, <span class="string">&#x27;$1 $2 $3&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    tel.<span class="property">innerHTML</span> = <span class="title function_">fTelFormat</span>(<span class="string">&#x27;18511773322&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fTelFormat</span>(<span class="string">&#x27;18511773322&#x27;</span>))</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="十九、作用域"><a href="#十九、作用域" class="headerlink" title="十九、作用域"></a>十九、作用域</h3><ol><li><h5 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h5><p>作用的区域或者作用的范围 </p><p>全局作用域，全局就是window</p><p>在全局作用域下写的变量：没有区别，都属于window对象的属性</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;123’;</span></span><br><span class="line"><span class="string">window.str2 = &#x27;</span><span class="number">123</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string">str3 = &#x27;</span><span class="number">123</span><span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure><p>在局部作用写变量</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 声明局部变量</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;123’;</span></span><br><span class="line"><span class="string">// 声明全局变量</span></span><br><span class="line"><span class="string">window.str2 = &#x27;</span><span class="number">123</span><span class="string">&#x27;;</span></span><br><span class="line"><span class="string">// 声明全局变量</span></span><br><span class="line"><span class="string">str3 = &#x27;</span><span class="number">123</span><span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h5><p>从内部向外链：从当前作用域开始找，如果找不到向外作用域找，当找到返回，</p></li><li><h5 id="悬挂变量声明（变量提升）"><a href="#悬挂变量声明（变量提升）" class="headerlink" title="悬挂变量声明（变量提升）"></a>悬挂变量声明（变量提升）</h5><p>解释：js提升所有的变量声明，将他们移到其作用域的开头</p></li><li><h5 id="顺序、优先级"><a href="#顺序、优先级" class="headerlink" title="顺序、优先级"></a>顺序、优先级</h5><p>变量 &gt;  函数 &gt; 参数 &gt; 变量提升</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">c</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(b);   <span class="comment">// undefined</span></span><br><span class="line">        <span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(b);   <span class="comment">// 2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">a</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b);       <span class="comment">// 1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="二十、严格模式：use-strict"><a href="#二十、严格模式：use-strict" class="headerlink" title="二十、严格模式：use strict"></a>二十、严格模式：use strict</h3><ol><li><h5 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h5><ol><li><p>针对于整个文件【全局】</p><p>文件开头（第一行）写入 <code>use strict</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>针对单个函数【局部】</p><p>函数内开头（第一行）写入 <code>use strict</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h5><ol><li><p>变量声明问题：var | window、如果写法是：str &#x3D; 123; 就报错</p></li><li><p>禁止this关键字指向全局对象</p></li><li><p>重名问题，函数不能有重名的参数</p></li><li><p>arguments对象不能赋值</p></li></ol></li></ol><h3 id="二十二、递归函数：自己调用自己"><a href="#二十二、递归函数：自己调用自己" class="headerlink" title="二十二、递归函数：自己调用自己"></a>二十二、递归函数：自己调用自己</h3><p><strong>注：一定要有结束条件，如果没有结束条件就变成死循环</strong></p><ol><li><h5 id="数组扁平化"><a href="#数组扁平化" class="headerlink" title="数组扁平化"></a>数组扁平化</h5><p>[‘a’,’b’,’c’,[‘d’,’e’,[‘f’,’q’]]]</p><p>把多维数组变成一维</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="comment">// 弄一个空数组</span></span><br><span class="line">    <span class="keyword">var</span> result = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; arr.<span class="property">length</span>;i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> arr[i] == <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">// [&#x27;d&#x27;,&#x27;e&#x27;]</span></span><br><span class="line">            <span class="comment">// [&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;].合并([&#x27;d&#x27;,&#x27;e&#x27;])</span></span><br><span class="line">            result = result.<span class="title function_">concat</span>(<span class="title function_">fun</span>(arr[i]));</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            result.<span class="title function_">push</span>(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun</span>([<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,[<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>]]));</span><br></pre></td></tr></table></figure></li><li><h5 id="斐波那契算法"><a href="#斐波那契算法" class="headerlink" title="斐波那契算法"></a>斐波那契算法</h5><p>有一对兔子，从生出的第三个月起每个月会生一对兔子，小兔子长到第三个月后每个月也会生一对兔子，假如兔子不死，那么第N个月有多少对兔子？</p><p><strong>分析：1 1 2 3 5 13 21 …</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 第n个月兔子的总对数 = 第n-1个月的总数+第n-2个月的总数</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">fun</span>(n-<span class="number">1</span>) + <span class="title function_">fun</span>(n-<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="走楼梯"><a href="#走楼梯" class="headerlink" title="走楼梯"></a>走楼梯</h5><p>一共10级楼梯，每次可以走一步或者可以走二步，求一共多少种走法</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(n &gt; <span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">fun</span>(n-<span class="number">1</span>) + <span class="title function_">fun</span>(n-<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="二十三、闭包"><a href="#二十三、闭包" class="headerlink" title="二十三、闭包"></a>二十三、闭包</h3><ol><li><h5 id="块级作用域"><a href="#块级作用域" class="headerlink" title="块级作用域"></a>块级作用域</h5><p>只有var没有块级作用域，let和const有块级作用域</p></li><li><h5 id="作用域和作用域链"><a href="#作用域和作用域链" class="headerlink" title="作用域和作用域链"></a>作用域和作用域链</h5><p>当函数声明的时候，函数会通过内部属性，scope来记录创建范围</p></li><li><h5 id="闭包"><a href="#闭包" class="headerlink" title="闭包"></a>闭包</h5><ol><li><p>什么是闭包</p><p>闭包是一个函数加上到创建函数的作用域的连接，闭包就是“关闭”了函数的自由变量</p><p>简单理解：</p><p>有两个函数，作用域是连接关系【scope】，变量不自由，会停留在内存中，不会销毁</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">n</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params">m</span>) &#123;</span><br><span class="line">        n += m;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> f = <span class="title function_">fun</span>(<span class="number">5</span>);</span><br><span class="line"><span class="title function_">f</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="闭包可以做什么？无意间共享环境"><a href="#闭包可以做什么？无意间共享环境" class="headerlink" title="闭包可以做什么？无意间共享环境"></a>闭包可以做什么？无意间共享环境</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> lis = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; lis.<span class="property">length</span>;i++) &#123;</span><br><span class="line">    lis[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 此处打印会是3 3 3，而期望打印0 1 2 ，因为在打印变量i时内部没有i他会向外找i当找到i时已经执行完了</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> lis = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i &lt; lis.<span class="property">length</span>;i++) &#123;</span><br><span class="line">    (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> idx = i;</span><br><span class="line">        lis[i].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(idx);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 自执行函数</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="二十三、undefined和null区别-instanceof"><a href="#二十三、undefined和null区别-instanceof" class="headerlink" title="二十三、undefined和null区别-instanceof"></a>二十三、undefined和null区别-instanceof</h3><ol><li><h5 id="回顾数据类型"><a href="#回顾数据类型" class="headerlink" title="回顾数据类型"></a>回顾数据类型</h5><ol><li><p>原始数据类型（基本数据类型）</p><p>字符串、数值、布尔、undefined、null</p></li><li><p>引用数据类型</p><p>对象：object</p></li><li><p>基本和引用的区别：每个对象都有唯一的标识，并且（<strong>严格地</strong>）等于自身。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1 === str2);</span><br><span class="line"><span class="comment">// false</span></span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h5><p>undefined：未定义</p><p>null：没有对象</p><p>先设计的null，后设计的undefined</p><p>JavaScript的最初版本是这样区分的：null是一个表示 ”无“ 的对象（空对象指针），转为数值时为0；undefined是一个表示 ”无“ 的原始值，转为数值时为NaN。</p><p>注意null的问题：typeof null 返回 ‘object’ 是一个无法修复的错误</p></li><li><h5 id="检测类型"><a href="#检测类型" class="headerlink" title="检测类型"></a>检测类型</h5><ol><li><p><code>typeof</code>：检测基本类型</p></li><li><p><code>instanceof</code>：检测引用类型、对象、返回布尔类型</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 语法格式</span></span><br><span class="line">检测的数据类型 <span class="keyword">instanceof</span> 所属构造函数名称</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="二十四、对象"><a href="#二十四、对象" class="headerlink" title="二十四、对象"></a>二十四、对象</h3><ol><li><h5 id="字面量形式"><a href="#字面量形式" class="headerlink" title="字面量形式"></a>字面量形式</h5><p><code>var obj = &#123;&#125;</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取对象的属性对应的值</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">userName</span>:<span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">userName</span>);</span><br></pre></td></tr></table></figure></li><li><h5 id="构造函数形式"><a href="#构造函数形式" class="headerlink" title="构造函数形式"></a>构造函数形式</h5><p>注：构造函数的首字母要大写</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">userName</span> = <span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">run</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">123</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Fun</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">userName</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="title function_">run</span>());</span><br></pre></td></tr></table></figure></li><li><h5 id="Object-create"><a href="#Object-create" class="headerlink" title="Object.create()"></a><code>Object.create()</code></h5><p>创建一个新的对象，使用现有的对象来提供创建的对象的原型</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = <span class="title class_">Object</span>.<span class="title function_">create</span>(<span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br></pre></td></tr></table></figure></li><li><h5 id="设置属性"><a href="#设置属性" class="headerlink" title="设置属性"></a>设置属性</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span>,</span><br><span class="line">    <span class="number">5</span>:<span class="string">&#x27;你好&#x27;</span>,</span><br><span class="line">&#125;;</span><br><span class="line">obj.<span class="property">userName</span> = <span class="string">&#x27;张三&#x27;</span>;</span><br></pre></td></tr></table></figure><p>检测对象是否有该属性</p><ol><li><p>in：<code>属性名称 in 对象</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;userName&#x27;</span> <span class="keyword">in</span> obj;</span><br><span class="line"><span class="comment">// 返回布尔值</span></span><br></pre></td></tr></table></figure></li><li><p>hasOwnProperty：<code>对象.hasOwnProperty</code></p><p>判断对象自身是否有某个属性</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">obj.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;sex&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>区别</p><p>in 可以检测对象自身属性也可以检测原型的属性、hasOwnProperty无法检测原型</p></li></ol></li><li><h5 id="删除属性"><a href="#删除属性" class="headerlink" title="删除属性"></a>删除属性</h5><p><code>delete 对象.属性</code></p><p>注：对象即使没有这个属性，也不会报错，是返回undefined</p></li><li><h5 id="get-set"><a href="#get-set" class="headerlink" title="get-set"></a>get-set</h5><p>get：读</p><p>set：写</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">changeName</span>() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span> <span class="title function_">changeName</span>(<span class="params">val</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = val;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">obj.<span class="property">changeName</span> = <span class="string">&#x27;李四&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj.<span class="property">changeName</span>);   <span class="comment">// 张三   // 李四</span></span><br></pre></td></tr></table></figure></li><li><h5 id="序列化对象"><a href="#序列化对象" class="headerlink" title="序列化对象"></a>序列化对象</h5><p><strong>对象 转化成 字符串：<code>JSON.stringify()</code></strong></p><p><strong>字符串 转化成 对象：<code>JSON.parse()</code></strong></p></li><li><h5 id="遍历对象"><a href="#遍历对象" class="headerlink" title="遍历对象"></a>遍历对象</h5><ol><li><p><code>for...in</code></p><p>key：就是属性名【键名】</p><p>obj[key]：就是值【键值】</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="attr">c</span>:<span class="number">3</span>,</span><br><span class="line">    <span class="attr">fun</span>:<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        retuen <span class="number">111</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(key); <span class="comment">// a b c fun</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(obj[key]); <span class="comment">// 1 2 3 function()&#123;return 111&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>Object.keys()、Object.values()</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="attr">c</span>:<span class="number">3</span>,</span><br><span class="line">    <span class="attr">fun</span>:<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        retuen <span class="number">111</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="title class_">Object</span>.<span class="title function_">keys</span>(obj) );</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="title class_">Object</span>.<span class="title function_">values</span>(obj) );</span><br><span class="line"><span class="comment">// 返回数组</span></span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="合并对象"><a href="#合并对象" class="headerlink" title="合并对象"></a>合并对象</h5><ol><li><p><code>Object.assign(target,obj1,obj2...)</code></p><p>target：合并对象，复制目标对象</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">    <span class="attr">a</span>:<span class="number">1</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">    <span class="attr">b</span>:<span class="number">2</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">assign</span>( obj1,obj2 );</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj1 );  <span class="comment">// &#123; a:1, b:2 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> o = <span class="title class_">Object</span>.<span class="title function_">assign</span>( &#123;&#125;,obj1,obj2 );</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( o );  <span class="comment">// &#123; a:1, b:2 &#125;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="this指向"><a href="#this指向" class="headerlink" title="this指向"></a>this指向</h5><p>this 指的是函数运行时所在的 “环境”</p><p>原理：js语言设计 this，是跟内存的数据结构有关系，函数可以在不同的环境运行执行，所以就需要一种机制，能够在函数体内获取当前函数的运行环境。</p><p>this 的设计目的就是在函数体内，指向函数当前的运行环境。</p><p>补充：引擎会将函数单独保存在内存中</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">x</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="attr">run</span>:<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// 要是想让this指向函数，添加下面的代码</span></span><br><span class="line">        <span class="comment">// var that = this;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">x</span>; <span class="comment">// 这里的this 代表window了，值为1</span></span><br><span class="line">            <span class="comment">// return that.x;</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj.<span class="title function_">run</span>()() )</span><br><span class="line"><span class="comment">// 等同于</span></span><br><span class="line"><span class="keyword">var</span> f = obj.<span class="title function_">run</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="title function_">f</span>() );</span><br></pre></td></tr></table></figure></li><li><h5 id="改变this指向–call、apply、bind"><a href="#改变this指向–call、apply、bind" class="headerlink" title="改变this指向–call、apply、bind"></a>改变this指向–call、apply、bind</h5><p>是所有函数都具有的方法</p><p>函数也是对象，函数具有方法</p><ol><li><p><code>call(参数1,参数2,参数3...)</code></p><p>参数1：调用函数时，内部this的具有值</p><p>剩余的参数（参数2,参数3…）就是函数的参数</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">x</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="attr">run</span>:<span class="keyword">function</span>(<span class="params">val</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">x</span> + val;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj.<span class="title function_">run</span>(<span class="string">&#x27;你好&#x27;</span>) );</span><br><span class="line"><span class="keyword">var</span> f = obj.<span class="property">run</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( f.<span class="title function_">call</span>(obj,<span class="string">&#x27;大家好&#x27;</span>) );</span><br></pre></td></tr></table></figure></li><li><p><code>apply(参数1,[参数值1,参数值2,参数值3])</code></p><p>参数1：调用函数时，内部this的具有值</p><p>参数2：是一个数组，其中数组每一个值代表了函数的参数</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( f.<span class="title function_">apply</span>(obj,[<span class="string">&#x27;大家好&#x27;</span>]) );</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="title class_">Math</span>.<span class="title function_">max</span>(...[<span class="number">3</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">99</span>,<span class="number">55</span>]) );          <span class="comment">// 99</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>,[<span class="number">3</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">99</span>,<span class="number">55</span>]) );  <span class="comment">// 99</span></span><br></pre></td></tr></table></figure></li><li><p><code>bind(参数1,参数2,参数3...)</code></p><p>参数1：调用函数时，内部this的具有值</p><p>剩余的参数（参数2,参数3…）就是函数的参数</p><p>注：bind会返回一个函数，所以要加一个（）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">console.bind( f.call(obj,&#x27;大家好&#x27;)() );</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="二十五、对象模式"><a href="#二十五、对象模式" class="headerlink" title="二十五、对象模式"></a>二十五、对象模式</h3><ol><li><h5 id="工厂模式"><a href="#工厂模式" class="headerlink" title="工厂模式"></a>工厂模式</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这是一个厂子</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 这是人</span></span><br><span class="line">    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">    o.<span class="property">name</span> = <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line">    <span class="comment">// 最终要返回一个对象</span></span><br><span class="line">    <span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="title function_">fun</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 这是一个厂子</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">cName</span>) &#123;</span><br><span class="line">    <span class="comment">// 这是人</span></span><br><span class="line">    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line">    o.<span class="property">name</span> = cName;</span><br><span class="line">    <span class="comment">// 最终要返回一个对象</span></span><br><span class="line">    <span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="title function_">fun</span>(<span class="string">&#x27;张三&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="title function_">fun</span>(<span class="string">&#x27;李四&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj1,obj2 );</span><br></pre></td></tr></table></figure></li><li><h5 id="构造函数-1"><a href="#构造函数-1" class="headerlink" title="构造函数"></a>构造函数</h5><p>就是普通函数、只不过首字母要大写，函数内可以有 this，这个 this 指向 new 出来的对象</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 普通函数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Fun</span>(); <span class="comment">// 实例化</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj );</span><br></pre></td></tr></table></figure></li><li><h5 id="原型模式（prototype）"><a href="#原型模式（prototype）" class="headerlink" title="原型模式（prototype）"></a>原型模式（prototype）</h5><ol><li><strong>函数拥有prototype属性|对象</strong></li><li><strong>共享的属性和方法放在prototype中，不共享的放在构造函数中</strong></li><li><strong>new 缺点：无法共享属性和方法</strong></li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 不共享</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">run</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">111</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 共享</span></span><br><span class="line"><span class="comment">// Fun.prototype.person = function() &#123;</span></span><br><span class="line"><span class="comment">//     return 222;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="title class_">Fun</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">    <span class="attr">person</span>:<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        retuen <span class="number">222</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> <span class="title class_">Fun</span>();</span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="keyword">new</span> <span class="title class_">Fun</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj1.<span class="property">run</span> === obj2.<span class="property">run</span> );         <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj1.<span class="property">person</span> === obj2.<span class="property">oerson</span> );   <span class="comment">// true</span></span><br></pre></td></tr></table></figure></li><li><h5 id="函数与对象的原型关系"><a href="#函数与对象的原型关系" class="headerlink" title="函数与对象的原型关系"></a>函数与对象的原型关系</h5><p>函数有：<code>prototype</code></p><p>对象有：<code>__proto__</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Fun</span>();</span><br><span class="line"><span class="comment">// Fun 是一个函数</span></span><br><span class="line"><span class="comment">// obj 是一个对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj.<span class="property">name</span> );</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><h5 id="new-具体做了什么事"><a href="#new-具体做了什么事" class="headerlink" title="new 具体做了什么事"></a>new 具体做了什么事</h5><ol><li><p>创建一个对象 <code>new Object()</code></p></li><li><p>原型赋值【指向共同一个原型对象】</p><p><code>对象.__proto__ = Fun.prototype</code></p></li><li><p>改变this指向</p></li></ol></li><li><h5 id="浅拷贝和深拷贝"><a href="#浅拷贝和深拷贝" class="headerlink" title="浅拷贝和深拷贝"></a>浅拷贝和深拷贝</h5><ol><li><p>什么叫拷贝</p><p>复制</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = a;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( a,b );  <span class="comment">// 10 10</span></span><br><span class="line">a = <span class="number">200</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( a,b );  <span class="comment">// 200 10</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引用类型，引用传递 </span></span><br><span class="line"><span class="keyword">var</span> o = &#123;<span class="attr">a</span>:<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> m = o;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( o.<span class="property">a</span>,m.<span class="property">a</span> );  <span class="comment">// 1 1</span></span><br><span class="line">o.<span class="property">a</span> = <span class="string">&#x27;你好&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( o.<span class="property">a</span>,m.<span class="property">a</span> );  <span class="comment">// 你好 你好</span></span><br></pre></td></tr></table></figure></li><li><h5 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h5><p>只复制一层对象，当对象的属性是引用类型时，实质上复制的其引用，当引用指向的值发生变化的时候，原对象的属性也会跟着变化。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">a</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>:&#123;</span><br><span class="line">        <span class="attr">a</span>:<span class="string">&#x27;你好&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> m = &#123;&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        m[k] = obj[k]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> createObj = <span class="title function_">fun</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( createObj.<span class="property">b</span> );  <span class="comment">// &#123;a:&quot;你好&quot;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( createObj.<span class="property">b</span>.<span class="property">a</span> );  <span class="comment">// 你好</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj.<span class="property">b</span>.<span class="property">a</span> );  <span class="comment">// 你好</span></span><br><span class="line"></span><br><span class="line">createObj.<span class="property">b</span>.<span class="property">a</span> = <span class="string">&#x27;222&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( createObj.<span class="property">b</span>.<span class="property">a</span> );  <span class="comment">// 222</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj.<span class="property">b</span>.<span class="property">a</span> );  <span class="comment">// 222</span></span><br></pre></td></tr></table></figure><p><code>Object.assign()</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    <span class="attr">a</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>:&#123;</span><br><span class="line">        <span class="attr">a</span>:<span class="string">&#x27;你好&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> m = <span class="title class_">Object</span>.<span class="title function_">assign</span>(&#123;&#125;,o); <span class="comment">// &#123;a:1, b:&#123;a:&#x27;你好&#x27;&#125;&#125;   &#123;a:1, b:&#123;a:&#x27;你好&#x27;&#125;&#125;</span></span><br><span class="line">m.<span class="property">b</span>.<span class="property">a</span> = <span class="string">&#x27;不好&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="number">0</span>,m )           <span class="comment">// &#123;a:1, b:&#123;a:&#x27;不好&#x27;&#125;&#125;   &#123;a:1, b:&#123;a:&#x27;不好&#x27;&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h5><p>在拷贝的时候，创建新的对象，并把原对象所有的属性都深拷贝到新对象，原属性如果是对象，也会重新创建新的对象并拷贝到新对象属性中，这样旧对象和新对象就是互相独立的，互不影响。、</p><ol><li><p><code>JOSN.parse() + JOSN.stringify</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    <span class="attr">a</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>:&#123;</span><br><span class="line">        <span class="attr">a</span>:<span class="string">&#x27;你好&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> m = <span class="variable constant_">JOSN</span>.<span class="title function_">parse</span>(<span class="variable constant_">JOSN</span>.<span class="title function_">stringify</span>(o));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( o,m );  <span class="comment">// &#123;a:1, b:&#123;a:&#x27;你好&#x27;&#125;&#125;  &#123;a:1, b:&#123;a:&#x27;你好&#x27;&#125;&#125;</span></span><br><span class="line">m.<span class="property">b</span>.<span class="property">a</span> = <span class="string">&#x27;不好&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( o,m );  <span class="comment">// &#123;a:1, b:&#123;a:&#x27;你好&#x27;&#125;&#125;  &#123;a:1, b:&#123;a:&#x27;不好&#x27;&#125;&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>递归</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> o = &#123;</span><br><span class="line">    <span class="attr">a</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>:&#123;</span><br><span class="line">        <span class="attr">a</span>:<span class="string">&#x27;你好&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params">obj</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> m = &#123;&#125;;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> obj == <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> k <span class="keyword">in</span> obj) &#123;</span><br><span class="line">            <span class="keyword">if</span>(obj.<span class="title function_">hasOwnProperty</span>(k)) &#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">typeof</span> obj[k] == <span class="string">&#x27;object&#x27;</span>) &#123;</span><br><span class="line">                    m[k] = <span class="title function_">fun</span>(obj[k]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    m[k] = obj[k];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> createObj = <span class="title function_">fun</span>(obj);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( createObj.<span class="property">b</span> );  <span class="comment">// &#123;a:1, b:&#123;a:&#x27;你好&#x27;&#125;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj.<span class="property">b</span> );        <span class="comment">// &#123;a:1, b:&#123;a:&#x27;你好&#x27;&#125;&#125;</span></span><br><span class="line">createObj.<span class="property">b</span>.<span class="property">a</span> = <span class="string">&#x27;不好&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( createObj.<span class="property">b</span> );  <span class="comment">// &#123;a:1, b:&#123;a:&#x27;不好&#x27;&#125;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj.<span class="property">b</span> );        <span class="comment">// &#123;a:1, b:&#123;a:&#x27;你好&#x27;&#125;&#125;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><h3 id="二十六、原型链–继承"><a href="#二十六、原型链–继承" class="headerlink" title="二十六、原型链–继承"></a>二十六、原型链–继承</h3><p>每一个对象那个都有原型（__ proto __），这个原型还有属于自己的原型，最终形成了原型链。原型链最顶端是null。</p><p>为什么设计原型：继承、让对象的属性和方法实现共享</p><p>函数：prototype</p><p>对象：__ proto __</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240605235342248.png" alt="image-20240605235342248"></p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240605235507875.png" alt="image-20240605235507875"></p><p>如果要查找对象的属性或者方法，我们先要去对象中查找，</p><p>如果没有查找到，要去对象的原型中查找</p><p>如果还没有查找到，要去当前对象的原型的原型中查找</p><p>以此类推……直到找不到，返回undefined</p><ol><li><h5 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h5><p>  儿子         继承                     父亲</p><p><strong><code>Child.prototype = new Parent();</code></strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Parent</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;张三&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Child</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">18</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 把父对象给子原型、实现了原型继承</span></span><br><span class="line"><span class="title class_">Child</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Parent</span>();</span><br><span class="line"><span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="title class_">Child</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj.<span class="property">name</span> );</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240606000652423.png" alt="image-20240606000652423"></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Hero</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;nihao&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">sayMe</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;this is nihao&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Hero</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">name</span> = <span class="string">&#x27;hellow&#x27;</span>;</span><br><span class="line"><span class="title class_">Hero</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sayMe</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;this is hellow&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> hero = <span class="keyword">new</span> <span class="title class_">Hero</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( hero.<span class="property">name</span> );   <span class="comment">// nihao</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( hero.<span class="property">sayMe</span> );  <span class="comment">// function() &#123;alert(&#x27;this is nihao&#x27;);&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">getName = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Foo</span>.<span class="property">getName</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Foo</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getName</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> getName = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Foo</span>.<span class="title function_">getName</span>();        <span class="comment">// 2</span></span><br><span class="line"><span class="title function_">getName</span>();            <span class="comment">// 4</span></span><br><span class="line"><span class="title class_">Foo</span>().<span class="title function_">getName</span>();      <span class="comment">// 1</span></span><br><span class="line"><span class="title function_">getName</span>();            <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Foo</span>().<span class="title function_">getName</span>();  <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240606002840738.png" alt="image-20240606002840738"></p></li><li><h5 id="借用构造函数"><a href="#借用构造函数" class="headerlink" title="借用构造函数"></a>借用构造函数</h5><p>字面量的字符串，new String()</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;123&#x27;</span>          <span class="comment">// string</span></span><br><span class="line"><span class="keyword">var</span> str2 = <span class="keyword">new</span> <span class="title class_">String</span>()   <span class="comment">// 对象</span></span><br><span class="line">str1 借用了<span class="keyword">new</span> <span class="title class_">String</span>的属性和方法</span><br></pre></td></tr></table></figure><p>每次生成一个对象，对象本身的属性和方法不共享</p><p>改变this指向：call、apply、bind</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Parent</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>,name = <span class="string">&#x27;张三&#x27;</span>；</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">arr</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Child</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 让Parent的this指向于对象</span></span><br><span class="line">    <span class="title class_">Parent</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>);</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// obj1.arr[0] = &#x27;你好&#x27;   obj1会被修改，obj2不会</span></span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> <span class="title class_">Child</span>();</span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="keyword">new</span> <span class="title class_">Child</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj1.<span class="property">name</span>,obj2.<span class="property">name</span> );</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240606084402296.png" alt="image-20240606084402296"></p></li><li><h5 id="组合继承"><a href="#组合继承" class="headerlink" title="组合继承"></a>组合继承</h5><p>还有很多继承方式：寄生继承</p><p>原型：</p><ul><li>共享属性和方法</li><li>无法向父构造函数传递参数</li></ul><p>借用构造函数：</p><ul><li>可以向父构造函数传递参数</li><li>不可以共享</li></ul><p>组合继承：</p><ul><li>既可以传递参数，也可以实现该有的共享性</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Parent</span>(<span class="params">cName</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = cName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Parent</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">run</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Child</span>(<span class="params">cName</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">// 借用构造函数</span></span><br><span class="line">    <span class="title class_">Parent</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>,cName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 原型</span></span><br><span class="line"><span class="title class_">Child</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Parent</span>();</span><br><span class="line"></span><br><span class="line"><span class="title class_">Child</span> obj1 = <span class="keyword">new</span> <span class="title class_">Child</span>(<span class="string">&#x27;111&#x27;</span>);</span><br><span class="line"><span class="title class_">Child</span> obj2 = <span class="keyword">new</span> <span class="title class_">Child</span>(<span class="string">&#x27;222&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj1.<span class="property">name</span>,obj2.<span class="property">name</span> );</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( obj1.<span class="property">run</span> === obj2.<span class="property">run</span> );</span><br></pre></td></tr></table></figure><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240606090330333.png" alt="image-20240606090330333"></p></li></ol><h3 id="二十七、前端性能优化"><a href="#二十七、前端性能优化" class="headerlink" title="二十七、前端性能优化"></a>二十七、前端性能优化</h3><ol><li><h5 id="一个网站打开速度多少合适"><a href="#一个网站打开速度多少合适" class="headerlink" title="一个网站打开速度多少合适"></a>一个网站打开速度多少合适</h5><p>PC：4s内           移动端：3s内</p></li><li><h5 id="浏览器的渲染过程"><a href="#浏览器的渲染过程" class="headerlink" title="浏览器的渲染过程"></a>浏览器的渲染过程</h5><p>视觉变化【js操作】–&gt; style –&gt; layout【布局】 –&gt; point【绘制】 –&gt; composite【合并】</p></li><li><h5 id="当在浏览器输入一个url，按回车会经历什么步骤"><a href="#当在浏览器输入一个url，按回车会经历什么步骤" class="headerlink" title="当在浏览器输入一个url，按回车会经历什么步骤"></a>当在浏览器输入一个url，按回车会经历什么步骤</h5><ol><li>通过浏览器的解释器，把文本【代码】，解析成html<ol><li>dom树</li><li>css树</li></ol></li><li>然后进行合并，并且渲染</li></ol></li><li><h5 id="layout-布局-–-造成回流【css改变动画】"><a href="#layout-布局-–-造成回流【css改变动画】" class="headerlink" title="layout 布局 –&gt; 造成回流【css改变动画】"></a>layout 布局 –&gt; 造成回流【css改变动画】</h5><p>增加&#x2F;删除元素</p><p>移动&#x2F;改变大小元素：offsetLeft、scrollTop、style.width</p><p>修改浏览器大小和字体大小</p></li><li><h5 id="js优化需要注意"><a href="#js优化需要注意" class="headerlink" title="js优化需要注意"></a>js优化需要注意</h5><p>原型链</p></li></ol><h3 id="二十八、debugger和try"><a href="#二十八、debugger和try" class="headerlink" title="二十八、debugger和try"></a>二十八、debugger和try</h3><p>ReferenceError：非法或者不能识别的引用数值</p><p>SyntaxError：发生语法解析错误</p><p>TypeError：操作类型错误</p><p>try … catch：让错误代码不影响后续代码进行</p><h3 id="二十九、jQuery"><a href="#二十九、jQuery" class="headerlink" title="二十九、jQuery"></a>二十九、jQuery</h3><ol><li><h5 id="jQuery使用"><a href="#jQuery使用" class="headerlink" title="jQuery使用"></a>jQuery使用</h5><ol><li><h5 id="jquery引入"><a href="#jquery引入" class="headerlink" title="jquery引入"></a>jquery引入</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span> = <span class="string">&#x27;js/jquery.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="开头格式"><a href="#开头格式" class="headerlink" title="开头格式"></a>开头格式</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">$(<span class="string">&#x27;ul li&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="jQuery中的选择器"><a href="#jQuery中的选择器" class="headerlink" title="jQuery中的选择器"></a>jQuery中的选择器</h5><ol><li><h6 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h6><ul><li><code>#id</code>                                                          <code>$(&#39;#id名称&#39;)</code></li><li><code>.class</code>                                                    <code>$(&#39;.class名称&#39;)</code>     </li><li><code>element</code>                                                  <code>$(&#39;div&#39;)</code></li><li><code>*</code>                                                               几乎不用</li><li><code>selector1,selector2,selectorN</code>     <code>$(&#39;div,span,p...&#39;)</code></li><li><code>:first</code>                                                     选择到第一个</li><li><code>:not(:selector)</code>                                     去除所有与给定选择器匹配的元素</li><li><code>:even</code>                                                        匹配到所有索引变量偶数的元素，从0开始计数</li><li><code>:odd</code>                                                          匹配到所有索引变量奇数的元素，从0开始计数</li><li><code>:eq(index)</code>                                              匹配一个给定的索引的元素，从0开始计数</li><li><code>:gt(index)</code>                                              匹配所有大于给定索引值的元素，从0开始计数</li><li><code>:last</code>                                                        选择到最后一个</li><li><code>:lt(index)</code>                                              匹配所有小于给定索引值的元素，从0开始计数</li></ul></li><li><h6 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h6><ul><li><code>ancestor descendant</code>                           在给定的祖先元素下匹配所有的后代元素</li><li><code>parent &gt; child</code>                                      在给定的父元素下匹配所有的子元素                </li><li><code>prev + next</code>                                            匹配兄弟的下一个，下一个兄弟</li><li><code>prev ~ siblings</code>                                    匹配下所有【平级关系】兄弟</li></ul></li><li><h6 id="内容选择器"><a href="#内容选择器" class="headerlink" title="内容选择器"></a>内容选择器</h6><ul><li><p><code>:contains(text)</code>                                    含有这个文本的节点，模糊搜索</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>1123你好23232<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>11不好2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>aff我有100万好不好dfdfd<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>aff23232d<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>aff23232d<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>kfjdf<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span> = <span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span> = <span class="string">&#x27;js/jquery.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">$(function()&#123;</span><br><span class="line">$(&#x27;ul li:contains(好)&#x27;).css(&#x27;background&#x27;,&#x27;pink&#x27;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>:empty</code>                                                       选取到不含子元素的元素</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;ul li:empty&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;pink&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>:has(selector)</code>                                      选取到只有一个子元素</p></li><li><p><code>:parent</code>                                                     选取到含有某一个元素的元素</p></li></ul></li><li><h6 id="可见性选择器"><a href="#可见性选择器" class="headerlink" title="可见性选择器"></a>可见性选择器</h6><ul><li><code>:hidden</code>                                                     匹配所有不可见元素，或者type为hidden的元素</li><li><code>:visible</code>                                                   匹配所有可见的元素</li></ul><p>一般在判断的时候使用可见性选择器</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">liOPPO</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>OPPO<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>VIVO<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>小米<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>索尼<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;more&quot;</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 选择到所有的Li，大于索引2的隐藏掉，并且排除掉最后一个</span></span><br><span class="line"><span class="keyword">var</span> lis = $(<span class="string">&#x27;ul li:gt(2):not(:last)&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;none&#x27;</span>);</span><br><span class="line">    $(<span class="string">&#x27;#more&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="comment">// 如果是显示     的就隐藏掉，否则就显示</span></span><br><span class="line">        <span class="keyword">if</span> (lis.<span class="title function_">is</span>(<span class="string">&quot;:visible&quot;</span>)) &#123;</span><br><span class="line">            lis.<span class="title function_">css</span>(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;none&#x27;</span>);</span><br><span class="line">            $(<span class="string">&#x27;#more&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;收起&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            lis.<span class="title function_">css</span>(<span class="string">&#x27;display&#x27;</span>,<span class="string">&#x27;block&#x27;</span>);</span><br><span class="line">            $(<span class="string">&#x27;#more&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;更多&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="对象之间的转换"><a href="#对象之间的转换" class="headerlink" title="对象之间的转换"></a>对象之间的转换</h5><ol><li><p>jquery对象转换为dom对象</p><p><code>$(&#39;#main&#39;)[0]</code> || <code>$(&#39;#main&#39;).get(0 )</code></p></li><li><p>dom对象转换为jquery对象</p><p><code>var mian = document.getElementById(&#39;main&#39;)</code></p><p><code>$(main)</code>     这里是转换</p></li></ol></li><li><h5 id="节点查找的方法"><a href="#节点查找的方法" class="headerlink" title="节点查找的方法"></a>节点查找的方法</h5><ol><li><p>子节点</p><p><code>children()</code>          查找的是子节点</p><p><code>find()</code>                  查找所有指定后代元素</p></li><li><p>父节点</p><p><code>parent()</code>              查找到父节点</p><p><code>parents(&#39;元素&#39;)</code> 查找到指定的祖先元素           </p></li><li><p>兄弟节点</p><p><code>next()</code>                   下一个兄弟，不包括自己</p><p><code>nextAll()</code>             下所有兄弟，不包括自己</p><p><code>prev()</code>                   上一个兄弟，不包括自己</p><p><code>prevAll()</code>             上所有兄弟，不包括自己</p><p><code>siblings()</code>           上下所有兄弟，不 包括自己</p><p><code>$(&#39;#lis&#39;).nextAll().css(&#39;background&#39;,&#39;blue); </code></p></li></ol></li><li><h5 id="CSS类"><a href="#CSS类" class="headerlink" title="CSS类"></a>CSS类</h5><ol><li><p><code>addClass()</code>            添加class</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;#main&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;o&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>removeClass()</code>      删除class</p><p>如果不加参数，删除所有class的值</p><p>如果加参数，删除指定class的值</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;#main&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;o&#x27;</span>).<span class="title function_">removeClass</span>();</span><br></pre></td></tr></table></figure></li><li><p><code>toggleClass()</code>      做切换的，如果存在（不存在）就删除（添加）一个类</p></li></ol></li><li><h5 id="过滤方法"><a href="#过滤方法" class="headerlink" title="过滤方法"></a>过滤方法</h5><p><code>eq()</code></p><p><code>first()</code></p><p><code>last()</code></p><p>eq、first、last方法和选择器的功能是一模一样的</p><p><code>filter</code>      筛选出与指定表达式匹配的元素集合</p><p><code>is</code>              根据选择器、DOM元素或jQuery对象来检测匹配元素集合，如果其中至少有一个元素符合这个给定的表达式就返回true</p><p><code>slice</code>        字符串或者数组的slice完全一样</p></li><li><h5 id="插入节点"><a href="#插入节点" class="headerlink" title="插入节点"></a>插入节点</h5><ol><li><p>内部插入</p><p><code>append(content|fn)</code>         与appendChild类似</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加到内部的最后</span></span><br><span class="line">$(<span class="string">&#x27;#main&#x27;</span>).<span class="title function_">append</span>(<span class="string">&#x27;&lt;h1&gt;这是h1&lt;/h1&gt;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>appendTo(content)</code></p><p><code>prepend(content|fn)</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 添加到内部的前面</span></span><br><span class="line">$(<span class="string">&#x27;#main&#x27;</span>).<span class="title function_">prepend</span>(<span class="string">&#x27;&lt;h1&gt;这是h1&lt;/h1&gt;&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>prependTo(content)</code></p><p><strong>语法：</strong></p><ol><li>append、prepend   &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》  <code>父元素.方法名称(子元素)</code></li><li>appendTo、prependTo   &#x3D;&#x3D;&#x3D;&#x3D;》  <code>子元素.方法名称(父元素)</code></li></ol></li><li><p>外部插入</p><p><code>after(content|fn)</code>                 平级插入，插入在当前的下面</p><p><code>before(content|fn)</code>               平级插入，插入在当前的上面</p><p><code>insertAfter(content)</code></p><p><code>insertBefore(content)</code></p><p><strong>语法：</strong></p><ol><li>after、before   &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》  <code>当前元素.方法名称(插入语元素)</code></li><li>appendTo、prependTo   &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;》  <code>子元素.方法名称(父元素)</code></li></ol></li></ol></li><li><h5 id="删除节点和属性"><a href="#删除节点和属性" class="headerlink" title="删除节点和属性"></a>删除节点和属性</h5><ol><li><p>删除节点</p><p>js原生中用 <code>removeChild</code> 删除节点</p><p>jquery中使用 <code>remove()</code> 来删除节点</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&#x27;#uls a&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="variable language_">this</span>).<span class="title function_">parent</span>().<span class="title function_">remove</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>属性</p><ol><li><p><code>attr</code></p><p>获取匹配的元素集合中的第一个元素的属性的值 或 设置每一个匹配元素的一个或多个属性</p><p>js原生中设置属性或者获得属性的值用 <code>setAttribute</code>、<code>getAttribute</code> 方法</p><p>jquery用 <code>attr()</code> 来获取或者设置属性、1个参数是获取属性的值，2个参数是设置属性</p></li><li><p><code>prop</code></p><p>获取匹配的元素集合第一个元素的属性（property）值或设置每一个匹配元素的一个或多个属性</p></li></ol></li></ol></li><li><h5 id="文本值"><a href="#文本值" class="headerlink" title="文本值"></a>文本值</h5><p><code>html()</code>       js原生中的 <code>innerHTML</code></p><p><code>text()</code>       js原生中的 <code>innerText</code></p><p><code>val()</code>         js原生中 <code>value</code></p><p>获取：</p><ul><li><code>选择器.方法名称</code></li></ul><p>赋值：</p><ul><li><code>选择器.方法名称(赋值的内容)</code></li></ul></li><li><h5 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h5><ul><li><p><code>height([val|fn])</code></p></li><li><p><code>width([val|fn])</code></p><ul><li>只是单纯的返回width和height</li></ul></li><li><p><code>innerHeight()</code></p></li><li><p><code>innerWidth()</code></p><ul><li>width + padding</li></ul></li><li><p><code>outerHeight([soptions])</code></p></li><li><p><code>outerWidth([options])</code></p><ul><li><p>width + padding + border</p></li><li><p>如果参数为true，则：width + padding + border + margin</p></li></ul></li></ul></li><li><h5 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h5><ul><li><p><code>offset().left</code>    当前元素距离浏览器左侧的偏移量</p></li><li><p><code>offset().top</code>      当前元素距离浏览器顶部的偏移量</p></li><li><p><code>scrollTop</code></p></li><li><p><code>scrollLeft</code></p></li></ul></li><li><h5 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// js原生的事件</span></span><br><span class="line"><span class="keyword">var</span> main = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;main&#x27;</span>);</span><br><span class="line">main.<span class="property">onmouseover</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// jquery事件的写法区别</span></span><br><span class="line">$(<span class="string">&#x27;#main&#x27;</span>).<span class="title function_">mouseover</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol><li><p>事件绑定</p><p><code>bind(type,[data],fn)</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 无法执行</span></span><br><span class="line">$(<span class="string">&#x27;#txt&#x27;</span>).<span class="title function_">input</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 可以执行</span></span><br><span class="line">$(<span class="string">&#x27;#txt&#x27;</span>).<span class="title function_">bind</span>(<span class="string">&#x27;input&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>事件委托</p><p><code>$(父元素).on(&#39;事件名称&#39;,&#39;子元素&#39;,函数)</code></p></li><li><p>事件对象</p><p><code>eve.pageX</code>      类似于js原生的 <code>e.clientX</code></p><p><code>eve.pageY</code>      类似于js原生的 <code>e.clientY</code></p><p>鼠标距离浏览器左侧【顶部】的距离</p><p><code>event.preventDefault()</code>       阻止默认行为</p><p><code>event.stopPropagation()</code>     阻止冒泡</p></li></ol></li><li><h5 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h5><p>方式一：</p><p><code>$(选择器).each(function(index,item)&#123;&#125;)</code></p><p>方式二：</p><p><code>$.each(要遍历的对象,function(index,item)&#123; // 循环体 &#125;)</code></p><p>区别：</p><p>当遍历一个jquery对象的时候可以用方式一</p><p>当遍历一个对象或者数组的时候，可以用方式二、</p></li><li><h5 id="jQuery自带动画"><a href="#jQuery自带动画" class="headerlink" title="jQuery自带动画"></a>jQuery自带动画</h5><ol><li><p>基本动画</p><p><code>show()</code></p><p><code>hide()</code></p><p>可以加入参数，就是动画完成的毫秒数</p></li><li><p>滑动动画</p><p><code>slideDown([s],[e],[fn])</code></p><p><code>slideUp([s,[e],[fn]])</code></p></li><li><p>淡入淡出</p><p><code>fadeIn()</code></p><p><code>fadeOut()</code></p></li></ol><p>注意stop可以清空队列</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">stop</span>().<span class="title function_">slideUp</span>();</span><br></pre></td></tr></table></figure></li><li><h5 id="自定义动画"><a href="#自定义动画" class="headerlink" title="自定义动画"></a>自定义动画</h5><p><code>animate(要改变的样式,毫秒数,回调函数)</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">animate</span>(&#123;</span><br><span class="line">    <span class="attr">margin</span>:<span class="string">&#x27;10px&#x27;</span>,</span><br><span class="line">    <span class="attr">padding</span>:<span class="string">&#x27;10px&#x27;</span>,</span><br><span class="line">    <span class="attr">color</span>:<span class="string">&#x27;#000&#x27;</span></span><br><span class="line">    ...</span><br><span class="line">&#125;,<span class="number">500</span>,<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">&#125;)</span><br><span class="line">&lt;div id=<span class="string">&#x27;main&#x27;</span><span class="keyword">class</span>=<span class="string">&#x27;main&#x27;</span>&gt; <span class="number">111</span> &lt;/div&gt;</span><br><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&quot;#main&quot;</span>).<span class="title function_">aminate</span>(&#123;</span><br><span class="line">        <span class="string">&#x27;padding&#x27;</span>:<span class="string">&#x27;100px&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;margin&#x27;</span>:<span class="string">&#x27;20px&#x27;</span></span><br><span class="line">    &#125;,<span class="number">500</span>,<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="无缝滚动"><a href="#无缝滚动" class="headerlink" title="无缝滚动"></a>无缝滚动</h4></li><li><h5 id="jQuery插件写法"><a href="#jQuery插件写法" class="headerlink" title="jQuery插件写法"></a>jQuery插件写法</h5><p>插件：让代码更具有复用性</p><ol><li><p>插件机制的方法</p><p><code>$.fn.extend(object)</code>  扩展 jQuery</p><p>元素集来提供新的方法（通常用来制作插件）</p><ul><li><code>$(&#39;ul li&#39;).扩展一个方法()</code>、局部插件</li></ul><p><code>$.extend(object)</code>  扩展jQuery对象本身、$扩展方法、全局插件</p></li><li><p>如何写jquery插件</p><p>先引入jQuery再引入插件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&#x27;juqery-1.11.min.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&#x27;jquery.nav.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>插件的命名规范</p><p><code>jquert.插件名称.js</code></p></li><li><p>插件内部写法</p><ol><li><p>开始是匿名函数自执行</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 全局</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="string">&#x27;nav&#x27;</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="title function_">alert</span>(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 使用插件</span></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">nav</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 局部</span></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $.fn.<span class="title function_">extend</span>(&#123;</span><br><span class="line">        <span class="string">&#x27;nav&#x27;</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            $(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">                $(<span class="variable language_">this</span>).<span class="title function_">hide</span>();</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 使用插件</span></span></span><br><span class="line"><span class="language-javascript">        $(<span class="string">&#x27;ul&#x27;</span>).<span class="title function_">eq</span>(<span class="number">2</span>).<span class="title function_">nav</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol></li><li><h5 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h5><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240610233841766.png" alt="image-20240610233841766"></p></li></ol><h3 id="三十、json格式"><a href="#三十、json格式" class="headerlink" title="三十、json格式"></a>三十、json格式</h3><ol><li><h5 id="什么是json"><a href="#什么是json" class="headerlink" title="什么是json"></a>什么是json</h5><p>存入数据的格式，轻量级交换数据的一种格式</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 普通对象格式</span></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    <span class="attr">userName</span>:<span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">18</span>,</span><br><span class="line">    <span class="attr">arr</span>:[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>],</span><br><span class="line">    <span class="string">&#x27;margin-left&#x27;</span>:<span class="string">&#x27;20px&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj[<span class="string">&#x27;margin-left&#x27;</span>]);</span><br></pre></td></tr></table></figure></li><li><h5 id="json数据存放"><a href="#json数据存放" class="headerlink" title="json数据存放"></a>json数据存放</h5><ol><li><p>json中不能有单引号</p></li><li><p>json中的key必须要加入双引号</p></li><li><p>json中是数据，不能写函数</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 完美的json格式</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;userName&quot;</span>:<span class="string">&quot;张三&quot;</span>,</span><br><span class="line">    <span class="string">&quot;age&quot;</span>:<span class="number">20</span>,</span><br><span class="line">    <span class="string">&quot;arr&quot;</span>:[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>],</span><br><span class="line">    <span class="string">&quot;o&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;a&quot;</span>:<span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="三十一、ajax"><a href="#三十一、ajax" class="headerlink" title="三十一、ajax"></a>三十一、ajax</h3><ol><li><h5 id="什么是ajax"><a href="#什么是ajax" class="headerlink" title="什么是ajax"></a>什么是ajax</h5><p>一种创建”快速” “动态”的网页技术</p></li><li><h5 id="原生js操作ajax"><a href="#原生js操作ajax" class="headerlink" title="原生js操作ajax"></a>原生js操作ajax</h5><ol><li><h6 id="http请求方式"><a href="#http请求方式" class="headerlink" title="http请求方式"></a>http请求方式</h6><p><code>GET</code>：用户获取数据，get是在url上传递数据，存储量较少，安全性较低</p><p><code>POST</code>：用户上传数据，post容量几乎是无限的</p></li><li><h6 id="异步操作"><a href="#异步操作" class="headerlink" title="异步操作"></a>异步操作</h6><p>同步</p><p>异步</p></li><li><h6 id="操作ajax"><a href="#操作ajax" class="headerlink" title="操作ajax"></a>操作ajax</h6><ol><li><p>创建ajax对象</p><p><code>new XMLHttpRequest()</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br></pre></td></tr></table></figure></li><li><p>连接服务器</p><p><code>ajax对象.open(请求方式[get|post],请求的url,异步|同步)</code></p><p>异步：true</p><p>同步：false</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;data.json&#x27;</span>,<span class="literal">true</span>)</span><br></pre></td></tr></table></figure></li><li><p>发送请求</p><p><code>ajax对象.send(给后端的数据，如果没有数据就写null)</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xhr.<span class="title function_">send</span>(<span class="literal">null</span>)</span><br></pre></td></tr></table></figure></li><li><p>接收返回值</p><p><code>ajax对象.onreadystatechange</code>：事件、当请求被发送到服务器时，我们需要执行基于响应的操作</p><p><code>ajax对象.readyState</code>：请求的状态码</p><ul><li>0（未初始化）open还没有调用</li><li>1（载入）已经调用send，正在发送请求</li><li>2（载入完成）send完成了，已经收到全部响应了</li><li>3（解析）正在解析内容</li><li>4（完成）响应内容解析完成，可以在客户端用了</li></ul><p><code>ajax对象.status</code>：返回请求结果码   </p><ul><li>200成功</li><li>404未找到</li><li>500服务器错误</li></ul><p>返回内容：<code>ajax对象.reponseText</code></p></li></ol><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建ajax对象</span></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"><span class="comment">// 连接服务</span></span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;http://39.101.217.150:8075/banner/list&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="comment">// 发送请求</span></span><br><span class="line">xhr.<span class="title function_">send</span>(<span class="literal">null</span>);</span><br><span class="line"><span class="comment">// 接收返回值</span></span><br><span class="line">xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(xhr.<span class="property">status</span> == <span class="number">200</span> &amp;&amp; xhr.<span class="property">readyState</span> == <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">responseText</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="三十二、jQuery操作ajax"><a href="#三十二、jQuery操作ajax" class="headerlink" title="三十二、jQuery操作ajax"></a>三十二、jQuery操作ajax</h3><ol><li><h5 id="ajax-url-settings"><a href="#ajax-url-settings" class="headerlink" title="$.ajax(url,[settings])"></a><code>$.ajax(url,[settings])</code></h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line"><span class="comment">// url:请求的路径</span></span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;http://39.101.217.150:8075/banner/list&#x27;</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 默认为true异步请求，false同步请求</span></span><br><span class="line">    <span class="attr">async</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 发送信息至服务器时内容编码类型</span></span><br><span class="line">    <span class="attr">contentType</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 前端给后端的数据</span></span><br><span class="line">    <span class="attr">data</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 预期服务器返回的数据类型</span></span><br><span class="line">    <span class="attr">dataType</span>:</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 请求方式 默认：get </span></span><br><span class="line">    <span class="attr">type</span>:<span class="string">&quot;POST&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 请求成功后的回调函数</span></span><br><span class="line">    <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><h5 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h5><p>前端：jsonp</p><p>后端：cors</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;20240613 1:41&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; title=&quot;JavaScript&quot;&gt;&lt;/a&gt;JavaScript&lt;/h1&gt;&lt;h4 id=&quot;1、什么是Ja</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://cychenhaibin.github.io/2024/07/14/JavaScript/"/>
    <id>http://cychenhaibin.github.io/2024/07/14/JavaScript/</id>
    <published>2024-07-14T11:40:23.633Z</published>
    <updated>2024-05-19T13:33:27.213Z</updated>
    
    <content type="html"><![CDATA[<p>本文件已定稿，最后修改时间 20240511 03:20</p><hr><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><ul><li><strong>浏览器</strong>由<strong>渲染引擎</strong>（解析HTML和CSS，俗称<strong>内核</strong>）和<strong>js引擎</strong>（读取网页中的js代码并运行）两部分组成。</li><li><strong>JavaScript</strong>由三部分组成：<ul><li><strong>JavaScript语法</strong>。</li><li><strong>DOM</strong>：页面文档对象模型，是W3C推荐的处理可扩展标记语言的标准编程接口，<strong>通过DOM可以对页面上的各种元素进行操作。</strong></li><li><strong>BOM</strong>：浏览器对象模型，它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构，<strong>通过BOM可以操作浏览器窗口</strong>。</li></ul></li></ul><img src="./assets/image-20221021210556246.png" alt="image-20221021210556246" style="zoom: 33%;" /><h1 id="一、语法"><a href="#一、语法" class="headerlink" title="一、语法"></a>一、语法</h1><h2 id="1、书写位置"><a href="#1、书写位置" class="headerlink" title="1、书写位置"></a>1、书写位置</h2><ul><li><p>JavaScript有<strong>3种书写位置</strong>，分别是行内、内部、外部（<strong>js不建议写分号</strong>，但立即执行函数和数组解构交换值时必须写，否则报错）。</p></li><li><p><strong>行内：</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;alert(&#x27;hello world&#x27;)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>内部：</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>外部：</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2、注释"><a href="#2、注释" class="headerlink" title="2、注释"></a>2、注释</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//单行注释</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*多行注释*/</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、变量"><a href="#3、变量" class="headerlink" title="3、变量"></a>3、变量</h2><h3 id="3-1、命名规范"><a href="#3-1、命名规范" class="headerlink" title="3.1、命名规范"></a>3.1、命名规范</h3><ul><li>由字母、数字、下划线、$组成。</li><li>区分大小写。</li><li>不能以数字开头。</li><li>不能是关键字、保留字。</li><li>遵循<strong>小驼峰命名法</strong>。</li></ul><h3 id="3-2、定义方式"><a href="#3-2、定义方式" class="headerlink" title="3.2、定义方式"></a>3.2、定义方式</h3><ul><li>var 定义的是全局变量（可重复定义同名变量，后定义的覆盖先定义的）。</li><li>let 定义的是局部变量（不可重复定义同名变量）。</li><li>const 定义常量。</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、只声明不赋值，直接使用变量，结果是undefined</span></span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);  <span class="comment">//undefined</span></span><br><span class="line"><span class="comment">//2、在定义变量时就赋值</span></span><br><span class="line"><span class="keyword">var</span> b = <span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b);  <span class="comment">//10</span></span><br><span class="line"><span class="comment">//3、不定义直接赋值</span></span><br><span class="line">c = <span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c);  <span class="comment">//20</span></span><br><span class="line"><span class="comment">//4、可以同时声明、初始化、输出多个变量</span></span><br><span class="line"><span class="keyword">var</span> d = <span class="number">1</span>, e = <span class="number">2</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d, e);  <span class="comment">//1 2</span></span><br></pre></td></tr></table></figure><h3 id="3-3、简单数据类型"><a href="#3-3、简单数据类型" class="headerlink" title="3.3、简单数据类型"></a>3.3、简单数据类型</h3><ul><li><p>简单数据类型包括：</p><ul><li><strong>Number</strong>——默认值0，包含整型和浮点型，<strong>有3个特殊值</strong>：<ul><li>Infinity——正无穷大。</li><li>-Infinity——负无穷大。</li><li>NaN——代表一个非数值。</li></ul></li><li><strong>Boolean</strong>——默认值false，包含true和false（等价于1和0）。</li><li><strong>String</strong>——默认值 “”。</li><li><strong>Undefined</strong>——默认值undefined。</li><li><strong>Null</strong>——var a &#x3D; null;</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//1、字符串需要用单引号或双引号定义，但在html中双引号表示属性，故推荐单引号定义字符串</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;wo&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> str2 = <span class="string">&quot;wo&quot;</span>;</span><br><span class="line"><span class="comment">//2、字符串的长度</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="property">length</span>);   <span class="comment">//2</span></span><br><span class="line"><span class="comment">//3、判断变量的数据类型</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);  <span class="comment">//number</span></span><br><span class="line"><span class="comment">//4、判断变量是不是数值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(b));  <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-4、数组"><a href="#3-4、数组" class="headerlink" title="3.4、数组"></a>3.4、数组</h3><ul><li><p><strong>定义方式：</strong></p><ul><li>利用字面量创建数组。</li><li>利用new创建数组。</li></ul></li><li><p><strong>增加元素：</strong></p><ul><li>不能直接给数组名赋值，<strong>否则会覆盖</strong>掉以前的数据。</li><li>可以通过数组索引的方式给数组追加元素<strong>（推荐）</strong>。</li><li>使用<strong>数组名.length</strong>可以访问数组长度。</li><li>length属性是可读写的，可通过修改length长度实现<strong>数组扩容</strong>的目的。</li></ul></li><li><p><strong>注意：</strong></p><ul><li>数组里可存放<strong>任意类型</strong>的数据。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、利用字面量创建数组</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（1）空数组</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> arr1 = [];</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（2）带初值的数组</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> arr2 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//给arr2增加元素</span></span></span><br><span class="line"><span class="language-javascript">        arr2[<span class="number">3</span>] = <span class="number">4</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、利用new创建数组</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> arr3 = <span class="keyword">new</span> <span class="title class_">Array</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//3、给arr1增加元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（1）</span></span></span><br><span class="line"><span class="language-javascript">        arr1 = [<span class="number">1</span>, <span class="number">2</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（2）push方法将一个或多个元素添加到数组末尾，并返回该数组的新长度</span></span></span><br><span class="line"><span class="language-javascript">        arr1.<span class="title function_">push</span>(<span class="number">3</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（3）unshift方法将一个或多个元素添加到数组开头，并返回该数组的新长度</span></span></span><br><span class="line"><span class="language-javascript">        arr1.<span class="title function_">unshift</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr1);  <span class="comment">//[0,1,2,3]</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//4、删除arr2的元素</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（1）pop方法删除数组中最后一个元素，并返回该元素的值</span></span></span><br><span class="line"><span class="language-javascript">        arr2.<span class="title function_">pop</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（2）shift方法删除数组中第一个元素，并返回该元素的值</span></span></span><br><span class="line"><span class="language-javascript">        arr2.<span class="title function_">shift</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（3）splice(start,deleteCount)方法，删除指定元素</span></span></span><br><span class="line"><span class="language-javascript">        arr2.<span class="title function_">splice</span>(<span class="number">0</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(arr2);  <span class="comment">//[]</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><img src="./assets/image-20240506024856476.png" alt="image-20240506024856476" style="zoom:33%;" /> <ul><li><p><strong>展开运算符：…</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//... 展开运算符的作用就是将数组展开</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(...arr);    <span class="comment">//1 2 3</span></span><br></pre></td></tr></table></figure></li><li><p><strong>forEach遍历数组</strong>：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> color = [<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;black&#x27;</span>, <span class="string">&#x27;white&#x27;</span>]</span><br><span class="line"><span class="comment">//index可以不写</span></span><br><span class="line">color.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item, index</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(item, index))</span><br></pre></td></tr></table></figure></li><li><p><strong>数组解构</strong>：</p><img src="./assets/image-20240504012606912.png" alt="image-20240504012606912" style="zoom:33%;" /> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1)变量多，单元值少，undefined</span></span><br><span class="line"><span class="keyword">const</span> [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c)</span><br><span class="line"></span><br><span class="line"><span class="comment">//2)变量少，单元值多</span></span><br><span class="line"><span class="keyword">const</span> [d] = [<span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(d)</span><br><span class="line"></span><br><span class="line"><span class="comment">//3)剩余参数接多余的单元值</span></span><br><span class="line"><span class="keyword">const</span> [e, ...f] = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(f)</span><br><span class="line"></span><br><span class="line"><span class="comment">//4)设置默认值 防止undefined传递</span></span><br><span class="line"><span class="keyword">const</span> [g = <span class="number">0</span>] = []</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g)</span><br><span class="line"></span><br><span class="line"><span class="comment">//5)按需导入值</span></span><br><span class="line"><span class="keyword">const</span> [h, i, , j] = [<span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(h)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(j)</span><br><span class="line"></span><br><span class="line"><span class="comment">//6)支持多维数组的解构</span></span><br><span class="line"><span class="keyword">const</span> [k, [l, m]] = [<span class="number">12</span>, [<span class="number">13</span>, <span class="number">14</span>]]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(k)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(l)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(m)</span><br></pre></td></tr></table></figure></li></ul><h3 id="3-5、数据类型转换"><a href="#3-5、数据类型转换" class="headerlink" title="3.5、数据类型转换"></a>3.5、数据类型转换</h3><ul><li><p><strong>转换为数字型：</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="string">&#x27;10&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="string">&#x27;10.2&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="string">&#x27;20&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> d = <span class="string">&#x27;20.2&#x27;</span>;</span><br><span class="line"><span class="comment">//1、将String类型转换为整型</span></span><br><span class="line">a = <span class="built_in">parseInt</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);  <span class="comment">//number</span></span><br><span class="line"><span class="comment">//2、将String类型转换为浮点型</span></span><br><span class="line">b = <span class="built_in">parseFloat</span>(b);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);  <span class="comment">//number</span></span><br><span class="line"><span class="comment">//3、强制转换，将String类型转换为数值型</span></span><br><span class="line">c = <span class="title class_">Number</span>(c);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> c);  <span class="comment">//number</span></span><br><span class="line"><span class="comment">//4、js隐式转换（- * /）</span></span><br><span class="line">d = d - <span class="number">0</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> d);  <span class="comment">//number</span></span><br></pre></td></tr></table></figure></li><li><p><strong>转换为布尔型：</strong>代表空和否定的值（false，0，null，undefined，NaN）都会被转换成false，其余值都转换成true。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="literal">false</span>;</span><br><span class="line">a = <span class="title class_">Boolean</span>(a);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">//false</span></span><br></pre></td></tr></table></figure></li><li><p><strong>转换为字符串：</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">var</span> c = <span class="number">3</span>;</span><br><span class="line"><span class="comment">//1、toString转成字符串</span></span><br><span class="line">a = a.<span class="title function_">toString</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> a);  <span class="comment">//string</span></span><br><span class="line"><span class="comment">//2、String强制转成字符串</span></span><br><span class="line">b = <span class="title class_">String</span>(b);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> b);  <span class="comment">//string</span></span><br><span class="line"><span class="comment">//3、任何类型 +字符串 == 字符串</span></span><br><span class="line">c = c + <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> c);  <span class="comment">//string</span></span><br></pre></td></tr></table></figure></li><li><p><strong>数组转换为字符串：</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">toString</span>());    <span class="comment">//1,2,3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>));  <span class="comment">//123</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-6、Object"><a href="#3-6、Object" class="headerlink" title="3.6、Object"></a>3.6、Object</h3><ul><li>Object是由属性和方法组成的，<strong>现阶段创建对象的3种方式：</strong><ul><li>利用字面量创建对象。</li><li>利用new Object创建对象。</li><li>利用构造函数创建对象（是一种用来初始化对象的特殊函数，总与new一起使用，<strong>约定函数名第一个字母大写</strong>）。</li></ul></li><li><strong>对象属性或方法的调用：</strong><ul><li>属性使用  对象名.属性名  或  对象名[‘属性名’] 调用。</li><li>方法使用  对象名.方法名()  调用。</li></ul></li><li><strong>增</strong>：和改属性值是一样的，直接对象名.属性名&#x3D;xx;</li><li><strong>删</strong>：delete 对象名.属性名</li><li><strong>遍历对象：</strong>for  (变量名  in  对象名)  {}<ul><li>变量名——得到的是属性名。</li><li>对象名[属性名]——得到的是属性值。</li></ul></li></ul><img src="./assets/image-20240506024417891.png" alt="image-20240506024417891" style="zoom:33%;" /> <img src="./assets/image-20240506024511021.png" alt="image-20240506024511021" style="zoom:33%;" /> <img src="./assets/image-20240506024555164.png" alt="image-20240506024555164" style="zoom:33%;" /> <figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、利用字面量创建对象</span></span><br><span class="line"><span class="keyword">var</span> star = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;pink&#x27;</span>,</span><br><span class="line">    <span class="attr">sayHello</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、利用new Object创建对象</span></span><br><span class="line"><span class="keyword">var</span> obj1 = <span class="keyword">new</span> <span class="title class_">Object</span>(); <span class="comment">//空对象</span></span><br><span class="line">obj1.<span class="property">name</span> = <span class="string">&#x27;blue&#x27;</span>;</span><br><span class="line">obj1.<span class="property">sayHi</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hi&#x27;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3、利用构造函数创建对象</span></span><br><span class="line"><span class="comment">//（1）先定义构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">GouZao</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = <span class="string">&#x27;GouZao&#x27;</span>;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">say</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;wa&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//（2）使用new</span></span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="keyword">new</span> <span class="title class_">GouZao</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2.<span class="property">name</span>); <span class="comment">//GouZao</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2[<span class="string">&#x27;name&#x27;</span>]); <span class="comment">//GouZao</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4、遍历</span></span><br><span class="line"><span class="comment">//pink</span></span><br><span class="line"><span class="comment">//ƒ() &#123;alert(&#x27;hello&#x27;);&#125;</span></span><br><span class="line"><span class="keyword">for</span> (s <span class="keyword">in</span> star) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(star[s]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="./assets/image-20240506025944056.png" alt="image-20240506025944056" style="zoom: 50%;" /> <img src="./assets/image-20240506030532587.png" alt="image-20240506030532587" style="zoom:50%;" /> <img src="./assets/image-20240506030642321.png" alt="image-20240506030642321" style="zoom:50%;" /> <img src="./assets/image-20240511022041197.png" alt="image-20240511022041197" style="zoom:50%;" />  <h3 id="3-7、内置对象"><a href="#3-7、内置对象" class="headerlink" title="3.7、内置对象"></a>3.7、内置对象</h3><ul><li><p>JavaScript中的对象分为3种，<strong>内置对象、浏览器对象、自定义对象</strong>。</p></li><li><p><strong>Math对象：</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3.1</span>;</span><br><span class="line"><span class="comment">//1、圆周率</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">PI</span>);   <span class="comment">//3.1415926</span></span><br><span class="line"><span class="comment">//2、向下取整</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">floor</span>(a)); <span class="comment">//3</span></span><br><span class="line"><span class="comment">//3、向上取整</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">ceil</span>(a));  <span class="comment">//4</span></span><br><span class="line"><span class="comment">//4、四舍五入，就近取整</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(-<span class="number">3.5</span>));  <span class="comment">//注意 -3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">round</span>(<span class="number">3.2</span>));   <span class="comment">//3</span></span><br><span class="line"><span class="comment">//5、绝对值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">abs</span>(-<span class="number">3</span>));  <span class="comment">//3</span></span><br><span class="line"><span class="comment">//6、求最大值和最小值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">1</span>, <span class="number">2</span>));    <span class="comment">//2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="title function_">min</span>(<span class="number">1</span>, <span class="number">2</span>));    <span class="comment">//1</span></span><br></pre></td></tr></table></figure></li><li><p><strong>Date对象：</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、获取系统当前时间（必须实例化）</span></span><br><span class="line"><span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now);</span><br><span class="line"><span class="comment">//2、获取日期对象的指定部分</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getFullYear</span>()); <span class="comment">//获取年</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getMonth</span>());    <span class="comment">//获取月（0-11）</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getDate</span>());     <span class="comment">//获取月中的第几天</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getDay</span>());      <span class="comment">//获取周中的第几天（0-6）</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getHours</span>());    <span class="comment">//时</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getMinutes</span>());  <span class="comment">//分</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(now.<span class="title function_">getSeconds</span>());  <span class="comment">//秒</span></span><br><span class="line"><span class="comment">//3、构造函数构造指定日期的Date对象</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&#x27;2011-1-1&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a.<span class="title function_">getFullYear</span>());   <span class="comment">//2011</span></span><br><span class="line"><span class="comment">//4、获取系统当前时间毫秒值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br></pre></td></tr></table></figure></li><li><p><strong>字符串对象：</strong>JavaScript中的<strong>字符串</strong>同Java一样，具有<strong>不可变</strong>的特点。</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、根据字符查找，返回第一个匹配字符的索引（找不到返回-1）</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line"><span class="comment">//（1）0代表从索引0开始查找</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">indexOf</span>(<span class="string">&#x27;l&#x27;</span>, <span class="number">0</span>));      <span class="comment">//2</span></span><br><span class="line"><span class="comment">//（2）倒着查找</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>((str1.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;o&#x27;</span>)));   <span class="comment">//4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、根据索引返回字符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">charAt</span>(<span class="number">0</span>));        <span class="comment">//h</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">charCodeAt</span>(<span class="number">0</span>));    <span class="comment">//104（ASCII）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3、字符串操作方法</span></span><br><span class="line"><span class="comment">//（1）拼接字符串 == + （+更常用）</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">concat</span>(<span class="string">&#x27; world&#x27;</span>)); <span class="comment">//hello world</span></span><br><span class="line"><span class="comment">//（2）截取字符串 start end 包前不包后</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">1</span>));       <span class="comment">//h</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str1.<span class="title function_">substring</span>(<span class="number">0</span>, <span class="number">1</span>));   <span class="comment">//h</span></span><br></pre></td></tr></table></figure></li><li><p><strong>数组对象：</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、检测是否为数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1 <span class="keyword">instanceof</span> <span class="title class_">Array</span>);     <span class="comment">//true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr1));       <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//2、增删数组元素</span></span><br><span class="line"><span class="comment">//（1）末尾添加一个或多个元素，返回新的长度</span></span><br><span class="line">arr1.<span class="title function_">push</span>(<span class="number">3</span>, <span class="number">5</span>);</span><br><span class="line"><span class="comment">//（2）删除数组最后一个元素，返回删除的值</span></span><br><span class="line">arr1.<span class="title function_">pop</span>();</span><br><span class="line"><span class="comment">//（3）向数组的开头添加一个或多个元素，返回新的长度</span></span><br><span class="line">arr1.<span class="title function_">unshift</span>(-<span class="number">1</span>, <span class="number">0</span>);    <span class="comment">//注意，-1会后添加到数组中</span></span><br><span class="line"><span class="comment">//（4）删除数组的第一个元素</span></span><br><span class="line">arr1.<span class="title function_">shift</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1);  <span class="comment">//[0, 1, 2, 3, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//3、数组索引方法（不存在返回-1）</span></span><br><span class="line"><span class="comment">//（1）查找给定元素在数组中的第一个索引</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1.<span class="title function_">indexOf</span>(<span class="number">3</span>));       <span class="comment">//3</span></span><br><span class="line"><span class="comment">//（2）查找给定元素在数组中的最后一个索引</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1.<span class="title function_">lastIndexOf</span>(<span class="number">3</span>));   <span class="comment">//4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//4、连接多个数组，不影响原数组，返回新数组</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1.<span class="title function_">concat</span>([<span class="number">4</span>]));      <span class="comment">//[0, 1, 2, 3, 3, 4]</span></span><br><span class="line"><span class="comment">//5、截取数组，不影响原数组，返回新数组，start end 包前不包后</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1.<span class="title function_">slice</span>(<span class="number">0</span>, <span class="number">2</span>));      <span class="comment">//[0, 1]</span></span><br><span class="line"><span class="comment">//6、删除数组元素，影响原数组，start deleteCount</span></span><br><span class="line">arr1.<span class="title function_">splice</span>(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1);  <span class="comment">//[0, 1, 2]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//7、数组排序</span></span><br><span class="line"><span class="comment">//（1）反转数组</span></span><br><span class="line">arr1.<span class="title function_">reverse</span>();</span><br><span class="line"><span class="comment">//（2）冒泡排序</span></span><br><span class="line">arr1.<span class="title function_">sort</span>(<span class="keyword">function</span> (<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;   <span class="comment">//升序</span></span><br><span class="line">    <span class="comment">// return b - a;   //降序</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1);      <span class="comment">//[0, 1, 2]</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-8、自定义对象"><a href="#3-8、自定义对象" class="headerlink" title="3.8、自定义对象"></a>3.8、自定义对象</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myObject = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;myObject&#x27;</span>,</span><br><span class="line">    <span class="attr">eat</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;吃饭&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3-9、对象解构"><a href="#3-9、对象解构" class="headerlink" title="3.9、对象解构"></a>3.9、对象解构</h3><img src="./assets/image-20240504022006261.png" alt="image-20240504022006261" style="zoom:33%;" /> <img src="./assets/image-20240504022635242.png" alt="image-20240504022635242" style="zoom:33%;" /> <img src="./assets/image-20240504023023601.png" alt="image-20240504023023601" style="zoom:33%;" /> <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//4、多级对象解构</span></span><br><span class="line"><span class="keyword">const</span> animal = &#123;</span><br><span class="line">    <span class="attr">isLive</span>: <span class="string">&#x27;yes&#x27;</span>,</span><br><span class="line">    <span class="attr">pig</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;pig&#x27;</span>,</span><br><span class="line">        <span class="attr">age</span>: <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> &#123; isLive, <span class="attr">pig</span>: &#123; name, age &#125; &#125; = animal</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(isLive)<span class="comment">//yes</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name)<span class="comment">//pig</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(age)<span class="comment">//10</span></span><br></pre></td></tr></table></figure><h2 id="4、输入输出"><a href="#4、输入输出" class="headerlink" title="4、输入输出"></a>4、输入输出</h2><ul><li><p>JavaScript<strong>常用输入输出语句</strong>如下：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、浏览器弹出警示框</span></span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line"><span class="comment">//2、浏览器控制台打印输出信息</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line"><span class="comment">//3、浏览器弹出输入框，用户可以输入</span></span><br><span class="line"><span class="title function_">prompt</span>(<span class="string">&#x27;请输入&#x27;</span>);</span><br><span class="line"><span class="comment">//4、直接将内容写入页面的内容流，但是文档流执行完毕，它会导致页面全部重绘。</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>转义字符：</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  \n</span></span><br><span class="line"><span class="comment">//  \\</span></span><br><span class="line"><span class="comment">//  \&#x27;</span></span><br><span class="line"><span class="comment">//  \&quot;</span></span><br><span class="line"><span class="comment">//  \t</span></span><br><span class="line"><span class="comment">//  \b</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="5、运算符"><a href="#5、运算符" class="headerlink" title="5、运算符"></a>5、运算符</h2><h3 id="5-1、算术运算符"><a href="#5-1、算术运算符" class="headerlink" title="5.1、算术运算符"></a>5.1、算术运算符</h3><ul><li>浮点数值的最高精度是17位小数，<strong>不要直接判断两个浮点数是否相等</strong>。</li><li>比如 0.1 + 0.2 不等于 0.3，而是0.30000000000000004</li></ul><img src="./assets/image-20221022223037968.png" alt="image-20221022223037968" style="zoom: 33%;" /><h3 id="5-2、比较运算符"><a href="#5-2、比较运算符" class="headerlink" title="5.2、比较运算符"></a>5.2、比较运算符</h3><img src="./assets/image-20221022223732726.png" alt="image-20221022223732726" style="zoom: 33%;" /><h3 id="5-3、赋值运算符"><a href="#5-3、赋值运算符" class="headerlink" title="5.3、赋值运算符"></a>5.3、赋值运算符</h3><ul><li><p>赋值运算符包括：</p><ul><li><p>&#x3D;</p></li><li><p>+&#x3D;</p></li><li><p>-&#x3D;</p></li><li><p>*&#x3D;</p></li><li><p>&#x2F;&#x3D;</p></li><li><p>%&#x3D;</p></li></ul></li></ul><h3 id="5-4、自增自减运算符"><a href="#5-4、自增自减运算符" class="headerlink" title="5.4、自增自减运算符"></a>5.4、自增自减运算符</h3><ul><li><p><strong>++ –：</strong></p></li><li><p>++ – 在前：先自增自减，再参与运算。</p></li><li><p>++ – 在后：先参与运算，再自增自减。</p></li></ul><h3 id="5-5、逻辑运算符"><a href="#5-5、逻辑运算符" class="headerlink" title="5.5、逻辑运算符"></a>5.5、逻辑运算符</h3><ul><li><p>逻辑运算符包括：</p><ul><li>&amp;&amp;——与</li><li>||——或</li><li>!   ——非</li></ul></li><li><p><strong>与、或的短路现象：</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> &amp;&amp; <span class="number">2</span>);    <span class="comment">//2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0</span> || <span class="number">2</span>);   <span class="comment">//2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> &gt; <span class="number">0</span> &amp;&amp; <span class="number">2</span> &lt; <span class="number">3</span>);    <span class="comment">//true</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span> || (a = a - <span class="number">1</span>));</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">//2，或短路</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5-6、优先级"><a href="#5-6、优先级" class="headerlink" title="5.6、优先级"></a>5.6、优先级</h3><img src="./assets/image-20221022225722589.png" alt="image-20221022225722589" style="zoom: 33%;" /><h2 id="6、流程控制"><a href="#6、流程控制" class="headerlink" title="6、流程控制"></a>6、流程控制</h2><h3 id="6-1、if分支"><a href="#6-1、if分支" class="headerlink" title="6.1、if分支"></a>6.1、if分支</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span> (a === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a === <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;烫&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2、switch分支"><a href="#6-2、switch分支" class="headerlink" title="6.2、switch分支"></a>6.2、switch分支</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">switch</span> (a) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;烫&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-3、三元表达式"><a href="#6-3、三元表达式" class="headerlink" title="6.3、三元表达式"></a>6.3、三元表达式</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line">a &gt; <span class="number">1</span> ? <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">true</span>) : <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="literal">false</span>);  <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h3 id="6-4、for循环"><a href="#6-4、for循环" class="headerlink" title="6.4、for循环"></a>6.4、for循环</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-5、while循环"><a href="#6-5、while循环" class="headerlink" title="6.5、while循环"></a>6.5、while循环</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-6、do-while循环"><a href="#6-6、do-while循环" class="headerlink" title="6.6、do-while循环"></a>6.6、do-while循环</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    i++;</span><br><span class="line">&#125; <span class="keyword">while</span> (i &lt; <span class="number">3</span>);</span><br></pre></td></tr></table></figure><h3 id="6-7、跳转"><a href="#6-7、跳转" class="headerlink" title="6.7、跳转"></a>6.7、跳转</h3><ul><li><strong>continue</strong> —— 跳出本次循环，开始下次循环。</li><li>break —— 跳出循环。</li></ul><h2 id="7、函数"><a href="#7、函数" class="headerlink" title="7、函数"></a>7、函数</h2><h3 id="7-1、定义方式"><a href="#7-1、定义方式" class="headerlink" title="7.1、定义方式"></a>7.1、定义方式</h3><ul><li><strong>实参个数应与形参个数保持一致。</strong><ul><li>实参个数多于形参个数，只接收形参的个数。</li><li>实参个数小于形参个数，多的形参定义为undefined，结果为NaN。</li></ul></li><li><strong>return只能返回一个值。</strong><ul><li>如果有多个被逗号隔开的值，只返回最后一个值。</li><li>函数没有写return则返回undefined。</li></ul></li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//可以为参数设置默认值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayHello</span>(<span class="params">name = <span class="string">&#x27;tiger&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name + <span class="string">&#x27; say hello&#x27;</span>);</span><br><span class="line">    <span class="comment">//1、不需要声明返回值类型</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = <span class="title function_">sayHello</span>(<span class="string">&#x27;ergou&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(result);        <span class="comment">//1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">sayHello</span>());    <span class="comment">//tiger say hello</span></span><br></pre></td></tr></table></figure><h3 id="7-2、匿名函数"><a href="#7-2、匿名函数" class="headerlink" title="7.2、匿名函数"></a>7.2、匿名函数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、定义匿名函数</span></span><br><span class="line"><span class="keyword">var</span> func = <span class="keyword">function</span> (<span class="params">name</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2、调用匿名函数</span></span><br><span class="line"><span class="title function_">func</span>(<span class="string">&#x27;zhangSan&#x27;</span>);  <span class="comment">//zhangSan</span></span><br></pre></td></tr></table></figure><h3 id="7-3、立即执行函数"><a href="#7-3、立即执行函数" class="headerlink" title="7.3、立即执行函数"></a>7.3、立即执行函数</h3><ul><li>匿名函数和有名字的函数都可以。</li><li>内部定义的var变量是局部变量。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//1、方式一</span></span></span><br><span class="line"><span class="language-javascript">   (<span class="keyword">function</span> (<span class="params"></span>) &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">1</span>);&#125;)();</span></span><br><span class="line"><span class="language-javascript">   <span class="comment">//2、方式二</span></span></span><br><span class="line"><span class="language-javascript">    (<span class="keyword">function</span> (<span class="params"></span>) &#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span>);&#125;());</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-4、不定参数"><a href="#7-4、不定参数" class="headerlink" title="7.4、不定参数"></a>7.4、不定参数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、定义函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">print</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">//（1）arguments是一个伪数组，具有length属性，可以以数组形式取索引值和遍历</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);     <span class="comment">//[1, 2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[<span class="number">0</span>]);  <span class="comment">//1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2、调用函数</span></span><br><span class="line"><span class="title function_">print</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>); </span><br></pre></td></tr></table></figure><h3 id="7-5、剩余参数"><a href="#7-5、剩余参数" class="headerlink" title="7.5、剩余参数"></a>7.5、剩余参数</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//...表示剩余参数，是真数组</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">func</span>(<span class="params">a, b, ...arr</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, arr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">func</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>);  <span class="comment">//1 2 [3, 4]</span></span><br></pre></td></tr></table></figure><h3 id="7-6、箭头函数"><a href="#7-6、箭头函数" class="headerlink" title="7.6、箭头函数"></a>7.6、箭头函数</h3><ul><li><p>目的：为了更简短的函数写法，并且不绑定this，适用于需要匿名函数的地方。</p></li><li><p>区别：箭头函数不会创建自己的this，它只会从自己的作用域链的上一层沿用this</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// const fn = function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(100);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//1）箭头函数基本语法</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2）只有一个形参可以省略小括号，只有一行代码体可以省略大括号</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn2</span> = x =&gt; <span class="variable language_">console</span>.<span class="title function_">log</span>(x);</span><br><span class="line"><span class="title function_">fn2</span>(<span class="number">101</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3)如果只有一行返回值，可以省略大括号和return</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn3</span> = x =&gt; x + x;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn3</span>(<span class="number">100</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//4)箭头函数可以直接返回一个对象</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">fn4</span> = uname =&gt; (&#123; <span class="attr">uname</span>: uname &#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fn4</span>(<span class="string">&quot;hello&quot;</span>));</span><br></pre></td></tr></table></figure></li></ul><img src="./assets/image-20240504010803404.png" alt="image-20240504010803404" style="zoom: 33%;" /> <img src="./assets/image-20240504011957241.png" alt="image-20240504011957241" style="zoom:33%;" /> <h3 id="7-7、作用域"><a href="#7-7、作用域" class="headerlink" title="7.7、作用域"></a>7.7、作用域</h3><ul><li><p><strong>作用域</strong>分为局部作用域和全局作用域，<strong>作用域链</strong>本质上就是变量的查找机制（<strong>就近原则</strong>）。</p></li><li><p><strong>闭包</strong>：函数中嵌套函数，且嵌套函数用到了外层函数的变量。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//闭包的作用，封闭数据，提供操作，外部也可以访问函数内部的变量</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">func1</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> a = <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">function</span> <span class="title function_">func2</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> func2;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> f = <span class="title function_">func1</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">f</span>();</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>变量提升</strong>：</p><img src="./assets/image-20240315023911550.png" alt="image-20240315023911550" style="zoom: 33%;" /></li></ul><h2 id="8、正则表达式"><a href="#8、正则表达式" class="headerlink" title="8、正则表达式"></a>8、正则表达式</h2><h3 id="8-1、语法"><a href="#8-1、语法" class="headerlink" title="8.1、语法"></a>8.1、语法</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//正则表达式的作用，检测是否含有指定字符串</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、定义规则</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> str = <span class="string">&#x27;hello&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> reg = <span class="regexp">/l/</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2.1、调用规则的test方法，返回true或false</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">test</span>(str)); <span class="comment">//true</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2.2、调用规则的exec方法，返回数组或null</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(reg.<span class="title function_">exec</span>(str));</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-2、元字符"><a href="#8-2、元字符" class="headerlink" title="8.2、元字符"></a>8.2、元字符</h3><ul><li><p><strong>元字符</strong>可以使正则表达式更加灵活和简洁，而普通字符只能表示它本身。</p><ul><li><p>① 边界符：^ 表示以谁开始；$ 表示以谁结束；^ 和 $ 一起写表示是精确匹配</p></li><li><p>② 量词：* 重复零次或多次；+ 重复1次或多次；? 重复零次或1次；{n} 重复n次；{n,} 重复n次或多次；{n,m} 重复n到m次</p></li><li><p>③ 字符类：[] 匹配字符集合，包含[]中其中一个就是true；[a-zA-Z0-9]表示这个范围都行；[^a -z] ^表示取反，除了小写字母都行</p></li><li><p>④ 预定义：</p><img src="./assets/image-20240315015058842.png" alt="image-20240315015058842" style="zoom: 50%;" /></li><li><p>⑤ 修饰符和替换：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、定义规则</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> str = <span class="string">&#x27;helLo&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> reg = <span class="regexp">/l/ig</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、修饰符 i 表示忽略大小写；g 表示全局搜索（否则只会匹配一个）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">replace</span>(reg, <span class="string">&#x27;a&#x27;</span>)); <span class="comment">//heaao</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="9、异常处理"><a href="#9、异常处理" class="headerlink" title="9、异常处理"></a>9、异常处理</h2><img src="./assets/image-20240506033419513.png" alt="image-20240506033419513" style="zoom:50%;" /> <img src="./assets/image-20240506033959916.png" alt="image-20240506033959916" style="zoom:50%;" />  <h2 id="10、节流防抖"><a href="#10、节流防抖" class="headerlink" title="10、节流防抖"></a>10、节流防抖</h2><h3 id="10-1、节流"><a href="#10-1、节流" class="headerlink" title="10.1、节流"></a>10.1、节流</h3><img src="./assets/image-20240506034957741.png" alt="image-20240506034957741" style="zoom:40%;" /> <h3 id="10-2、防抖"><a href="#10-2、防抖" class="headerlink" title="10.2、防抖"></a>10.2、防抖</h3><img src="./assets/image-20240506034512245.png" alt="image-20240506034512245" style="zoom: 40%;" /> <h1 id="二、DOM"><a href="#二、DOM" class="headerlink" title="二、DOM"></a>二、DOM</h1><ul><li><strong>DOM树（DOM把以下内容都看作对象）：</strong><ul><li><strong>文档</strong>，一个页面就是一个文档（<strong>文档从上往下加载</strong>），DOM中使用<strong>document</strong>表示。</li><li><strong>元素</strong>，页面中的所有标签都是元素，DOM中使用<strong>element</strong>表示。</li><li><strong>节点</strong>，网页中所有内容都是节点（标签、属性、文本、注释等），DOM中使用<strong>node</strong>表示。</li></ul></li></ul><img src="./assets/image-20221023213151519.png" alt="image-20221023213151519" style="zoom: 50%;" /><h2 id="1、获取元素"><a href="#1、获取元素" class="headerlink" title="1、获取元素"></a>1、获取元素</h2><h3 id="1-1、根据标签获取"><a href="#1-1、根据标签获取" class="headerlink" title="1.1、根据标签获取"></a>1.1、根据标签获取</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>2019-9-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>2022-10-24<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1、根据标签获取元素对象，会以伪数组的形式返回元素对象的集合，没有就返回空数组</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> divs = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(divs);      <span class="comment">//[div, div]</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(divs[<span class="number">0</span>]);   <span class="comment">//&lt;div&gt;2019-9-9&lt;/div&gt;</span></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2、根据类名获取"><a href="#1-2、根据类名获取" class="headerlink" title="1.2、根据类名获取"></a>1.2、根据类名获取</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;time&quot;</span>&gt;</span>2019-9-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;time&quot;</span>&gt;</span>2022-10-24<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1、根据类名获取元素对象集合（伪数组形式）</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> timers = <span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;time&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(timers);        <span class="comment">//[div.time, div.time]</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> timers);  <span class="comment">//object</span></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3、根据ID获取"><a href="#1-3、根据ID获取" class="headerlink" title="1.3、根据ID获取"></a>1.3、根据ID获取</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;time&quot;</span>&gt;</span>2019-9-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1、根据id获取元素对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> timer = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;time&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(timer);         <span class="comment">//&lt;div id=&quot;time&quot;&gt;2019-9-9&lt;/div&gt;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> timer);  <span class="comment">//object</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//2、打印返回的元素对象，方便我们更好地查看其属性和方法</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">dir</span>(timer);</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-4、特殊元素获取"><a href="#1-4、特殊元素获取" class="headerlink" title="1.4、特殊元素获取"></a>1.4、特殊元素获取</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>2019-9-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1、获取html元素对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> html = <span class="variable language_">document</span>.<span class="property">documentElement</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(html);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//2、获取body元素对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> body = <span class="variable language_">document</span>.<span class="property">body</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(body);</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-5、其它"><a href="#1-5、其它" class="headerlink" title="1.5、其它"></a>1.5、其它</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;timer1&quot;</span>&gt;</span>2019-9-9<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;timer2&quot;</span>&gt;</span>2022-10-24<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1、querySelector返回指定选择器的第一个元素对象</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> timer1 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> timer2 = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#timer1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(timer1);        <span class="comment">//&lt;div id=&quot;timer1&quot;&gt;2019-9-9&lt;/div&gt;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(timer2);        <span class="comment">//&lt;div id=&quot;timer1&quot;&gt;2019-9-9&lt;/div&gt;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//2、querySelectorAll返回指定选择器的所有元素对象集合</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> timers = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(timers);        <span class="comment">//[div#timer1, div#timer2]</span></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、事件"><a href="#2、事件" class="headerlink" title="2、事件"></a>2、事件</h2><h3 id="2-1、事件三要素"><a href="#2-1、事件三要素" class="headerlink" title="2.1、事件三要素"></a>2.1、事件三要素</h3><ul><li><p>事件由三要素组成：<strong>事件源、事件类型、事件处理程序</strong>。</p><ul><li>事件源：事件被触发的对象，按钮？</li><li>事件类型：什么事件，如何触发，鼠标经过？键盘按下？</li><li>事件处理程序：通过一个函数赋值的方式完成。</li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1、点击一个按钮，弹出对话框</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;btn&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//传统的注册事件方式</span></span></span><br><span class="line"><span class="language-javascript">            btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2、注册事件"><a href="#2-2、注册事件" class="headerlink" title="2.2、注册事件"></a>2.2、注册事件</h3><ul><li><p>给元素添加事件称为<strong>注册事件</strong>或者<strong>绑定事件</strong>，注册事件分为<strong>传统方式</strong>和<strong>方法监听注册（推荐）</strong>两种。</p><ul><li><strong>传统方式</strong>：<ul><li>比如  btn.onclick &#x3D; function () {alert(‘hello world’);};</li><li><strong>注册事件的唯一性</strong>——同一个元素同一个事件只能设置一个处理函数，最后注册的处理函数会覆盖前面注册的。</li></ul></li><li><strong>方法监听注册（推荐）</strong>：<ul><li><strong>同一个元素同一个事件可以注册多个监听器。</strong></li><li><strong>addEventListener有3个参数：</strong><ul><li><strong>type</strong>  —— 事件类型字符串，比如click、mouseover，注意不要带on。</li><li><strong>listener</strong>  —— 事件处理函数。</li><li><strong>useCapture</strong>  —— 可选参数，布尔类型，默认值为false。</li></ul></li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;点我试试1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>  <span class="attr">value</span>=<span class="string">&quot;点我试试2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、传统方式</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btns[<span class="number">0</span>].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、方法监听注册</span></span></span><br><span class="line"><span class="language-javascript">        btns[<span class="number">1</span>].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="number">22</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        btns[<span class="number">1</span>].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="number">33</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-3、删除事件"><a href="#2-3、删除事件" class="headerlink" title="2.3、删除事件"></a>2.3、删除事件</h3><ul><li><p><strong>删除事件（解绑事件）</strong>有<strong>传统方式</strong>和<strong>removeEventListener</strong>两种方式。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、传统方式</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btns[<span class="number">0</span>].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">     <span class="comment">//删除事件</span></span></span><br><span class="line"><span class="language-javascript">        btns[<span class="number">0</span>].<span class="property">onclick</span> = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、removeEventListener方式</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="number">22</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        btns[<span class="number">1</span>].<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, fn);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//删除事件（匿名函数无法解绑）</span></span></span><br><span class="line"><span class="language-javascript">        btns[<span class="number">1</span>].<span class="title function_">removeEventListener</span>(<span class="string">&#x27;click&#x27;</span>, fn);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-4、事件对象"><a href="#2-4、事件对象" class="headerlink" title="2.4、事件对象"></a>2.4、事件对象</h3><ul><li><p><strong>event对象</strong>代表事件的状态，触发事件后，会得到相关的属性，比如键盘按键的状态、鼠标的位置、鼠标按钮的状态。</p><ul><li>事件对象只有有了事件才会存在（系统自动创建），event写到事件处理函数的()里，可自定义命名（e、evt）。</li><li><strong>事件对象的属性方法：</strong><ul><li>event.target  —— 返回触发事件的对象（标准）（this代表的是绑定事件的对象）。</li><li>event.type  ——  返回事件的类型。</li><li>event.preventDefault()  —— 该方法阻止默认事件（标准），比如不让链接跳转。</li><li>event.stopPropagation()  —— 阻止冒泡（标准）。</li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//以注册事件的传统方式举例</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params">event</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&#x27;hello world&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(event.<span class="property">target</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="2-5、鼠标事件"><a href="#2-5、鼠标事件" class="headerlink" title="2.5、鼠标事件"></a>2.5、鼠标事件</h3><ul><li><strong>常用的鼠标事件有：</strong><ul><li><p>onclick  —— 鼠标点击左键触发。</p></li><li><p>onmouseover  —— 鼠标经过触发。</p></li><li><p>onmouseout  —— 鼠标离开触发。</p></li><li><p>onfocus  —— 获得鼠标焦点触发。</p></li><li><p>onblur  —— 失去鼠标焦点触发。</p></li><li><p>onmousemove  —— 鼠标移动触发。</p></li><li><p>onmouseup  —— 鼠标弹起触发。</p></li><li><p>onmousedown  —— 鼠标按下触发。</p></li><li><p>禁止鼠标右键和选中文字，代码见下：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;contextmenu&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1、禁止右键菜单</span></span></span><br><span class="line"><span class="language-javascript">            e.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;selectstart&#x27;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//2、禁止选中文字</span></span></span><br><span class="line"><span class="language-javascript">            e.<span class="title function_">preventDefault</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>常用的鼠标事件对象属性：</strong><ul><li>event.clientX  —— 相对于浏览器可视区的X坐标。</li><li>event.clientY  —— 相对于浏览器可视区的Y坐标。</li><li>event.pageX  —— 相对于文档页面的X坐标。</li><li>event.pageY  —— 相对于文档页面的Y坐标。</li><li>event.screenX  —— 相对于电脑屏幕的X坐标。</li><li>event.screenY  —— 相对于电脑屏幕的Y坐标。</li></ul></li></ul><h3 id="2-6、键盘事件"><a href="#2-6、键盘事件" class="headerlink" title="2.6、键盘事件"></a>2.6、键盘事件</h3><ul><li><strong>常用的键盘事件有：</strong><ul><li>onkeyup  —— 某个键盘按键被松开时触发（<strong>不区分大小写</strong>）。</li><li>onkeydown  —— 某个键盘按键被按下时触发（<strong>不区分大小写</strong>）。</li></ul></li><li><strong>常用的键盘事件对象属性：</strong><ul><li>event.key  —— 键的字母值。</li></ul></li></ul><h3 id="2-7、事件流"><a href="#2-7、事件流" class="headerlink" title="2.7、事件流"></a>2.7、事件流</h3><ul><li><p><strong>事件流</strong>描述的是从页面中接收事件的顺序，事件发生时会在元素节点之间按照特定的顺序传播，这个<strong>传播过程</strong>即DOM事件流。</p></li><li><p><strong>DOM事件流</strong>分为3个阶段：</p><ul><li>捕获阶段（DOM最顶层节点➡具体元素）、当前目标阶段（具体元素）、冒泡阶段（具体元素➡DOM最顶层节点）。</li></ul></li><li><p><strong>注意：</strong></p><ul><li>js代码中只能执行捕获或者冒泡其中的一个阶段。</li><li>onclick 和 attachevent只能得到冒泡阶段。</li><li>addEventListener第三个参数是true表示在事件捕获阶段调用事件处理程序，默认是false，表示在冒泡阶段调用事件处理程序。</li><li>有些事件是没有冒泡的，比如onfocus、onblur。</li><li><strong>实际开发中我们很少使用事件捕获，我们更关注事件冒泡。</strong></li></ul><img src="./assets/image-20221026110810639.png" alt="image-20221026110810639" style="zoom: 33%;" /><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--事件委托：利用冒泡原理在父节点上设置事件处理程序，可以影响每个子节点，只操作一次DOM，提高性能--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第1个li标签<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第2个li标签<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>第3个li标签<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> uls = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        uls[<span class="number">0</span>].<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">alert</span>(<span class="string">&#x27;ul标签&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="3、操作元素"><a href="#3、操作元素" class="headerlink" title="3、操作元素"></a>3、操作元素</h2><h3 id="3-1、修改元素内容"><a href="#3-1、修改元素内容" class="headerlink" title="3.1、修改元素内容"></a>3.1、修改元素内容</h3><ul><li><p>修改元素内容有两种方式：</p><ul><li>innerText  —— 非标准，不识别html标签，可读写，读取其内容时会去掉空格和换行。</li><li><strong>innerHTML  —— w3c标准</strong>，识别html标签，可读写，读取其内容时会保留空格和换行。</li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>点击按钮，显示当前系统时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        盒子2</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//当我们点击按钮，div里面的文字会发生变化</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// div.innerText = &#x27;&lt;strong&gt;2022-10-24&lt;/strong&gt;&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">            div.<span class="property">innerHTML</span> = <span class="string">&#x27;&lt;strong&gt;2022-10-24&lt;/strong&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">innerText</span>);     <span class="comment">//&lt;strong&gt;2022-10-24&lt;/strong&gt;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(div.<span class="property">innerHTML</span>);     <span class="comment">//2022-10-24</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">innerText</span>);       <span class="comment">//盒子2 hello</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//盒子2</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//&lt;span&gt;hello&lt;/span&gt;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">innerHTML</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-2、修改元素属性"><a href="#3-2、修改元素属性" class="headerlink" title="3.2、修改元素属性"></a>3.2、修改元素属性</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 100px;height: 100px;background-color: springgreen&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//当我们点击按钮，div盒子大小会变化</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            div.<span class="property">style</span>.<span class="property">width</span> = <span class="string">&#x27;200px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            div.<span class="property">style</span>.<span class="property">height</span> = <span class="string">&#x27;200px&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-3、修改表单属性"><a href="#3-3、修改表单属性" class="headerlink" title="3.3、修改表单属性"></a>3.3、修改表单属性</h3><ul><li><p>表单里面的值是通过value属性来控制的。</p></li><li><p>想要表单被禁用，可以将disabled属性设置为true。</p></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            btn.<span class="property">value</span> = <span class="string">&#x27;点击了，不能再点了&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            btn.<span class="property">disabled</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-4、修改样式属性"><a href="#3-4、修改样式属性" class="headerlink" title="3.4、修改样式属性"></a>3.4、修改样式属性</h3><ul><li><p>通过js修改样式属性有<strong>两种方式</strong>：</p><ul><li>element.style  —— 行内样式操作。</li><li>element.className  —— 类名样式操作。</li></ul></li><li><p><strong>注意：</strong></p><ul><li>js里面的样式采用<strong>小驼峰命名法</strong>，比如fontSize。</li><li>element.style产生的是行内样式，CSS权重高。</li><li>className会直接更改元素的类名，从而覆盖原类名。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.change</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: springgreen;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//当我们点击按钮，div盒子大小会变化</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//element.style在修改元素属性时已演示，此处只演示element.className的方式</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            div.<span class="property">className</span> = <span class="string">&#x27;change&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-5、自定义属性"><a href="#3-5、自定义属性" class="headerlink" title="3.5、自定义属性"></a>3.5、自定义属性</h3><ul><li><p><strong>自定义属性目的：</strong>是为了保存并使用数据，有些数据可以保存在页面中而不用保存到数据库中。</p></li><li><p><strong>获取属性值：</strong></p><ul><li>element.属性  —— 获取属性值（内置属性值）。</li><li>element.getAttribute(‘属性’)  —— 获取属性值（主要获得自定义的属性）。</li></ul></li><li><p><strong>设置属性值：</strong></p><ul><li>element.属性 &#x3D; ‘值’  ——  设置属性值（内置属性）。</li><li>element.setAttribute(‘属性’, ‘值’)  —— 设置属性值（自定义属性）。</li></ul></li><li><p><strong>移除属性：</strong></p><ul><li>element.removeAttribute(‘属性’)</li></ul></li><li><p><strong>H5设置和获取自定义属性值：</strong></p><ul><li>element.setAttribute(‘属性’, ‘值’)  —— 设置属性值（<strong>必须以 data-  开头</strong>）。</li><li>element.getAttribute(‘属性’)  —— 兼容性获取。</li><li>element.dataset.index 或 element.dataset[‘index’]  —— 新增获取方式（<strong>只能获取 data- 开头的属性值</strong>）。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//1、H5设置自定义属性</span></span></span><br><span class="line"><span class="language-javascript">            btn.<span class="title function_">setAttribute</span>(<span class="string">&#x27;data-index&#x27;</span>, <span class="string">&#x27;1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//2、H5获取自定义属性</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(btn.<span class="title function_">getAttribute</span>(<span class="string">&#x27;data-index&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(btn.<span class="property">dataset</span>.<span class="property">index</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(btn.<span class="property">dataset</span>[<span class="string">&#x27;index&#x27;</span>]);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//3、移除属性</span></span></span><br><span class="line"><span class="language-javascript">            btn.<span class="title function_">removeAttribute</span>(<span class="string">&#x27;data-index&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            btn.<span class="title function_">removeAttribute</span>(<span class="string">&#x27;type&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="4、节点"><a href="#4、节点" class="headerlink" title="4、节点"></a>4、节点</h2><h3 id="4-1、概述"><a href="#4-1、概述" class="headerlink" title="4.1、概述"></a>4.1、概述</h3><ul><li><strong>获取元素的两种方式比较：</strong><ul><li>利用DOM提供的方法获取元素——逻辑性不强，比较繁琐。</li><li>利用节点层级关系获取元素——逻辑性强，操作更简单，但对老版本浏览器兼容性较差。</li></ul></li><li>节点至少拥有<strong>nodeType、nodeName、nodeValue</strong>这三个基本属性。<ul><li>元素节点，nodeType为1。</li><li>属性节点，nodeType为2。</li><li>文本节点，nodeType为3（包括文字、空格、换行等）。</li><li><strong>在实际开发中，主要操作的是元素节点。</strong></li></ul></li></ul><h3 id="4-2、父节点"><a href="#4-2、父节点" class="headerlink" title="4.2、父节点"></a>4.2、父节点</h3><ul><li><p><strong>node.parentNode</strong>  —— 获取node节点的父节点（是获取最近的一个父节点，没有返回null）。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、获取btn的父节点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(btn.<span class="property">parentNode</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-3、子节点"><a href="#4-3、子节点" class="headerlink" title="4.3、子节点"></a>4.3、子节点</h3><ul><li><p><strong>parentNode.childNodes（标准）</strong>  —— 返回指定节点的子节点集合，该集合为即时更新的集合。返回值包含了所有的子节点（元素节点、文本节点等），只要元素节点则须专门处理，所以我们<strong>不提倡这种方式</strong>。</p></li><li><p><strong>parentNode.children（非标准）</strong>  —— 只读，返回所有的子元素节点，<strong>重点掌握</strong>。</p></li><li><p><strong>parentNode.firstElementChild</strong>  —— 返回第一个子元素节点，找不到则返回null。</p></li><li><p><strong>parentNode.lastElementChild</strong>  —— 返回最后一个子元素节点，找不到则返回null。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我试试&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;form&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(form.<span class="property">childNodes</span>);           <span class="comment">//[text, input, text]</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(form.<span class="property">children</span>);             <span class="comment">//[input]</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(form.<span class="property">firstElementChild</span>);    <span class="comment">//&lt;input type=&quot;button&quot; value=&quot;点我试试&quot;&gt;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(form.<span class="property">lastElementChild</span>);     <span class="comment">//&lt;input type=&quot;button&quot; value=&quot;点我试试&quot;&gt;</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-4、兄弟节点"><a href="#4-4、兄弟节点" class="headerlink" title="4.4、兄弟节点"></a>4.4、兄弟节点</h3><ul><li><p><strong>nextSibling</strong>  —— 下一个兄弟节点（包括元素节点或者文本节点等）。</p></li><li><p><strong>nextElementSibling</strong>  —— 下一个兄弟元素节点。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;文本框&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(btn.<span class="property">nextSibling</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(btn.<span class="property">nextElementSibling</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-5、创建和添加节点"><a href="#4-5、创建和添加节点" class="headerlink" title="4.5、创建和添加节点"></a>4.5、创建和添加节点</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、创建节点（li）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> li1 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、添加节点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（1）作为子节点，追加到父级节点里的末尾</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        ul.<span class="title function_">appendChild</span>(li1);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//（2）作为子节点，插入到父节点下指定子节点的前面</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> li2 = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        ul.<span class="title function_">insertBefore</span>(li2, ul.<span class="property">children</span>[<span class="number">0</span>]);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-6、删除节点"><a href="#4-6、删除节点" class="headerlink" title="4.6、删除节点"></a>4.6、删除节点</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、删除父节点中的一个子节点，返回被删除的节点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        ul.<span class="title function_">removeChild</span>(ul.<span class="property">children</span>[<span class="number">1</span>]);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-7、复制节点"><a href="#4-7、复制节点" class="headerlink" title="4.7、复制节点"></a>4.7、复制节点</h3><ul><li>复制节点分为浅拷贝和深拷贝两种：<ul><li><strong>浅拷贝</strong>——参数为空或false，只复制节点本身，不复制里面的子节点。</li><li><strong>深拷贝</strong>——参数为true，会复制节点本身及里面所有的子节点。</li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">cloneNode</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);  </span></span><br><span class="line"><span class="language-javascript">        ul.<span class="title function_">appendChild</span>(li);     <span class="comment">//没有 &#x27;li&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-8、动态创建元素"><a href="#4-8、动态创建元素" class="headerlink" title="4.8、动态创建元素"></a>4.8、动态创建元素</h3><ul><li><p>动态创建元素有3种方式：</p><ul><li>document.write()  —— 直接将内容写入页面的内容流，但是<strong>文档流执行完毕，它会导致页面全部重绘</strong>。</li><li>element.innerHTML  —— 将内容写入某个节点，不会导致页面全部重绘，创建多个元素<strong>效率更高</strong>（不拼接字符串，<strong>拼接数组</strong>），但结构稍微复杂。</li><li>createElement()  —— 创建多个元素，效率稍微低一点，但<strong>结构更清晰</strong>。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//element.innerHTML 创建 1000个li的效率（采用数组拼接的形式）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> d1 = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> arr = [];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            arr[i] = <span class="string">&#x27;&lt;li&gt;&lt;/li&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        ul.<span class="property">innerHTML</span> = arr.<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> d2 = <span class="title class_">Date</span>.<span class="title function_">now</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(d2 - d1);   <span class="comment">//1ms</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="三、BOM"><a href="#三、BOM" class="headerlink" title="三、BOM"></a>三、BOM</h1><ul><li><strong>window对象</strong>是浏览器的顶级对象，它具有<strong>双重角色</strong>：<ul><li>它是js访问浏览器窗口的一个接口。</li><li>它是一个全局对象，定义在全局作用域中的变量、函数都会变成window对象的属性和方法。</li><li>window有一个<strong>特殊属性window.name</strong></li></ul></li></ul><img src="./assets/image-20221027101600799.png" alt="image-20221027101600799" style="zoom: 33%;" /><h2 id="1、JS执行队列"><a href="#1、JS执行队列" class="headerlink" title="1、JS执行队列"></a>1、JS执行队列</h2><ul><li><p>JavaScript是<strong>单线程</strong>，因为它是为操作DOM和处理页面交互而诞生的，比如对某个DOM元素进行添加和删除，必须先添加才能删除，不能同时进行。但单线程可能会导致js执行时间过长➡页面渲染不连贯，为了解决这个问题，HTML5提出允许JavaScript创建多个线程，于是js中出现了同步和异步：</p><ul><li><strong>同步</strong>——前一个任务结束后再执行后一个任务 ，<strong>程序的执行顺序与任务的排列顺序是一致的</strong>。</li><li><strong>异步</strong>——在处理一个任务时，可以同时处理其它任务。<strong>一般来说，异步任务有以下三种类型：</strong><ul><li>普通事件，如click、resize等。</li><li>资源加载，如load、error等。</li><li>定时器，setTimeout、setInterval等。</li></ul></li></ul></li><li><p><strong>同步任务和异步任务的执行过程</strong>：</p><ul><li>先执行<strong>执行栈</strong>中的同步任务。</li><li>异步任务（回调函数）放入<strong>任务队列</strong>中。</li><li>一旦执行栈中的<strong>同步任务执行完毕</strong>，系统会按次序读取任务队列中的异步任务，并进入执行栈执行。</li><li>由于主线程不断地获取任务、执行任务，这种机制被称为<strong>事件循环</strong>。</li></ul><img src="./assets/image-20240314003234310.png" alt="image-20240314003234310" style="zoom: 50%;" /><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//演示 同步 问题 （单线程顺序执行）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1 3 2</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;2&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">10000</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;3&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//演示 同步任务 和 异步任务 执行过程</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//仍然是 1 3 2</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;1&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;2&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;3&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2、window对象"><a href="#2、window对象" class="headerlink" title="2、window对象"></a>2、window对象</h2><h3 id="2-1、页面加载事件"><a href="#2-1、页面加载事件" class="headerlink" title="2.1、页面加载事件"></a>2.1、页面加载事件</h3><ul><li>页面加载事件就是给window或document绑定事件，分为两种：<ul><li><strong>onload（load）</strong> —— 当文档内容<strong>全部加载完毕</strong>（图像、脚本、css等），才调用处理函数。</li><li><strong>DOMContentLoaded</strong>  —— 当<strong>DOM加载完成</strong>（不包括图片、css、flash等）就调用处理函数。</li><li><strong>注意：</strong></li><li>有了onload就可以把js代码写到页面元素的上方。</li><li>onload的传统注册方式只能写一次，如果有多个，以最后一个为准。</li><li>页面图片较多时，从用户访问到onload触发可能需要较长时间，交互效果就不能实现，此时用DOMContentLoaded比较合适。</li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、load（这样写就可以将js放到页面元素的前面）</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//注意，js代码可以在元素p的前面了</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            p.<span class="property">innerHTML</span> = <span class="string">&#x27;文字消失了&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、DOMContentLoaded</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;DOM加载完成&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-2、调整窗口大小事件"><a href="#2-2、调整窗口大小事件" class="headerlink" title="2.2、调整窗口大小事件"></a>2.2、调整窗口大小事件</h3><ul><li><p><strong>onresize（resize）</strong>  —— 当窗口大小发生像素变化，就会触发事件处理函数。</p><ul><li>我们经常利用此完<strong>成响应式布局</strong>，<strong>window.innerWidth</strong>当前屏幕的宽度，<strong>window.innerHeight</strong>当前屏幕的高度。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是一段文字<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;窗口大小变化了&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="3、navigator对象"><a href="#3、navigator对象" class="headerlink" title="3、navigator对象"></a>3、navigator对象</h2><ul><li><p>navigator对象<strong>包含有关浏览器的信息</strong>，它有很多属性，我们最常用的是<strong>userAgent</strong>，该属性可以返回userAgent值。</p></li><li><p>下面前端代码可以判断用户的终端是什么类型，并跳转不同的页面。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">待续</span><br></pre></td></tr></table></figure></li></ul><h2 id="4、location对象"><a href="#4、location对象" class="headerlink" title="4、location对象"></a>4、location对象</h2><ul><li><p>window对象给我们提供了一个<strong>location属性</strong>（对象）<strong>用于获取或者设置窗体的url</strong>，并且可以用于<strong>解析url</strong>。</p><ul><li><strong>一般语法：</strong>protocol:&#x2F;&#x2F;host[:port]&#x2F;path&#x2F;[?query]#fragment<ul><li>query  —— 键值对形式的参数，通过&amp;分隔开。</li><li>fragment  —— 片段，#后面内容常见于链接锚点。</li></ul></li></ul></li><li><p><strong>location对象属性：</strong></p><ul><li>window.location.href  —— 获取或者设置整个url。</li><li>window.location.host  —— 返回主机（域名）。</li><li>window.location.port  —— 返回端口号。</li><li>window.location.pathname  —— 返回路径。</li><li>window.location.search  —— 返回参数。</li><li>window.location.hash  —— 返回片段。</li></ul></li><li><p><strong>location对象方法：</strong></p><ul><li>window.location.assign( url )  —— 跳转页面（同设置href），也称为<strong>重定向</strong>，<strong>记录历史，可后退</strong>。</li><li>window.location.replace( url )  —— 替换当前页面，<strong>不记录历史，不能后退</strong>。</li><li>window.location.reload( )  —— 刷新页面，参数为true表示强制刷新。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、实现5s后自动跳转</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> count = <span class="number">5</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            div.<span class="property">innerHTML</span> = <span class="string">&#x27;您将在&#x27;</span> + count + <span class="string">&#x27;s之后跳转到首页&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">            count--;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (count == -<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// window.location.href = &#x27;http://www.baidu.com&#x27;;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// window.location.assign(&#x27;http://www.baidu.com&#x27;);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">replace</span>(<span class="string">&#x27;http://www.baidu.com&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">reload</span>(<span class="literal">true</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="5、history对象"><a href="#5、history对象" class="headerlink" title="5、history对象"></a>5、history对象</h2><ul><li>window对象给我们提供了history对象，可以与<strong>浏览器历史记录</strong>进行交互。<ul><li>window.history.back()  —— 后退。</li><li>window.history.forward()  —— 前进。</li><li>window.history.go( 参数 )  —— 正整数前进几，负整数后退几。</li></ul></li></ul><h2 id="6、定时器"><a href="#6、定时器" class="headerlink" title="6、定时器"></a>6、定时器</h2><h3 id="6-1、setTimeout定时器"><a href="#6-1、setTimeout定时器" class="headerlink" title="6.1、setTimeout定时器"></a>6.1、setTimeout定时器</h3><ul><li><strong>window.setTimeout(调用函数, 延迟的毫秒数)</strong>  —— 设置一个定时器，定时器到期后执行调用函数。<ul><li>调用函数可以直接写函数、函数名、’函数名()’（不推荐）。</li><li>延迟的毫秒数<strong>默认值是0</strong>，单位是ms。</li><li>通常要给定时器赋值一个标识符。</li></ul></li><li><strong>window.clearTimeout(定时器标识符)</strong>  —— 取消setTimeout定时器。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我停止&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、设置setTimeout定时器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> timer1 = <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="keyword">new</span> <span class="title class_">Date</span>());</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">3000</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、点击按钮取消定时器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearTimeout</span>(timer1);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-2、setInterval定时器"><a href="#6-2、setInterval定时器" class="headerlink" title="6.2、setInterval定时器"></a>6.2、setInterval定时器</h3><ul><li><strong>window.setInterval(回调函数, 间隔的毫秒数)</strong>  —— 每隔一段时间，就调用一次回调函数。<ul><li>调用函数可以直接写函数、函数名、’函数名()’（不推荐）。</li><li>延迟的毫秒数<strong>默认值是0</strong>，单位是ms。</li><li>通常要给定时器赋值一个标识符。</li></ul></li><li>**window.clearInterval(定时器标识符)**—— 取消setInterval定时器。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;点我停止&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//1、设置setInterval定时器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> timer1 = <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title class_">Date</span>());</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//2、点击按钮取消定时器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="built_in">clearInterval</span>(timer1);</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7、网页特效"><a href="#7、网页特效" class="headerlink" title="7、网页特效"></a>7、网页特效</h2><h3 id="7-1、元素偏移量offset系列"><a href="#7-1、元素偏移量offset系列" class="headerlink" title="7.1、元素偏移量offset系列"></a>7.1、元素偏移量offset系列</h3><ul><li>我们使用offset系列相关属性可以<strong>动态地</strong>得到该元素的位置、大小等。<ul><li>获得元素距离带有定位父元素的位置。</li><li>获得元素自身的大小（宽度高度）。</li><li><strong>返回的数值都不带单位。</strong></li></ul></li><li><strong>offset系列常用属性：</strong><ul><li>element.offsetParent  —— 返回该元素带有定位的父元素，如果父级都没有定位则返回body。</li><li>element.offsetTop  —— 返回元素相对带有定位父元素上方的偏移。</li><li>element.offsetLeft  —— 返回元素相对带有定位父元素左边的偏移。</li><li>element.offsetWidth  —— 返回自身宽度（padding+border+width）。</li><li>element.offsetHeight  —— 返回自身高度（padding+border+height）。</li></ul></li><li><strong>offset 和 style 对比：</strong><ul><li>offset  —— 可以得到任意样式表中的样式值。获取数值没有单位。<strong>获取元素大小位置用offset合适</strong>。</li><li>style  —— 只能得到行内样式表中的样式值。获取数值有单位。可读写，<strong>给元素更改值用style</strong>。</li></ul></li></ul><h3 id="7-2、元素可视区client系列"><a href="#7-2、元素可视区client系列" class="headerlink" title="7.2、元素可视区client系列"></a>7.2、元素可视区client系列</h3><ul><li>元素可视区client系列<strong>常用属性：</strong><ul><li>element.clientTop  —— 返回元素上边框的大小。</li><li>element.clientLeft  —— 返回元素左边框的大小。</li><li>element.clientWidth  —— 返回 padding + width，不带单位。</li><li>element.clientHeight  —— 返回 padding + height，不带单位。</li></ul></li></ul><h3 id="7-3、元素滚动scroll系列"><a href="#7-3、元素滚动scroll系列" class="headerlink" title="7.3、元素滚动scroll系列"></a>7.3、元素滚动scroll系列</h3><ul><li>元素滚动scroll系列<strong>常用属性：</strong><ul><li>element.scrollTop  —— 返回被卷去的上侧距离，不带单位。</li><li>element.scrollLeft  —— 返回被卷去的左侧距离，不带单位。</li><li>element.scrollWidth  —— 返回自身实际的宽度，不含边框，不带单位。</li><li>element.scrollHeight  —— 返回自身实际的高度，不含边框，不带单位。</li></ul></li></ul><h3 id="7-4、触屏touch事件"><a href="#7-4、触屏touch事件" class="headerlink" title="7.4、触屏touch事件"></a>7.4、触屏touch事件</h3><ul><li><strong>常见的触屏touch事件：</strong><ul><li>touchstart  —— 手指触摸到一个DOM元素时触发。</li><li>touchend  —— 手指从一个DOM元素上移开时触发。</li><li>touchmove  —— 手指在一个DOM元素上滑动时触发。</li><li><strong>触摸列表：</strong><ul><li>touches  —— 正在触摸屏幕的所有手指的一个列表。</li><li>targettouches  —— 正在触摸当前DOM元素的手指列表。</li><li>changedtouches  —— 手指状态发生了改变的列表。</li></ul></li></ul></li></ul><h3 id="7-5、click延时解决方案"><a href="#7-5、click延时解决方案" class="headerlink" title="7.5、click延时解决方案"></a>7.5、click延时解决方案</h3><ul><li><p>移动端click事件会有300ms的延迟，原因是移动端屏幕双击会缩放页面，解决方案：</p><ul><li><p>禁用缩放。浏览器禁用默认的双击缩放行为并且去掉300ms的点击延迟。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;user-scalable=no&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>利用touch事件解决：</p><ul><li>当我们手指触摸屏幕时，记录当前触摸时间。</li><li>当我们手指离开屏幕时，用离开的时间减去触摸的时间。</li><li>如果时间小于150ms，并且没有滑动屏幕，那么我们就定义为点击。</li></ul></li></ul></li></ul><h2 id="8、本地存储"><a href="#8、本地存储" class="headerlink" title="8、本地存储"></a>8、本地存储</h2><ul><li><strong>本地存储特性：</strong><ul><li>数据存储在用户浏览器中。</li><li>容量较大，sessionStorage 约 5M，localStorage 约 20M。</li><li>只能存储字符串，可以将对象 JSON.stringify()编码后存储。</li></ul></li><li><strong>window.sessionStorage：</strong><ul><li><strong>特点：</strong><ul><li>生命周期为关闭浏览器窗口。</li><li>在同一个页面下数据可以共享。</li><li>以键值对的形式存储使用。</li></ul></li><li><strong>存储数据：</strong><ul><li>sessionStorage.setItem(key,value)</li></ul></li><li><strong>获取数据：</strong><ul><li>sessionStorage.getItem(key)</li></ul></li><li><strong>删除数据：</strong><ul><li>sessionStorage.removeItem(key)</li></ul></li><li><strong>删除所有数据：</strong><ul><li>sessionStorage.clear()</li></ul></li></ul></li><li><strong>Window.localStorage:</strong><ul><li><strong>特点：</strong><ul><li>生命周期永久生效，除非手动删除，否则关闭页面也会存在。</li><li>可以多页面共享（同一浏览器）。</li><li>以键值对的形式存储使用。</li></ul></li><li><strong>存储数据：</strong><ul><li>localStorage.setItem(key,value)</li></ul></li><li><strong>获取数据：</strong><ul><li>localStorage.getItem(key)</li></ul></li><li><strong>删除数据：</strong><ul><li>localStorage.removeItem(key)</li></ul></li><li><strong>删除所有数据：</strong><ul><li>localStorage.clear()</li></ul></li></ul></li></ul><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本文件已定稿，最后修改时间 20240511 03:20&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; title=&quot;JavaScript&quot;&gt;&lt;/a&gt;JavaScript&lt;/h1&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://cychenhaibin.github.io/2024/07/14/CSS3/"/>
    <id>http://cychenhaibin.github.io/2024/07/14/CSS3/</id>
    <published>2024-07-14T11:40:18.638Z</published>
    <updated>2024-07-14T12:17:28.412Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><p>本文件已定稿，最后修改时间 20240430 02:42</p><hr><h1 id="CSS3"><a href="#CSS3" class="headerlink" title="CSS3"></a>CSS3</h1><h2 id="1、语法规范"><a href="#1、语法规范" class="headerlink" title="1、语法规范"></a>1、语法规范</h2><h3 id="1-1、行内样式表"><a href="#1-1、行内样式表" class="headerlink" title="1.1、行内样式表"></a>1.1、行内样式表</h3><ul><li><p><strong>行内样式表</strong>（内联样式表）是在元素标签内部的style属性中设定CSS样式。</p></li><li><p>行内样式表由于书写繁琐，没有体现结构与表现相分离的思想，只适合于修改简单的样式，<strong>不推荐大量使用</strong>。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">/*CSS的注释写法*/</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: red; font-size:12px; &quot;</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="1-2、内部样式表"><a href="#1-2、内部样式表" class="headerlink" title="1.2、内部样式表"></a>1.2、内部样式表</h3><ul><li><p><strong>内部样式表</strong>（内嵌样式表）是将所有的CSS代码抽取出来，单独放到一个style标签中，写到html页面内部。</p></li><li><p>style标签理论上可放在html的任何位置，但<strong>通常放在head标签中</strong>。</p></li><li><p>内部样式表也没有实现结构与表现的完全分离，<strong>推荐在练习时使用</strong>。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="1-3、外部样式表"><a href="#1-3、外部样式表" class="headerlink" title="1.3、外部样式表"></a>1.3、外部样式表</h3><ul><li><p><strong>外部样式表</strong>是将样式单独写到CSS文件中，然后把CSS文件引入到html页面中使用，<strong>开发推荐</strong>。</p><ul><li><p>新建一个后缀名为**.css**的样式文件，所有的CSS代码都放到此文件中。</p></li><li><p>在html页面，使用<strong>link标签引入</strong>.css文件。</p><ul><li>style.css：</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*只有样式，没有标签*/</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>html：</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="1-4、书写顺序"><a href="#1-4、书写顺序" class="headerlink" title="1.4、书写顺序"></a>1.4、书写顺序</h3><ul><li>建议遵循以下顺序：<ul><li><p>布局定位属性：display、position、float、clear、visibility、overflow（建议display第一个写，毕竟关系到模式）</p></li><li><p>自身属性：width、height、margin、padding、border、background</p></li><li><p>文本属性：color、font、text-decoration、text-align、vertical-align、white-space、break-word</p></li><li><p>其他属性：content、cursor、border-radius、box-shadow、text-shadow、background:linear-gradient</p></li></ul></li></ul><h2 id="2、元素显示模式"><a href="#2、元素显示模式" class="headerlink" title="2、元素显示模式"></a>2、元素显示模式</h2><ul><li><p><strong>元素显示模式</strong>就是元素（标签）以什么方式进行显示，比如div标签自己占一行，一行可以放多个span标签。</p></li><li><p>HTML元素分为块元素、行内元素、行内块元素。</p></li></ul><h3 id="2-1、块元素"><a href="#2-1、块元素" class="headerlink" title="2.1、块元素"></a>2.1、块元素</h3><ul><li><p>常见的块元素有：h1-h6、<strong>div（最典型）</strong>、p、ol、ul、li等。</p><ul><li><p>块元素独占一行。</p></li><li><p>高度、宽度、外边距、内边距都可以控制。</p></li><li><p>宽度默认是容器（父级宽度）的100%。</p></li><li><p>是一个容器及盒子，里面可以放行内或者块级元素。</p></li><li><p><strong>文字类的块元素内不能使用块级元素</strong>，如h1-h6 和 p 标签，里面不能放其他类型的块级元素。</p></li></ul></li></ul><h3 id="2-2、行内元素"><a href="#2-2、行内元素" class="headerlink" title="2.2、行内元素"></a>2.2、行内元素</h3><ul><li><p>常见的行内元素有：a、strong、em、del、ins、b、i、u、<strong>span（最典型）</strong>等。</p><ul><li>相邻行内元素在一行上，一行可以显示多个行内元素。</li><li>宽、高直接设置是无效的。</li><li>默认宽度就是它本身内容的宽度。</li><li>行内元素只能容纳文本和其他行内元素。</li></ul></li><li><p><strong>注意：</strong></p><ul><li><p>链接里面不能再放链接。</p></li><li><p><strong>特殊情况下a标签中可以放块级元素</strong>，但给a标签转换一下块级模式最安全。</p></li></ul></li></ul><h3 id="2-3、行内块元素"><a href="#2-3、行内块元素" class="headerlink" title="2.3、行内块元素"></a>2.3、行内块元素</h3><ul><li><p>在行内元素中有几个特殊的标签，<strong>img、input、td</strong>，它们同时具有行内元素和块元素的特点。</p><ul><li><p>和相邻行内元素（行内块元素）在一行上，但是它们之间会有空白间隙，一行可以显示多个行内块元素（行内元素特点）。</p></li><li><p>默认宽度就是它本身内容的宽度（行内元素特点）。</p></li><li><p>宽度、行高、外边距、内边距都可以控制（块元素特点）。</p></li></ul></li></ul><h3 id="2-4、显示模式转换"><a href="#2-4、显示模式转换" class="headerlink" title="2.4、显示模式转换"></a>2.4、显示模式转换</h3><ul><li>特殊情况下，我们需要元素模式的转换，比如要增加a标签链接的触发范围。<ul><li><p>转换为块元素：display:block;</p></li><li><p>转换为行内元素：display:inline;</p></li><li><p>转换为行内块：display:inline-block;</p></li></ul></li></ul><h2 id="3、基础选择器"><a href="#3、基础选择器" class="headerlink" title="3、基础选择器"></a>3、基础选择器</h2><h3 id="3-1、标签选择器"><a href="#3-1、标签选择器" class="headerlink" title="3.1、标签选择器"></a>3.1、标签选择器</h3><p><img src="/../image/CSS3/image-20221019185249410.png" alt="image-20221019185249410"></p><h3 id="3-2、类选择器"><a href="#3-2、类选择器" class="headerlink" title="3.2、类选择器"></a>3.2、类选择器</h3><ul><li><p>为标签设置class属性，通过  .类名  的方式设置CSS样式。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-3、id选择器"><a href="#3-3、id选择器" class="headerlink" title="3.3、id选择器"></a>3.3、id选择器</h3><ul><li><p>为标签设置id属性，通过  #id名  的方式设置CSS样式。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#red</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;red&quot;</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="3-4、通配符选择器"><a href="#3-4、通配符选择器" class="headerlink" title="3.4、通配符选择器"></a>3.4、通配符选择器</h3><ul><li><p>在CSS中，<strong>通配符选择器使用 * 定义</strong>，它表示选中页面中的所有标签。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            * &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>青春不常在，抓紧谈恋爱1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>青春不常在，抓紧谈恋爱2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="4、复合选择器"><a href="#4、复合选择器" class="headerlink" title="4、复合选择器"></a>4、复合选择器</h2><h3 id="4-1、后代选择器"><a href="#4-1、后代选择器" class="headerlink" title="4.1、后代选择器"></a>4.1、后代选择器</h3><ul><li><p><strong>后代选择器</strong>又称为包含选择器，可以选择父元素中的后代元素。</p></li><li><p><strong>语法：</strong>元素1 元素2,元素3…元素n { 样式 } —— 选择元素1中 的所有<strong>后代</strong>元素2、元素3…元素n </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span> <span class="selector-tag">div</span>, <span class="selector-tag">strong</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>青春不常在，抓紧谈恋爱1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span>青春不常在，抓紧谈恋爱2<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-2、子选择器"><a href="#4-2、子选择器" class="headerlink" title="4.2、子选择器"></a>4.2、子选择器</h3><ul><li><p><strong>子选择器</strong>只能选择某元素的最近一级子元素。</p></li><li><p><strong>语法：</strong>元素1 &gt; 元素2,元素3…元素n { 样式 } —— 选择元素1中所有<strong>子</strong>元素2、元素3…元素n </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">body</span> &gt; <span class="selector-tag">div</span>, <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>青春不常在，抓紧谈恋爱1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span>青春不常在，抓紧谈恋爱2<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-3、并集选择器"><a href="#4-3、并集选择器" class="headerlink" title="4.3、并集选择器"></a>4.3、并集选择器</h3><ul><li><p><strong>并集选择器</strong>可以选择多组标签，同时为它们定义相同的样式，<strong>通常用于集体声明</strong>。</p></li><li><p>并集选择器是各选择器通过 <strong>,</strong> 连接而成，任何形式的选择器都能作为并集选择器的一部分。</p></li><li><p><strong>语法：</strong>元素1,元素2…元素n { 样式 } —— 选择元素1、元素2…元素n</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span>, <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>青春不常在，抓紧谈恋爱1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span>青春不常在，抓紧谈恋爱2<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="4-4、交集选择器"><a href="#4-4、交集选择器" class="headerlink" title="4.4、交集选择器"></a>4.4、交集选择器</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 连着写就行 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span><span class="selector-class">.test</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>这是div标签<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span>这是div标签:test<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span>这是p标签:test<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-5、链接伪类选择器"><a href="#4-5、链接伪类选择器" class="headerlink" title="4.5、链接伪类选择器"></a>4.5、链接伪类选择器</h3><ul><li><p>所有标签都可添加，遵循<strong>LVHA</strong>书写顺序。</p><ul><li><p>a:link—— 选择所有未被访问的链接。</p></li><li><p>a:visited    ——  选择所有已被访问的链接。</p></li><li><p>a:hover    ——  选择鼠标指针位于其上的链接。</p></li><li><p>a:active    ——  选择活动链接（鼠标按下未弹起）。</p></li></ul></li></ul><h3 id="4-6、focus伪类选择器"><a href="#4-6、focus伪类选择器" class="headerlink" title="4.6、focus伪类选择器"></a>4.6、focus伪类选择器</h3><ul><li><p><strong>:focus 伪类选择器</strong>用于选取获得焦点（光标）的<strong>表单元素</strong>。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*获得焦点的input表单背景色变为红色*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="、CSS3新增选择器"><a href="#、CSS3新增选择器" class="headerlink" title="#、CSS3新增选择器"></a>#、CSS3新增选择器</h2><h3 id="1、属性选择器"><a href="#1、属性选择器" class="headerlink" title="#.1、属性选择器"></a>#.1、属性选择器</h3><ul><li>属性选择器可以根据<strong>元素特定的属性</strong>来选择元素，这样就可以不借助类选择器或id选择器。<ul><li><p>E[att]  —— 选择具有att属性的E元素。</p></li><li><p>E[att&#x3D;”val”]  —— 选择具有att属性且属性值<strong>等于</strong>val的E元素。</p></li><li><p>E[att^&#x3D;”val”]  —— 匹配具有att属性且属性值以val<strong>开头</strong>的E元素。</p></li><li><p>E[att$&#x3D;”val”]  —— 匹配具有att属性且属性值以val<strong>结尾</strong>的E元素。</p></li><li><p>E[att*&#x3D;”val”]  —— 匹配具有att属性且属性值<strong>含有</strong>val的E元素。</p></li></ul></li></ul><h3 id="2、结构伪类选择器"><a href="#2、结构伪类选择器" class="headerlink" title="#.2、结构伪类选择器"></a>#.2、结构伪类选择器</h3><ul><li>结构伪类选择器主要根据<strong>文档结构</strong>来选择元素，常用于根据父级选择里面的子元素。<ul><li>E:first-child —— 匹配父元素中第一个子元素E。</li><li>E:last-child —— 匹配父元素中最后一个子元素E。</li><li>E:nth-child(n) —— 匹配父元素中第n个子元素E。</li><li>E:first-of-type —— 指定类型 E 的第一个。</li><li>E:last-of-type —— 指定类型 E 的最后一个。</li><li>E:nth-of-type(n) —— 指定类型 E 的第n个。</li><li><strong>n可以是数字、关键字（even 偶数 odd奇数）、公式（2n偶数、2n+1奇数、5n倍数、n+5从5开始到最后、-n+5前5个）。</strong></li><li><strong>区别：</strong><ul><li>E:nth-child(n)对父元素里面的<strong>所有孩子</strong>排序选择，先找到第n个孩子，然后看是否和E匹配。</li><li>E:nth-of-type(n)对父元素里面<strong>指定子元素</strong>进行排序选择，先匹配E，然后根据E找到第n个孩子。</li></ul></li></ul></li></ul><h3 id="3、伪元素选择器"><a href="#3、伪元素选择器" class="headerlink" title="#.3、伪元素选择器"></a>#.3、伪元素选择器</h3><ul><li><p>伪元素选择器可以帮助我们利用<strong>CSS创建标签元素</strong>，而不需要HTML标签。</p><ul><li>::before —— 在元素内部的<strong>前面</strong>插入内容。</li><li>::after —— 在元素内部的<strong>后面</strong>插入内容。</li></ul></li><li><p><strong>语法：</strong>element::before{}</p></li><li><p><strong>注意：</strong></p><ul><li><p>before和after创建的元素属于<strong>行内元素</strong>。</p></li><li><p>新创建的元素在<strong>文档树是找不到</strong>的，所以称为伪元素。</p></li><li><p>before和after<strong>必须有content属性</strong>。</p></li></ul></li></ul><h2 id="5、CSS三大特性"><a href="#5、CSS三大特性" class="headerlink" title="5、CSS三大特性"></a>5、CSS三大特性</h2><h3 id="5-1、层叠性"><a href="#5-1、层叠性" class="headerlink" title="5.1、层叠性"></a>5.1、层叠性</h3><ul><li><p><strong>层叠性</strong>就是相同的选择器给设置相同的样式（值不一样），此时一个样式就会层叠另一个冲突的样式。</p></li><li><p>层叠性<strong>原则</strong>：</p><ul><li>样式冲突，遵循的原则是<strong>就近原则</strong>，哪个样式离结构近，就执行哪个样式。</li><li>样式不冲突，不会层叠。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*就近原则，后来居上，层叠red，显示blue*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="5-2、继承性"><a href="#5-2、继承性" class="headerlink" title="5.2、继承性"></a>5.2、继承性</h3><ul><li>子标签会继承父标签的某些样式（text-font-line-color）。恰当地使用继承可以简化代码，降低CSS样式的复杂性。</li><li><strong>行高的继承性：</strong><ul><li><p>行高可以跟单位，也可以不跟单位。</p></li><li><p>行高继承的优势在于子元素可以根据自己文字大小自动调整行高。</p></li></ul></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/*p标签继承父标签div的red颜色*/</span></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*font: 14px/14px &#x27;Microsoft YaHei&#x27;;*/</span></span></span><br><span class="line"><span class="language-css">                <span class="comment">/*以下写法表示：如果子元素p没有设置行高，则p行高=1.5 * p文字大小 */</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">font</span>: <span class="number">14px</span>/<span class="number">1.5</span> <span class="string">&#x27;Microsoft YaHei&#x27;</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>青春不常在，抓紧谈恋爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-3、优先级"><a href="#5-3、优先级" class="headerlink" title="5.3、优先级"></a>5.3、优先级</h3><ul><li><p>当同一个元素（标签）有多个选择器为其设置样式，就会有优先级的产生。</p><ul><li><p>选择器相同，则执行层叠性。</p></li><li><p>选择器不同，则根据<strong>选择器权重</strong>执行。</p><ul><li>继承或者 * 权重为（0,0,0,0）</li><li>标签选择器，伪元素选择器                 （0,0,0,1）</li><li>类选择器，伪类选择器、属性选择器  （0,0,1,0）</li><li>id选择器                                                 （0,1,0,0）</li><li>行内样式                                                （1,0,0,0）</li><li>!important                                                无穷大</li></ul></li><li><p><strong>权重叠加：</strong>如果是复合选择器，则会有权重叠加。</p><img src="../image/image-20221019221741106.png" alt="image-20221019221741106" style="zoom:50%;" /></li></ul></li></ul><h2 id="6、字体属性"><a href="#6、字体属性" class="headerlink" title="6、字体属性"></a>6、字体属性</h2><h3 id="6-1、字体"><a href="#6-1、字体" class="headerlink" title="6.1、字体"></a>6.1、字体</h3><ul><li><p>CSS使用<strong>font-family</strong>属性定义文本的字体系列。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">font-family</span>: Arial, <span class="string">&quot;Microsoft YaHei UI&quot;</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-2、字号"><a href="#6-2、字号" class="headerlink" title="6.2、字号"></a>6.2、字号</h3><ul><li><p>CSS使用<strong>font-size</strong>属性定义文本的大小。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="6-3、粗细"><a href="#6-3、粗细" class="headerlink" title="6.3、粗细"></a>6.3、粗细</h3><ul><li>CSS使用<strong>font-weight</strong>属性定义文字的粗细。</li></ul><h3 id="6-4、风格"><a href="#6-4、风格" class="headerlink" title="6.4、风格"></a>6.4、风格</h3><ul><li><p>CSS使用<strong>font-style</strong>属性定义文本的风格。</p><ul><li><p>normal —— 默认值，浏览器会显示标准的字体样式。</p></li><li><p>italic     —— 浏览器会显示斜体的字体样式。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">font-style</span>: italic;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="6-5、复合属性"><a href="#6-5、复合属性" class="headerlink" title="6.5、复合属性"></a>6.5、复合属性</h3><ul><li><strong>语法：</strong>选择器 {font: font-style font-weight font-size&#x2F;line-height font-family;}<ul><li>font属性，必须按照<strong>上述顺序</strong>写，以<strong>空格</strong>隔开。</li><li><strong>font-size和font-family</strong>属性必须设置，其余属性可以省略（取默认值），否则font属性将不起作用。</li></ul></li></ul><h2 id="7、文本属性"><a href="#7、文本属性" class="headerlink" title="7、文本属性"></a>7、文本属性</h2><h3 id="7-1、颜色"><a href="#7-1、颜色" class="headerlink" title="7.1、颜色"></a>7.1、颜色</h3><ul><li><p><strong>color</strong>属性用于定义文本的颜色，<strong>有3种表示方式</strong>：</p><ul><li>预定义的颜色英文单词。</li><li>十六进制<strong>（开发推荐）</strong>，如#FF0000。</li><li>RGB代码，rgb(255,0,0)或rgb(100%,0%,0%)。</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="7-2、装饰文本"><a href="#7-2、装饰文本" class="headerlink" title="7.2、装饰文本"></a>7.2、装饰文本</h3><ul><li><strong>text-decoration</strong>属性规定添加到文本的装饰，比如上划线、下划线、删除线等。<ul><li>none——<strong>默认</strong>，没有装饰。</li><li>overline——上划线，几乎不用。</li><li>underline——下划线，<strong>常用</strong>。</li><li>line-through——删除线。</li></ul></li></ul><h3 id="7-3、对齐文本"><a href="#7-3、对齐文本" class="headerlink" title="7.3、对齐文本"></a>7.3、对齐文本</h3><ul><li><p><strong>text-align</strong>属性用于设置元素内文本内容的对齐方式。</p><ul><li><p>left——<strong>默认</strong>，左对齐。</p></li><li><p>right——右对齐。</p></li><li><p>center——居中对齐。</p></li></ul></li></ul><h3 id="7-4、文本缩进"><a href="#7-4、文本缩进" class="headerlink" title="7.4、文本缩进"></a>7.4、文本缩进</h3><ul><li><strong>text-indent</strong>属性用来指定文本的第一行的缩进（甚至可以是负值），通常是将段落的首行缩进。</li><li>单位可以是 <strong>px 或em</strong>（em是相对单位，1em就是当前元素（font-size）1个文字的大小）。</li></ul><h3 id="7-5、行间距"><a href="#7-5、行间距" class="headerlink" title="7.5、行间距"></a>7.5、行间距</h3><ul><li><p><strong>line-height</strong>属性用来设置文字行与行之间的距离（行高）。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><img src="../image/image-20221019231021604.png" alt="image-20221019231021604" style="zoom: 33%;" /></li></ul><h2 id="8、CSS的背景"><a href="#8、CSS的背景" class="headerlink" title="8、CSS的背景"></a>8、CSS的背景</h2><h3 id="8-1、背景颜色"><a href="#8-1、背景颜色" class="headerlink" title="8.1、背景颜色"></a>8.1、背景颜色</h3><ul><li><p><strong>background-color</strong>属性定义了元素的背景颜色。</p></li><li><p><strong>默认值</strong>是transparent，透明色。</p></li><li><p>CSS3为我们提供了<strong>背景颜色半透明</strong>的效果：rgba(0,0,0,.3)——黑色半透明，a的取值范围在0-1之间，0.3习惯性省略0。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">3</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-2、背景图像"><a href="#8-2、背景图像" class="headerlink" title="8.2、背景图像"></a>8.2、背景图像</h3><ul><li><p><strong>background-image</strong>属性定义了元素的背景图像，<strong>背景图像会盖住背景颜色</strong>。</p><ul><li><p>none——默认值。</p></li><li><p>url——使用绝对路径或相对路径指定背景图片。</p></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">958px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">958px</span>;</span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;image.jpg&quot;</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-3、背景平铺"><a href="#8-3、背景平铺" class="headerlink" title="8.3、背景平铺"></a>8.3、背景平铺</h3><ul><li><p>可使用<strong>background-repeat</strong>对背景图像进行平铺。</p><ul><li><p>repeat——<strong>默认</strong>，横纵向都平铺。</p></li><li><p>no-repeat——不平铺。</p></li><li><p>repeat-x——横向平铺。</p></li><li><p>repeat-y——纵向平铺。</p></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">958px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">958px</span>;</span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;image.jpg&quot;</span>);</span><br><span class="line">            <span class="attribute">background-repeat</span>: repeat;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-4、背景图像位置"><a href="#8-4、背景图像位置" class="headerlink" title="8.4、背景图像位置"></a>8.4、背景图像位置</h3><ul><li><p><strong>background-position</strong>属性（x y）可以设置图像在背景中的位置。</p><ul><li><p>length——百分数、由浮点数字和单位标识符组成的长度值。</p></li><li><p>position——top、bottom、left、right、center 方位名词。</p><ul><li>参数是方位名词：<ul><li>如果两个值都是方位名词，则两个值的顺序不重要，比如left top 和 top left效果一致。</li><li>如果只有一个方位名词，另一个省略，则第二个值默认为center。</li></ul></li><li>参数是精确单位：<ul><li>第一个是x坐标，第二个是y坐标。</li><li>如果只有一个值，则这个值规定为x坐标，y坐标默认为垂直居中。</li></ul></li><li>参数是混合单位：<ul><li>默认第一个是x坐标，第二个是y坐标。</li></ul></li></ul></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">958px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">958px</span>;</span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;image.jpg&quot;</span>);</span><br><span class="line">            <span class="attribute">background-repeat</span>: repeat;</span><br><span class="line">            <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-5、背景图像固定"><a href="#8-5、背景图像固定" class="headerlink" title="8.5、背景图像固定"></a>8.5、背景图像固定</h3><ul><li><p><strong>background-attachment</strong>属性设置背景图像是否固定或者随着页面的其余部分滚动。</p></li><li><p>可制作<strong>视差滚动</strong>的效果。</p><ul><li>fixed——背景图像固定。</li><li>scroll——滚动。</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">958px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">958px</span>;</span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">&quot;image.jpg&quot;</span>);</span><br><span class="line">            <span class="attribute">background-repeat</span>: repeat;</span><br><span class="line">            <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">background-attachment</span>: scroll;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="8-6、复合属性"><a href="#8-6、复合属性" class="headerlink" title="8.6、复合属性"></a>8.6、复合属性</h3><ul><li><strong>background</strong>属性可以把以上样式综合来写，更节约代码（<strong>开发推荐</strong>），<strong>习惯顺序</strong>为：<ul><li>background 背景颜色 背景图片 背景平铺 背景图像滚动 背景图片位置;</li></ul></li></ul><h2 id="9、盒子模型"><a href="#9、盒子模型" class="headerlink" title="9、盒子模型"></a>9、盒子模型</h2><ul><li><p><strong>盒子模型</strong>就是把html页面中的布局元素看作是一个矩形的盒子，也就是一个盛装内容的容器。</p></li><li><p>盒子模型包括：边框、外边距、内边距、实际内容。</p><img src="../image/image-20221020082237828.png" alt="image-20221020082237828" style="zoom: 50%;" /></li></ul><h3 id="9-1、边框"><a href="#9-1、边框" class="headerlink" title="9.1、边框"></a>9.1、边框</h3><ul><li><p><strong>border</strong>属性可以设置元素的边框，包括边框宽度（粗细）、边框样式、边框颜色。</p></li><li><p><strong>语法：</strong></p><ul><li><p>border : border-width border-style border-color;——  （<strong>没有顺序</strong>）</p></li><li><p>border-top : border-width border-style border-color;    —— （只设定上边框，其余同理）</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">            solid——实线边框</span></span><br><span class="line"><span class="comment">            dashed——虚线边框</span></span><br><span class="line"><span class="comment">            dotted——点线边框</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="attribute">border</span>: <span class="number">2px</span> solid red;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>border-collapse</strong>属性可以用来设置<strong>表格单元格细线</strong>。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>: collapse;<span class="comment">/*表示相邻边框合并在一起*/</span></span><br></pre></td></tr></table></figure></li><li><p><strong>border-radius</strong>属性可以设置<strong>圆角边框</strong>样式，<strong>语法：</strong>border-radius : length;</p><ul><li><p>属性值可以为数值或百分比。</p></li><li><p>如果是<strong>正方形</strong>，把数值设置为边长一半即可变为<strong>圆形边框</strong>，或直接写 50%。</p></li><li><p>如果是<strong>矩形</strong>，设置为高度的一半即可变为<strong>圆角边框</strong>。</p></li><li><p>该属性是一个<strong>简写</strong>方式，可以跟4个值，分别代表左上角、右上角、右下角、左下角。</p></li><li><p>也可以<strong>分别设置</strong>各个角的圆角边框效果：</p><ul><li>border-top-left-radius</li><li>border-top-right-radius</li><li>border-bottom-right-radius</li><li>border-bottom-left-radius</li></ul></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">border</span>: <span class="number">2px</span> solid red;</span><br><span class="line">            <span class="attribute">border-radius</span>: <span class="number">51px</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>注意：边框会改变盒子的实际大小。</strong></p><img src="../image/image-20221020093849286.png" alt="image-20221020093849286" style="zoom:50%;" /></li></ul><h3 id="9-2、内边距"><a href="#9-2、内边距" class="headerlink" title="9.2、内边距"></a>9.2、内边距</h3><ul><li><strong>padding</strong>属性用于设置内边距，即边框和内容的距离。<ul><li>padding属性<strong>可以有1到4个值</strong>：<ul><li>padding : 5px;    ——上下左右都是5px内边距。</li><li>padding : 5px 10px;   ——上下内边距为5px，左右内边距为10px。</li><li>padding : 5px 10px 20px;   ——上内边距为5px，左右内边距为10px，下内边距为20px。</li><li>padding : 5px 10px 20px 30px;  ——上右下左内边距（顺时针）。</li></ul></li><li>也可以<strong>分别设置</strong>上下左右的内边距：<ul><li>padding-top</li><li>padding-bottom</li><li>padding-left</li><li>padding-right</li></ul></li></ul></li><li><strong>注意：</strong>如果盒子本身没有指定宽高属性，此时padding不会撑开盒子大小。</li></ul><h3 id="9-3、外边距"><a href="#9-3、外边距" class="headerlink" title="9.3、外边距"></a>9.3、外边距</h3><ul><li><p><strong>margin</strong>属性用于设置外边距，即盒子和盒子的距离。</p><ul><li>margin属性<strong>可以有1到4个值</strong>（写法和意义同padding一致）。</li><li>也可以<strong>分别设置</strong>上下左右的外边距：<ul><li>margin-top</li><li>margin-bottom</li><li>margin-left</li><li>margin-right</li></ul></li></ul></li><li><p>外边距可以让<strong>块级盒子水平居中</strong>，满足以下条件即可：</p><ul><li><p>盒子必须指定了宽度。</p></li><li><p>盒子左右的外边距都设置为auto。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>相邻块元素垂直外边距的合并：</strong></p><ul><li><p><strong>定义：</strong>当上下相邻的两个块元素（兄弟关系）相遇，如果上面的元素有下外边距，下面的元素有上外边距，则它们之间的垂直距离不是下外边距和上外边距之和，而是取其较大值。</p></li><li><p><strong>解决方案：</strong>尽量只给一个盒子添加margin值。</p></li></ul><img src="../image/image-20221020095754765.png" alt="image-20221020095754765" style="zoom:50%;" /></li><li><p><strong>嵌套块元素垂直外边距的塌陷：</strong></p></li><li><p><strong>定义：</strong>对于两个嵌套关系（父子）的块元素，父元素有上外边距，子元素也有上外边距，此时父元素会塌陷较大的外边距值。</p></li><li><p><strong>解决方案：</strong></p><ul><li><p>可以为父元素定义上边框。</p></li><li><p>可以为父元素定义内边距。</p></li><li><p>可以为父元素添加overflow:hidden;</p></li></ul><img src="../image/image-20221020100439052.png" alt="image-20221020100439052" style="zoom:50%;" /></li></ul><h3 id="9-4、清除内外边距"><a href="#9-4、清除内外边距" class="headerlink" title="9.4、清除内外边距"></a>9.4、清除内外边距</h3><ul><li><p>网页元素很多都带有默认的内外边距，而且不同浏览器默认的也不一样。因此我们在布局前，先要清除下网页元素的内外边距。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="9-5、盒子阴影"><a href="#9-5、盒子阴影" class="headerlink" title="9.5、盒子阴影"></a>9.5、盒子阴影</h3><ul><li><strong>box-shadow</strong>属性，可以为盒子添加阴影。</li><li><strong>语法：</strong>box-shadow : <strong>h-shadow  v-shadow</strong>  blur spread color inset;<ul><li>h-shadow  —— 必须，水平阴影的位置，允许负值。</li><li>v-shadow  —— 必须，垂直阴影的位置，允许负值。</li><li>blur  —— 可选，模糊距离。</li><li>spread  —— 可选，阴影的尺寸。</li><li>color  —— 可选，阴影的颜色。</li><li>inset  —— 可选，将外部阴影改为内部阴影。</li></ul></li><li><strong>注意：</strong><ul><li>默认的是外部阴影（outset），但不可以写这个单词，否则导致阴影无效。</li><li>盒子阴影不占用空间，不会影响其他盒子的排列。</li></ul></li></ul><h3 id="9-6、文字阴影"><a href="#9-6、文字阴影" class="headerlink" title="9.6、文字阴影"></a>9.6、文字阴影</h3><ul><li><p><strong>text-shadow</strong>属性，可以为文字添加阴影。</p></li><li><p><strong>语法：</strong>text-shadow : <strong>h-shadow  v-shadow</strong>  blur color;</p></li></ul><h3 id="9-7、box-sizing"><a href="#9-7、box-sizing" class="headerlink" title="9.7、box-sizing"></a>9.7、box-sizing</h3><ul><li>通过<strong>box-sizing</strong>属性来指定盒子模型，这样我们计算盒子大小的方式就发生了变化。<ul><li>box-sizing:content-box;  —— 盒子大小为 <strong>width + padding + border （以前默认的）</strong>。</li><li>box-sizing:border-box;  —— 盒子大小为 <strong>width</strong>。</li></ul></li><li>如果盒子模型改为了box-sizing:border-box;那padding 和 border就不会撑大盒子了（前提是padding 和 border不会超过width）。</li></ul><h2 id="10、浮动"><a href="#10、浮动" class="headerlink" title="10、浮动"></a>10、浮动</h2><h3 id="10-1、概述"><a href="#10-1、概述" class="headerlink" title="10.1、概述"></a>10.1、概述</h3><ul><li><p><strong>网页布局的本质</strong>就是用CSS来摆放盒子，CSS提供了3种传统布局方式：</p><ul><li>普通流（标准流）—— 标签按默认方式排列</li><li>浮动</li><li>定位</li></ul></li><li><p><strong>定义：float</strong>属性用于创建浮动框，将其移动到一边，直到左边缘或右边缘触及包含块或另一个浮动框的边缘。</p></li><li><p><strong>语法：</strong>选择器 {float: 属性值;}</p><ul><li>none —— <strong>默认值</strong>，元素不浮动。</li><li>left —— 元素向左浮动。</li><li>right —— 元素向右浮动。</li></ul></li><li><p><strong>作用：</strong>如何让多个块级盒子水平排列成一行？如何实现两个块级盒子的左右对齐？</p><img src="../image/image-20221020102851449.png" alt="image-20221020102851449" style="zoom: 50%;" /><img src="../image/image-20221020102931583.png" alt="image-20221020102931583" style="zoom:50%;" /></li><li><p><strong>总结：</strong></p><ul><li><strong>任何元素都可以浮动</strong>，不管原先是什么模式的元素。</li><li><strong>浮动最典型的运用</strong>就是可以让多个块级元素一行内排列显示。</li><li><strong>网页布局第一准则</strong>：多个块级元素纵向排列找标准流，多个块级元素横向排列找浮动。</li></ul><img src="../image/image-20221020105102701.png" alt="image-20221020105102701" style="zoom:50%;" /></li></ul><h3 id="10-2、浮动特性"><a href="#10-2、浮动特性" class="headerlink" title="10.2、浮动特性"></a>10.2、浮动特性</h3><ul><li><p>浮动特性分别是<strong>脱标、一行显示、行内块特征</strong>。</p></li><li><p><strong>脱标：</strong></p><ul><li><strong>定义：</strong>脱离标准流（浮）移动到指定位置（动），<strong>是浮动最重要的特性</strong>。</li><li><strong>特点：</strong>浮动的盒子不再保留原先的位置。</li></ul></li><li><p><strong>一行显示：</strong></p><ul><li>如果多个盒子都设置了浮动，则它们会按照属性值<strong>一行内显示（没有间隙）</strong>并且<strong>顶端对齐</strong>排列。</li><li>如果父级宽度装不下这些浮动的盒子，多出的盒子会<strong>另起一行对齐</strong>。</li></ul></li><li><p><strong>行内块特征：</strong></p><ul><li>如果块级盒子没有设置宽度，添加浮动后，它的大小根据内容来定。</li><li>浮动的盒子中间没有缝隙。</li><li>行内元素同理。</li></ul><img src="../image/image-20221020110452901.png" alt="image-20221020110452901" style="zoom:50%;" /><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#div1</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#div2</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*设置浮动*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-id">#div3</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: springgreen;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="10-3、清除浮动"><a href="#10-3、清除浮动" class="headerlink" title="10.3、清除浮动"></a>10.3、清除浮动</h3><ul><li><p><strong>为什么要清除浮动？</strong>我们会先定义标准流父盒子，在父盒子里面摆放浮动子盒子，但有的情况下不方便设置父盒子的高度，但父盒子高度为0时，由于浮动的子盒子不占位置，就会影响后面的标准流盒子。</p><img src="../image/image-20221020112204758.png" alt="image-20221020112204758" style="zoom: 25%;" /><img src="../image/image-20221020112259056.png" alt="image-20221020112259056" style="zoom: 33%;" /></li><li><p><strong>语法：</strong>选择器 { clear: 属性值;}</p><ul><li>left  —— 清除左侧浮动的影响。</li><li>right  —— 清除右侧浮动的影响。</li><li>both  —— 同时清除左右两侧浮动的影响<strong>（推荐）</strong>。</li></ul></li><li><p><strong>总结：</strong></p><ul><li><strong>清除浮动的本质</strong>是清除浮动元素脱标造成的影响。</li><li><strong>清除浮动的策略</strong>是<strong>闭合浮动</strong>，只让浮动在父盒子内部影响，不影响父盒子外面的其他盒子。</li></ul></li><li><p><strong>清除浮动的方法：</strong></p><ul><li><p><strong>额外标签法：</strong></p><ul><li><p>定义：额外标签法（隔墙法）会在浮动元素末尾添加一个<strong>空的块级标签</strong>，例如div或者br等（<strong>W3C推荐</strong>）。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;clear: both&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>优点：通俗易懂，书写方便。</p></li><li><p>缺点：添加许多无意义标签，结构化较差。</p></li></ul></li><li><p><strong>父元素overflow：</strong></p><ul><li>定义：给父级元素添加overflow属性，将属性值设置为hidden、auto或scroll。</li><li>优点：代码简洁。</li><li>缺点：无法显示溢出的部分。</li></ul></li><li><p><strong>after伪元素：</strong></p><ul><li><p>定义：**:after**方式是额外标签法的升级版，在CSS样式中添加下图代码后，在父元素中调用类即可 。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">           <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">           <span class="attribute">display</span>: block;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">           <span class="attribute">clear</span>: both;</span><br><span class="line">           <span class="attribute">visibility</span>: hidden;</span><br><span class="line">       &#125;</span><br><span class="line">      </span><br><span class="line">       <span class="comment">/*IE 6 7 专有*/</span></span><br><span class="line">       <span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">           *zoom: <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p>优点：没有增加标签，结构更简单。</p></li><li><p>缺点：照顾低版本浏览器。</p></li></ul></li><li><p><strong>双伪元素法：</strong></p><ul><li><p>定义：在CSS样式中添加下图代码后，在父元素中调用类即可 。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:before</span>, <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">           <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">           <span class="attribute">display</span>: table;</span><br><span class="line">       &#125;</span><br><span class="line">      </span><br><span class="line">       <span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">           <span class="attribute">clear</span>: both;</span><br><span class="line">       &#125;</span><br><span class="line">      </span><br><span class="line">       <span class="comment">/*IE 6 7 专有*/</span></span><br><span class="line">       <span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">           *zoom: <span class="number">1</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure></li><li><p>优点：代码更简洁。</p></li><li><p>缺点：照顾低版本浏览器。</p></li></ul></li></ul></li></ul><h2 id="11、定位"><a href="#11、定位" class="headerlink" title="11、定位"></a>11、定位</h2><h3 id="11-1、概述"><a href="#11-1、概述" class="headerlink" title="11.1、概述"></a>11.1、概述</h3><ul><li><strong>定义：</strong>将盒子定在某一个位置。</li><li><strong>定位 &#x3D; 定位模式 + 偏移量。</strong><ul><li>定位模式通过<strong>position属性</strong>来设置：<ul><li>static  —— 静态定位。</li><li>relative  —— 相对定位。</li><li>absolute  —— 绝对定位。</li><li>fixed  —— 固定定位。</li><li>stick  —— 粘性定位。</li></ul></li><li><strong>偏移量有4个属性：</strong><ul><li>top:80px;  —— 顶端偏移量，定位元素相对于其<strong>父元素上边线</strong>的距离。</li><li>bottom:80px; </li><li>left:80px; </li><li>right:80px;</li></ul></li></ul></li></ul><h3 id="11-2、定位模式"><a href="#11-2、定位模式" class="headerlink" title="11.2、定位模式"></a>11.2、定位模式</h3><ul><li><p>定位模式分别有：静态定位、相对定位、绝对定位、固定定位、粘性定位。</p></li><li><p><strong>静态定位：</strong></p><ul><li>静态定位是元素的<strong>默认定位方式</strong>，无定位的意思。</li><li><strong>语法</strong>：选择器 {position: static;}<ul><li>没有偏移量，<strong>很少使用</strong>。</li></ul></li></ul></li><li><p><strong>相对定位：</strong></p><ul><li><p>相对定位是元素在移动位置的时候<strong>相对于它原来的位置</strong>来说的。</p></li><li><p><strong>语法</strong>：选择器 {position: relative;}</p><ul><li>它是相对于自己原来的位置来移动。</li><li>原来在标准流的位置继续占有（<strong>不脱标</strong>，继续保留原来的位置）。</li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">          <span class="attribute">position</span>: relative;</span><br><span class="line">          <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>绝对定位：</strong></p><ul><li>绝对定位是元素在移动位置的时候相对于它祖先元素来说的。</li><li><strong>语法</strong>：选择器 {position: absolute;}<ul><li>如果没有祖先元素或者祖先元素没有定位，则以浏览器为准定位。</li><li>如果祖先元素有定位，则以最近一级的有定位的祖先元素为参考点移动位置。</li><li>绝对定位不再占有原先的位置（<strong>脱标</strong>）。</li></ul></li><li>绝对定位的盒子居中：加了绝对定位的盒子不能通过margin:0 auto实现水平居中，但可以通过以下方式实现<strong>水平和垂直居中</strong>：<ul><li>left:50%;  —— 让盒子的左侧移动到父级元素的水平中心位置。</li><li>margin-left:-100px;  —— 让盒子向左移动自身宽度的一半。</li></ul></li><li><strong>总结：子绝父相。</strong></li></ul></li><li><p><strong>固定定位：</strong></p><ul><li>固定定位元素是固定于浏览器可视区的位置。</li><li><strong>语法</strong>：选择器 {position: fixed;}<ul><li>以浏览器的可视窗口为参照点移动元素。</li><li>跟父元素没任何关系。</li><li>不随滚动条滚动。</li><li>不再占有原先的位置（<strong>脱标</strong>）。</li></ul></li></ul></li><li><p><strong>粘性定位：</strong></p><ul><li>粘性定位可以看作是相对定位和固定定位的混合。</li><li><strong>语法</strong>：选择器 {position: stick; top:10px;}<ul><li>以浏览器的可视窗口为参照点移动元素（固定定位特点）。</li><li>粘性定位占有原先的位置（相对定位的特点）。</li><li>必须添加一个偏移量属性才有效。</li><li>跟页面滚动搭配使用，兼容性较差，IE不支持。</li></ul></li></ul></li></ul><h3 id="11-3、定位的叠放次序"><a href="#11-3、定位的叠放次序" class="headerlink" title="11.3、定位的叠放次序"></a>11.3、定位的叠放次序</h3><ul><li>在使用定位布局时，盒子可能出现重叠，可以使用<strong>z-index属性</strong>来设置盒子的前后顺序。</li><li><strong>语法</strong>：选择器 {z-index: 1;}<ul><li>只有有定位的盒子才有此属性。</li><li>数值可以是正负整数和0，<strong>默认是auto</strong>，<strong>数值越大盒子越靠上</strong>。</li><li>如果<strong>数值相同</strong>，则按照书写顺序，<strong>后来居上</strong>。</li></ul></li></ul><h2 id="12、flex布局"><a href="#12、flex布局" class="headerlink" title="12、flex布局"></a>12、flex布局</h2><p>Flex布局也叫弹性布局，是<strong>浏览器提倡的布局模型</strong>，非常适合结构化布局，提供了强大的空间分布和对齐能力。</p><p>Flex模型不会产生浮动布局中脱标现象，布局网页更简单、更灵活。</p><h3 id="12-1、组成"><a href="#12-1、组成" class="headerlink" title="12.1、组成"></a>12.1、组成</h3><img src="../image/image-20240219031524994.png" alt="image-20240219031524994" style="zoom: 33%;" /><h3 id="12-2、主轴与侧轴对齐方式"><a href="#12-2、主轴与侧轴对齐方式" class="headerlink" title="12.2、主轴与侧轴对齐方式"></a>12.2、主轴与侧轴对齐方式</h3><ul><li><p>主轴对齐方式：justify-content属性</p></li><li><p>侧轴对齐方式：align-items 当前弹性容器内所有弹性盒子；align-self 单独控制某个弹性盒子</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置弹性布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 1、设置主轴对齐方式 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* justify-content: flex-start; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* justify-content: flex-end; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* justify-content: center; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* justify-content: space-between; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* justify-content: space-around; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* justify-content: space-evenly; */</span></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 2、设置侧轴对齐方式 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* stretch弹性盒子没有高才能拉伸 */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* align-items: stretch; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* align-items: center; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* align-items: flex-start; */</span></span></span><br><span class="line"><span class="language-css">            <span class="comment">/* align-items: flex-end; */</span></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="12-3、修改主轴方向"><a href="#12-3、修改主轴方向" class="headerlink" title="12.3、修改主轴方向"></a>12.3、修改主轴方向</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* row默认；Colum主轴改为垂直方向（侧轴自动变为水平方向） */</span></span><br><span class="line">         <span class="attribute">flex-direction</span>: row;</span><br><span class="line">         <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">         <span class="attribute">flex-direction</span>: column;</span><br><span class="line">         <span class="attribute">flex-direction</span>: column-reverse;</span><br></pre></td></tr></table></figure><h3 id="12-4、弹性伸缩比"><a href="#12-4、弹性伸缩比" class="headerlink" title="12.4、弹性伸缩比"></a>12.4、弹性伸缩比</h3><ul><li><p><strong>属性 flex</strong>，控制弹性盒子在主轴方向的尺寸。属性值为<strong>整数</strong>，表示占用<strong>父级剩余尺寸</strong>的份数。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置弹性布局 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 设置flex属性 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">flex</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="12-5、弹性换行与行对齐方式"><a href="#12-5、弹性换行与行对齐方式" class="headerlink" title="12.5、弹性换行与行对齐方式"></a>12.5、弹性换行与行对齐方式</h3><ul><li>弹性盒子可以自动挤压或拉伸，默认情况下，所有弹性盒子都在一行显示。</li><li>属性名 flex-wrap: wrap; flex-wrap: nowrap; 分别表示换行与不换行。</li><li>行对齐方式 align-content 对单行弹性盒子不生效。</li></ul><img src="../image/image-20240219041654312.png" alt="image-20240219041654312" style="zoom:33%;" /> <h2 id="13、元素的显示与隐藏"><a href="#13、元素的显示与隐藏" class="headerlink" title="13、元素的显示与隐藏"></a>13、元素的显示与隐藏</h2><h3 id="13-1、概述"><a href="#13-1、概述" class="headerlink" title="13.1、概述"></a>13.1、概述</h3><ul><li>类似网站广告，点击就关闭了，刷新就会重新出现，<strong>这本质是让一个元素在页面中显示或隐藏起来</strong>。<ul><li>display 显示隐藏。</li><li>visibility 显示隐藏。</li><li>overflow 溢出显示隐藏。</li></ul></li></ul><h3 id="13-2、display属性"><a href="#13-2、display属性" class="headerlink" title="13.2、display属性"></a>13.2、display属性</h3><ul><li>display属性用于设置一个元素如何显示。<ul><li>display:none; 隐藏元素。</li><li>display:block; 除了转换为块级元素，同时还有显示元素的意思。</li></ul></li><li><strong>特点：display隐藏元素后，不再占有原来的位置。</strong></li></ul><h3 id="13-3、visibility属性"><a href="#13-3、visibility属性" class="headerlink" title="13.3、visibility属性"></a>13.3、visibility属性</h3><ul><li>visibility属性用于指定一个元素可见还是隐藏。<ul><li>visibility:visible; 元素可见。</li><li>visibility:hidden; 元素隐藏。</li></ul></li><li><strong>特点：visibility隐藏元素后，继续占有原来的位置。</strong></li></ul><h3 id="13-4、overflow属性"><a href="#13-4、overflow属性" class="headerlink" title="13.4、overflow属性"></a>13.4、overflow属性</h3><ul><li>overflow属性指定了内容溢出一个元素的框（宽或高）时，会发生什么。<ul><li>visible——不剪切内容也不添加滚动条。</li><li>hidden——不显示超出尺寸的内容，超出内容被隐藏。</li><li>scroll——总是显示滚动条。</li><li>auto——超出显示滚动条，不超出不管。</li></ul></li><li><strong>注意：</strong>在有定位的盒子需慎用hidden，因为它会隐藏多余的部分。</li></ul><h2 id="14、高级技巧"><a href="#14、高级技巧" class="headerlink" title="14、高级技巧"></a>14、高级技巧</h2><h3 id="14-0、标题图标"><a href="#14-0、标题图标" class="headerlink" title="14.0、标题图标"></a>14.0、标题图标</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 格式为.ico 一般都是放置在网站根目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="14-1、三角盒子"><a href="#14-1、三角盒子" class="headerlink" title="14.1、三角盒子"></a>14.1、三角盒子</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">line-height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">font-size</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border</span>: <span class="number">50px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">border-left-color</span>: red;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="14-2、用户界面样式"><a href="#14-2、用户界面样式" class="headerlink" title="14.2、用户界面样式"></a>14.2、用户界面样式</h3><ul><li><p><strong>鼠标样式：</strong></p><ul><li>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</li><li><strong>语法：</strong>选择器 {cursor: 属性值;}<ul><li>default —— 小白，<strong>默认</strong>。</li><li>pointer —— 小手。</li><li>move —— 移动。</li><li>text —— 文本。</li><li>not-allowed —— 禁止。</li></ul></li></ul></li><li><p><strong>取消表单轮廓：</strong></p><ul><li>给表单添加outline: 0; 即可取消默认的蓝色边框。</li></ul></li><li><p><strong>防止拖拽文本域：</strong></p><ul><li><p>实际开发中，文本域右下角是不可拖拽的。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">            <span class="attribute">resize</span>: none;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p><strong>vertical-align属性：</strong></p><ul><li><p>用于设置一个元素的垂直对齐方式，但它只针对于<strong>行内元素或者行内块元素</strong>有效。</p></li><li><p><strong>使用场景：</strong>经常用于设置图片或者表单（行内块元素）和文字垂直对齐。</p></li><li><p><strong>语法：</strong>vertical-align: 属性值;</p></li></ul></li><li><p>baseline —— <strong>默认</strong>，元素放置在父元素的基线上。</p></li><li><p>top —— 把元素的顶端和行中最高元素的顶端对齐。</p></li><li><p>middle —— 把此元素放置在父元素的中部。</p></li><li><p>bottom —— 把元素的顶端和行中最低的元素的顶端对齐。</p><img src="../image/image-20221020163651027.png" alt="image-20221020163651027" style="zoom:50%;" /></li><li><p><strong>文字溢出省略号显示：</strong></p><ul><li><p><strong>单行文本溢出省略号显示：</strong></p><ul><li><p>先强制一行内显示文本。</p></li><li><p>超出的部分隐藏。</p></li><li><p>用省略号替代超出的文字。</p></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*1、*/</span></span><br><span class="line">         <span class="attribute">white-space</span>: nowrap; <span class="comment">/*默认normal 自动换行*/</span></span><br><span class="line">         <span class="comment">/*2、*/</span></span><br><span class="line">         <span class="attribute">overflow</span>: hidden;</span><br><span class="line">         <span class="comment">/*3、*/</span></span><br><span class="line">         <span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure></li><li><p><strong>多行文本溢出省略号显示：</strong></p><ul><li>有较大兼容性问题，推荐后台开发。</li></ul></li></ul></li></ul><h3 id="14-3、图片模糊"><a href="#14-3、图片模糊" class="headerlink" title="14.3、图片模糊"></a>14.3、图片模糊</h3><ul><li><p><strong>filter属性</strong>将模糊或颜色偏移等图形效果<strong>应用于元素</strong>。</p></li><li><p><strong>语法：</strong>选择器 {filter: 函数();}</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/*模糊 数值越大越模糊*/</span></span><br><span class="line">            <span class="attribute">filter</span>: <span class="built_in">blur</span>(<span class="number">2px</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="14-4、calc函数"><a href="#14-4、calc函数" class="headerlink" title="14.4、calc函数"></a>14.4、calc函数</h3><ul><li><strong>calc函数</strong>可以在声明css属性值时执行一些计算（+ - * &#x2F;）。</li><li><strong>语法：</strong>width : calc(100% - 80px);</li></ul><h3 id="14-5、过渡"><a href="#14-5、过渡" class="headerlink" title="14.5、过渡"></a>14.5、过渡</h3><ul><li><p><strong>transition属性</strong>，当元素从一种样式变换为另一种样式时为元素添加效果。</p></li><li><p><strong>使用场景：</strong>经常和**:hover**一起搭配使用。</p></li><li><p><strong>语法：</strong>transition: 要过渡的属性 花费时间 运动曲线 何时开始;</p><ul><li>属性——宽高、背景颜色、内外边距都可以（<strong>多个属性逗号分隔</strong>），想要所有的属性都过渡写一个<strong>all</strong>就行。</li><li>花费时间——必须带单位s。</li><li>运动曲线——默认ease（可省略）。</li><li>何时开始——默认是0s。</li><li><strong>总结：谁过渡就给谁加。</strong></li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*鼠标悬停过渡设置*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">transition</span>: all <span class="number">0.5s</span> ease <span class="number">0s</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: springgreen;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="14-6、2D转换"><a href="#14-6、2D转换" class="headerlink" title="14.6、2D转换"></a>14.6、2D转换</h3><ul><li><p><strong>transform属性</strong>，可以实现元素的位移、旋转、缩放等效果。</p></li><li><p><strong>移动translate：</strong></p></li><li><p><strong>语法：</strong>transform: translate(x,y); （也可以分开写，见下）</p><ul><li><p><strong>语法：</strong>transform: translateX(n);</p></li><li><p><strong>语法：</strong>transform: translateY(n);</p><ul><li>元素沿着X轴和Y轴移动。</li></ul></li><li><p>不会影响其他元素的位置（<strong>最大优点</strong>）。</p></li><li><p>移动单位可以是百分比，是相对于自身而言的。</p></li><li><p>对行内标签没有效果。</p></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="comment">/*移动*/</span></span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">100px</span>, <span class="number">0px</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>旋转rotate：</strong></p><ul><li><strong>语法：</strong>transform: rotate(度数deg);<ul><li>度数单位是deg，角度为正顺时针，角度为负逆时针。</li><li>默认旋转的中心点是元素的中心点。</li><li><strong>我们可以设置元素转换的中心点：</strong>transform-origin : x,y;  （单位可以是%或px）。</li></ul></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="comment">/*旋转*/</span></span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">rotate</span>(<span class="number">45deg</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>缩放scale：</strong></p><ul><li><strong>语法：</strong>transform: scale(x,y); <ul><li>transform: scale(2,2);  &#x3D;  transform: scale(2);  宽和高都放大两倍。</li><li>transform: scale(0.5,0.5);  缩小</li><li>可通过transform-origin : x,y;  设置转换中心点，不影响其他盒子。</li></ul></li></ul><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="comment">/*缩放*/</span></span><br><span class="line">            <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>位移、旋转、缩放综合写法：</strong>transform: translate(x,y)  rotate( deg)  scale(x,y);</p><ul><li>书写顺序会影响转换的效果。</li><li>有位移和其它属性，位移放到最前面。</li></ul></li></ul><h3 id="14-7、动画"><a href="#14-7、动画" class="headerlink" title="14.7、动画"></a>14.7、动画</h3><ul><li><p><strong>基本使用：</strong></p><ul><li><p>用keyframes定义动画。</p></li><li><p>元素使用动画。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="keyword">@keyframes</span> demo &#123;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*1、定义动画 也可使用from  to*/</span></span></span><br><span class="line"><span class="language-css">                <span class="number">0%</span> &#123;</span></span><br><span class="line"><span class="language-css">                    <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                    <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                &#125;</span></span><br><span class="line"><span class="language-css">                <span class="number">100%</span> &#123;</span></span><br><span class="line"><span class="language-css">                    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                    <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">                &#125;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">                <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*2、调用动画*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">animation-name</span>: demo;</span></span><br><span class="line"><span class="language-css">                <span class="comment">/*持续时间*/</span></span></span><br><span class="line"><span class="language-css">                <span class="attribute">animation-duration</span>: <span class="number">2s</span>;</span></span><br><span class="line"><span class="language-css">            &#125;</span></span><br><span class="line"><span class="language-css">        </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>0% - 100%这套规则就叫<strong>动画序列</strong>。</p></li><li><p><strong>常见属性：</strong></p><img src="../image/image-20221020204713687.png" alt="image-20221020204713687" style="zoom: 80%;" /></li></ul><h3 id="14-8、3D转换"><a href="#14-8、3D转换" class="headerlink" title="14.8、3D转换"></a>14.8、3D转换</h3><ul><li><p><strong>移动translate3d：</strong></p><ul><li><strong>语法：</strong>transform: translate3d(x,y,z); （也可以分开写，见下）</li><li><strong>语法：</strong>transform: translateX(n);</li><li><strong>语法：</strong>transform: translateY(n);</li><li><strong>语法：</strong>transform: translateZ(n);</li></ul></li><li><p><strong>旋转rotate3d:</strong></p><ul><li><strong>语法：</strong>transform:rotate3d(x,y,z,deg); （也可以分开写，见下）</li><li><strong>语法：</strong>transform:rotateX(deg);</li><li><strong>语法：</strong>transform: rotateY(deg);</li><li><strong>语法：</strong>transform: rotateZ(deg);</li></ul></li><li><p><strong>呈现transform-style：</strong></p></li><li><p>控制子元素是否开启三维立体环境。</p></li><li><p>代码写给父元素，但影响的是子元素，很重要。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*默认 不开启*/</span></span><br><span class="line"><span class="attribute">transform-style</span>: flat;</span><br><span class="line"><span class="comment">/*开启*/</span></span><br><span class="line"><span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br></pre></td></tr></table></figure></li></ul><h3 id="14-9、搜索引擎优化SEO"><a href="#14-9、搜索引擎优化SEO" class="headerlink" title="14.9、搜索引擎优化SEO"></a>14.9、搜索引擎优化SEO</h3><ul><li><p><strong>SEO</strong>是一种利用搜索引擎的规则<strong>提高</strong>网站在有关搜索引擎内<strong>自然排名</strong>的方式。</p></li><li><p>页面必须要有<strong>3个标签</strong>用来符合SEO优化：</p><ul><li><p><strong>title网站标题：</strong></p><ul><li>是搜索引擎了解网页的入口和对网页主题归属的最佳判断点。</li><li><strong>建议：</strong>网站名（产品名）-  网站的介绍（尽量不要超过30个汉字）。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>淘宝网 - 淘！我喜欢<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>description网站说明：</strong></p><ul><li>简要说明我们网站是做什么的。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;淘宝网 - 亚洲较大的网上交易平台，提供各类服饰、美容、家居、数码、话费/点卡充值… 数亿优质商品，同时提供担保交易(先收货后付款)等安全交易保障服务，并由商家提供退货承诺、破损补寄等消费者保障服务，让你安心享受网上购物乐趣！&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>keywords关键字：</strong></p><ul><li>keywords是页面关键，是搜索引擎的关注点之一。</li><li>最好限制为6-8个，关键词之间用英文逗号隔开。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keyword&quot;</span> <span class="attr">content</span>=<span class="string">&quot;淘宝,掏宝,网上购物,C2C,在线交易,交易市场,网上交易,交易市场,网上买,网上卖,购物网站,团购,网上贸易,安全购物,电子商务,放心买,供应,买卖信息,网店,一口价,拍卖,网上开店,网络购物,打折,免费开店,网购,频道,店铺&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="15、移动端"><a href="#15、移动端" class="headerlink" title="15、移动端"></a>15、移动端</h2><img src="../image/image-20240211231343027.png" alt="image-20240211231343027" style="zoom: 33%;" /><h3 id="15-1、rem"><a href="#15-1、rem" class="headerlink" title="15.1、rem"></a>15.1、rem</h3><ul><li><p>rem是相对单位，是相对于<strong>HTML标签字号</strong>的计算结果，<strong>1rem&#x3D;1HTML字号大小</strong>。</p></li><li><p>要想使用rem实现等比适配，需要解决以下两个问题：</p><ul><li>① 手机分辨率不同，如何设置不同的HTML标签字号？（使用媒体查询即可，实际工作中用手淘团队的<strong>flexible.js</strong>）</li><li>② 设备宽度不同，HTML标签字号设置多少合适？（<strong>将网页等分成10份，HTML标签的字号为视口宽度的 1&#x2F;10</strong>)</li></ul></li><li><p><strong>媒体查询</strong>能够检测视口的宽度，然后编写差异化的CSS样式。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /* 媒体查询 视口宽度是412时 */</span><br><span class="line">        @media(width:412px) &#123;</span><br><span class="line">            html &#123;</span><br><span class="line">                font-size: 41px;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 使用rem定义尺寸 */</span><br><span class="line">        .box &#123;</span><br><span class="line">            /* rem = px / 基准根字号 37.5 */</span><br><span class="line">            width: 3rem;</span><br><span class="line">            height: 5rem;</span><br><span class="line">            background-color: green;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="15-2、vw"><a href="#15-2、vw" class="headerlink" title="15.2、vw"></a>15.2、vw</h3><ul><li><p>vw是相对视口宽度的计算结果（vh则是相对视口高度），1vw&#x3D;1%视口宽度（1vh同理）。</p><ul><li>① 使用vw和vh单位，不用媒体查询就能实现等比适配。</li><li>② 工作中建议使用vw单位。</li><li>③ vw和vh不能混用，因为全面屏的原因，可能会导致盒子变形。</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 使用vw定义尺寸 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">30vw</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50vw</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="15-3、媒体查询"><a href="#15-3、媒体查询" class="headerlink" title="15.3、媒体查询"></a>15.3、媒体查询</h3><ul><li><p>媒体查询也可以查询区间（还有完整的写法，因为不常用，此处不做介绍）。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /* 媒体查询 视口宽度是412时 */</span><br><span class="line">        @media(width:412px) &#123;</span><br><span class="line">            html &#123;</span><br><span class="line">                background-color: green;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 媒体查询 视口宽度小于等于412时 */</span><br><span class="line">        @media(max-width:412px) &#123;</span><br><span class="line">            html &#123;</span><br><span class="line">                background-color: yellow;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /* 媒体查询 视口宽度大于等于412时 */</span><br><span class="line">        @media(min-width:412px) &#123;</span><br><span class="line">            html &#123;</span><br><span class="line">                background-color: blue;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>从外部引入css样式时，可以进行媒体查询。</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">media</span>=<span class="string">&quot;(width:412px)&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./pink.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="15-4、less"><a href="#15-4、less" class="headerlink" title="15.4、less"></a>15.4、less</h3><ul><li>less是一种css预处理器，文件扩展名是.less，扩充了css语言，使得其具备一定的逻辑性和计算能力。<strong>目前浏览器不能识别less代码，需要引入对应的css文件。</strong></li></ul><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// less单行注释 ctrl / 无法转换成css注释</span></span><br><span class="line"><span class="comment">/* less块注释 shift alt a */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 1、less运算 加减乘直接书写计算表达式 除法需要添加小括号或. */</span></span><br><span class="line"><span class="comment">// 参与运算的都可以写单位，但计算结果会以先写的单位为准</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100</span> + <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">height</span>: (<span class="number">400</span> / <span class="number">2px</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 2、less嵌套 快速生成后代选择器 */</span></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="comment">// 可以设置.box的属性</span></span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line"></span><br><span class="line">    <span class="selector-class">.son</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">a</span> &#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// &amp; 表示当前选择器 不会生成后代选择器</span></span><br><span class="line">            <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">                <span class="attribute">color</span>: yellow;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 3、less变量 必须先定义再使用 @变量名:数据; css属性:@变量名;  */</span></span><br><span class="line"><span class="variable">@myColor:</span> blue;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="variable">@myColor</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 4、less导入 @import &quot;文件路径&quot;; 可以省略less扩展名 */</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./common.less&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 5、less导出 在less文件的第一行添加 //out: 存储url */</span></span><br><span class="line"><span class="comment">//out: ./index.css</span></span><br><span class="line"><span class="comment">/* 6、less禁止导出 在less文件的第一行添加 //out: false*/</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;本文件已定稿，最后修改时间 20240430 02:42&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;CSS3&quot;&gt;&lt;a href=&quot;#CSS3&quot; class=&quot;headerlink&quot; title=&quot;CSS3&quot;&gt;&lt;/a&gt;CSS3&lt;/h1&gt;&lt;h2 id=&quot;1、语法规范</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>那时的我，海阔天空，一贫如洗</title>
    <link href="http://cychenhaibin.github.io/2024/07/13/%E9%82%A3%E6%97%B6%E7%9A%84%E6%88%91%EF%BC%8C%E6%B5%B7%E9%98%94%E5%A4%A9%E7%A9%BA%EF%BC%8C%E4%B8%80%E8%B4%AB%E5%A6%82%E6%B4%97/"/>
    <id>http://cychenhaibin.github.io/2024/07/13/%E9%82%A3%E6%97%B6%E7%9A%84%E6%88%91%EF%BC%8C%E6%B5%B7%E9%98%94%E5%A4%A9%E7%A9%BA%EF%BC%8C%E4%B8%80%E8%B4%AB%E5%A6%82%E6%B4%97/</id>
    <published>2024-07-13T07:28:47.000Z</published>
    <updated>2024-07-13T11:08:54.984Z</updated>
    
    <content type="html"><![CDATA[<p>​本人是重庆邮电大学2026届的计算机科学与技术在校本科生，现在大学生活已经过了两年了，我的大一生活过的滋润，和普通大学生一样享受着大学生活，认识很多朋友，被一个学姐带进了团学会，也就是学生会，有着一手的资源，而这些资源也让我快乐的度过了我大学以来学校所有的实验课，大一上学校安排了线性代数和高数还有C语言这几门专业课，每天都听不懂老师在讲什么，基本上都是看b站的宋浩老师才挺过来不挂科，给导员提交了入党申请，因为疫情，大一的考试除了高数，线性代数和英语等大一下开学再考其他的科目都是线上考试，线上考试有的人或许就会笑了，现在的我也是，但是当时的我不知道线上考试的水分，其他同学还在请外援，网上找答案的时候，我还在死扣代码，成绩出来后班里排中上，C语言也是我最开始接触的语言，还记得C语言的大作业，这可能是我大学四年最认真的，纯手搓的，这也是我最自豪的，就这样我的大一上结束了，转眼来到大一下，大一下的课程有python，高数下和大物，应该还有一些专业课我记不得了，反正能让我感受到难度一下子上升，尤其是高数，所以期末我就早早准备了，高数险些挂了，大一下专业分流，想过去最差的专业卷保研，或者去最好的专业当倒数，但是前者我不知道有多少人有这种想法，我不敢赌也赌不起，所以毫不犹豫的选择了学院最好的专业：计算机科学与技术，等着被卷，退则可就业，进则可考研，专业分流后重新分班，我知道这些都是排名前200的人（一共600多个人），可能卷不过他们，后面事实也是这样，大一上因为疫情原因，团学会那边没什么工作，疫情结束工作也就来了，大一下快结束时，团学会开始换届了，也是这个时候让我体验到了团学会的恶心，现在的领导都喜欢把功劳归到自己的身上，最终期末成绩出来了，没有挂科，反而排名进了很多，就这样我的大一下生活结束了，摆而美好着，而就在我以为我的大学四年都会这么顺利的时候，我的大二生活变了，机缘巧合之下选择了学习前端，加入了老师实验室，开始学习机器学习，并想着在毕业前发一篇论文，前端技术和机器学习一并学习着，看到这里你可能觉得没有什么不同，那么接下来就是压力倍增的时候，学期开学通过室友认识了一个女孩，开始没有怎么接触，随着上课接触的就多了，就互相了解了，因为她让我决定不再继续摆下去，也是因为她让我难过、悲伤、痛苦，让我变得很悲观，我和她的故事会在之后的博客里更新，在这里就不提了，大二上学习了数电，这也是我最头疼的一门课，数据结构，离散数学，概率论，大学物理接踵而来，课程难度再度升级，作为一个平时只会偶尔学习的我，这学期忙的焦头烂额，我把大部分时间给了我的课外学习，前端和机器学习依旧在我的学习计划中，我依然想起来我的数电实验期中考试实操最后是我的一个朋友帮我完成的，为了报答他，我后面都尽力的去帮助他，当然他还帮了我很多，时间一点一点流逝，转眼又快到了期末，这个期间也是考研的几天，悲观者无处可去，在考研的时机进到了考研的教室复习着什么都不会的科目，这无疑是对我心态的打击，受不了了，待了一个下午我便出来了，这学期的后半部分我基本上都是在伤心和迷茫中度过，家里有两个姐姐就是这次考研，我不知道我以后的路该怎么走，也没有让我想努力的人出现，这学期复习的很差，悲观者能复习的多好？期末成绩出来后，胆战心惊查成绩，还好没挂，除了概率论和离散数学全是60多，又一学期过去了，在这个学期的寒假我参加了我们学校的CSA的数据工程，没有学的？那就逼着自己学，让自己尽快走出悲痛，也是在这个寒假我重拾了LOLm，白天在电脑面前学习，晚上在峡谷练英雄，2月中旬我在S12赛季从黄金打到了大师，寒假彻底疯狂，不仅过了数据工程还过了工作室前端的中期考核，2月低开学，这短短几十行就来到了大二下，一眼望过去仿佛能看到毕业还有那迷茫的未来，开学没过多久，我之前参加考核的工作室找到了我，因为项目缺人，加上我之前的考核项目做的还可以，就问我愿不愿意来，这种事情我当然愿意呀，我就毫不犹豫的答应了，隔天另外一个工作室通过别人介绍也找到了我，当时我还不知道是工作室，以为是一个项目组，当时学姐告诉我第二天早上一起摸个底，摸个底？我当成普通话以为是一起去看看是什么项目，就这样我带着好奇心入睡了，第二天被闹钟吵醒，想起来要去项目摸底，打开手机一看，哪是什么项目摸底呀，是技术摸底，简称面试，我什么也没准备，还有十几分钟，只能硬着头皮上了，我还是第一个面试，回答的时候说的啃啃哇哇，40分钟过去，面试结束了，问的很基础吧，都按照自己的记忆答出来了，面试完回想起来原来摸底是重庆话，在重庆话的意思里面是了解水平，下午的时候收到负责人发的信息说我面试通过，随之发了一份工作室官网，这我才知道这个是工作室，就这样我在大二下加入了两个工作室，写到这里有点累了，加入工作室了后面的故事会在之后的博客里更新。</p><p>​在前端这条路上已经一年了，自己的技术也不知道是什么水平，面对前端和后端，我个人认为前端依旧是比较好学的，刚接触前端的时候认为前端就是把三件套学好，再学个框架就算学完了，但接触下来，发现我错了，在这个互联网的发展时代，前端语言也会更新迭代，在大二下学期我想过是考研还是就业又或者是去考编，好做规划，想过很久，目前的想法是就业，考研以后再说。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​		本人是重庆邮电大学2026届的计算机科学与技术在校本科生，现在大学生活已经过了两年了，我的大一生活过的滋润，和普通大学生一样享受着大学生活，认识很多朋友，被一个学姐带进了团学会，也就是学生会，有着一手的资源，而这些资源也让我快乐的度过了我大学以来学校所有的实验课，大一</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://cychenhaibin.github.io/2024/07/13/hello-world/"/>
    <id>http://cychenhaibin.github.io/2024/07/13/hello-world/</id>
    <published>2024-07-13T06:55:42.630Z</published>
    <updated>2024-07-13T06:49:49.710Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://cychenhaibin.github.io/2024/07/04/H5C3/"/>
    <id>http://cychenhaibin.github.io/2024/07/04/H5C3/</id>
    <published>2024-07-04T11:00:03.408Z</published>
    <updated>2024-07-08T17:25:55.252Z</updated>
    
    <content type="html"><![CDATA[<h1 id="H5C3"><a href="#H5C3" class="headerlink" title="H5C3"></a>H5C3</h1><h3 id="一、什么是html5"><a href="#一、什么是html5" class="headerlink" title="一、什么是html5"></a>一、什么是html5</h3><p>html产生于1990年，1997年出来html4，现在我们用html5</p><h3 id="二、语义化（面试）"><a href="#二、语义化（面试）" class="headerlink" title="二、语义化（面试）"></a>二、语义化（面试）</h3><p><code>&lt;header&gt;&lt;/header&gt;</code></p><p><code>&lt;footer&gt;&lt;/footer&gt;</code></p><p><code>&lt;nav&gt;&lt;/nav&gt;</code></p><p>好处：</p><ol><li>有利于seo，爬虫抓取</li><li>方便团队开发和维护，可读性强</li><li>方便其他设备解析（移动设备）</li></ol><p>坏处：</p><ol><li>ie9以下的浏览器不兼容</li></ol><h3 id="三、新增常用标签"><a href="#三、新增常用标签" class="headerlink" title="三、新增常用标签"></a>三、新增常用标签</h3><ol><li><code>header</code>：头部</li><li><code>footer</code>：底部</li><li><code>section</code>：区块</li><li><code>nav</code>：导航</li></ol><p><strong>以上标签都是”块元素”</strong></p><p><strong>注意一：html5标签兼容问题</strong></p><p><strong>问题：html5在低版本浏览器如何兼容（ie8）？</strong></p><p><strong>解决：通过html5shiv.js文件</strong></p><p><strong>注意二：只要做移动端的项目，必须要加入meta</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;maximum-scale=1.0,minimum-scale=1.0,user-scalable=0,width=device-width,initial-scale=1.0&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="四、新增input-type属性值"><a href="#四、新增input-type属性值" class="headerlink" title="四、新增input type属性值"></a>四、新增input type属性值</h3><table><thead><tr><th align="center">类型</th><th align="center">使用示例</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">email</td><td align="center"><code>&lt;input type=&quot;email&quot;&gt;</code></td><td align="center">输入邮箱格式</td></tr><tr><td align="center">tel</td><td align="center"><code>&lt;input type=&quot;tel&quot;&gt;</code></td><td align="center">输入手机号码格式</td></tr><tr><td align="center">url</td><td align="center"><code>&lt;input type=&quot;url&quot;&gt;</code></td><td align="center">输入url格式</td></tr><tr><td align="center">number</td><td align="center"><code>&lt;input type=&quot;number&quot;&gt;</code></td><td align="center">输入数字格式</td></tr><tr><td align="center">search</td><td align="center"><code>&lt;input type=&quot;search&quot;&gt;</code></td><td align="center">搜索框（体现语义化）</td></tr><tr><td align="center">range</td><td align="center"><code>&lt;input type=&quot;range&quot;&gt;</code></td><td align="center">自由拖动滑块</td></tr><tr><td align="center">time</td><td align="center"><code>&lt;input type=&quot;time&quot;&gt;</code></td><td align="center">小时分钟</td></tr><tr><td align="center">date</td><td align="center"><code>&lt;input type=&quot;date&quot;&gt;</code></td><td align="center">年 月 日</td></tr><tr><td align="center">datetime</td><td align="center"><code>&lt;input type=&quot;datetime&quot;&gt;</code></td><td align="center">时间</td></tr><tr><td align="center">month</td><td align="center"><code>&lt;input type=&quot;month&quot;&gt;</code></td><td align="center">月 年</td></tr><tr><td align="center">week</td><td align="center"><code>&lt;input type=&quot;week&quot;&gt;</code></td><td align="center">星期 年</td></tr></tbody></table><ol><li><p><code>&lt;input type=&quot;email&quot;&gt;</code></p><p>pc：会验证邮箱格式</p><p>移动端：会验证邮箱格式</p></li><li><p><code>&lt;input type=&quot;tel&gt;&quot;</code></p><p>pc：没效果</p><p>移动端：纯数字的键盘</p></li><li><p><code>&lt;input type=&quot;url&quot;&gt;</code></p><p>pc：会验证完整url</p><p>移动端：会验证完整url</p></li><li><p><code>&lt;input type=&quot;number&quot;&gt;</code></p><p>pc：会验证必须输入的数</p><p>移动端：会验证必须输入的数</p></li><li><p><code>&lt;input type=&quot;search&quot;&gt;</code></p><p>pc：和普通text差不多，就是后面加了一个清空value的按钮</p><p>移动端：和普通text差不多，点击键盘的search搜索后会清空输入内容</p></li><li><p><code>&lt;input type=&quot;range&quot;&gt;</code></p><p>pc：自由滑块</p><p>移动端：自由滑块</p></li><li><p><code>&lt;input type=&quot;time&quot;&gt;</code></p><p>pc：显示选择小时和分钟</p><p>移动端：显示选择小时和分钟</p></li></ol><h3 id="五、【windows操作系统】安卓手机真机测试"><a href="#五、【windows操作系统】安卓手机真机测试" class="headerlink" title="五、【windows操作系统】安卓手机真机测试"></a>五、【windows操作系统】安卓手机真机测试</h3><ol><li><h5 id="连接和安装"><a href="#连接和安装" class="headerlink" title="连接和安装"></a>连接和安装</h5><ul><li>电脑和手机要连同一个wifi</li><li>手机要插上数据线</li><li>windows机器和安卓手机要下载软件</li></ul></li><li><h5 id="做真机测试"><a href="#做真机测试" class="headerlink" title="做真机测试"></a>做真机测试</h5><ul><li>右击–新建–项目–5+App</li><li>点击运行–运行到手机或模拟器</li></ul></li></ol><h3 id="六、新增常用属性"><a href="#六、新增常用属性" class="headerlink" title="六、新增常用属性"></a>六、新增常用属性</h3><table><thead><tr><th align="center">属性</th><th align="center">用法</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">placeholder</td><td align="center"><code>&lt;input type=&quot;text&quot; placeholder=&quot;请输入用户名&quot;&gt;</code></td><td align="center">占位符 当用户输入的时候 里面的文字消失 删除所有文字，自动返回</td></tr><tr><td align="center">autofocus</td><td align="center"><code>&lt;input type=&quot;text&quot; autofocus&gt;</code></td><td align="center">规定当页面加载时 input 元素应该自动获得焦点</td></tr><tr><td align="center">multiple</td><td align="center"><code>&lt;input type=&quot;file&quot; multiple&gt;</code></td><td align="center">多文件上传</td></tr><tr><td align="center">autocomplete</td><td align="center"><code>&lt;input type=&quot;text&quot; autocomplete=&quot;off&quot;&gt;</code></td><td align="center">规定表单是否应该启用自动完成功能 有2个值，一个是on一个是off  on代表记录已经输入的值<br>1、autocomplete首先需要提交按钮<br>2、这个表单必须给她名字</td></tr><tr><td align="center">required</td><td align="center"><code>&lt;input type=&quot;text&quot; required&gt;</code></td><td align="center">必填项 内容不能为空</td></tr><tr><td align="center">accesskey</td><td align="center"><code>&lt;input type=&quot;text&quot; accesskey&gt;</code></td><td align="center">规定激活（使元素获得焦点）元素的快捷键 采用 alt + s 的形式</td></tr></tbody></table><ol><li><p><code>placeholder</code></p><p>placeholder 怎么改变颜色</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.user-name::-webkit-input-placeholder&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">class</span>=<span class="string">&quot;user-name&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>autofocus</code>  自动获取焦点</p></li><li><p><code>multiple</code>  多文件上传</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>required</code>  必填项</p></li><li><p><code>autocapitalize=&#39;off&#39;</code></p><p>输入框首字母大写取消</p></li></ol><h3 id="七、视频和音频"><a href="#七、视频和音频" class="headerlink" title="七、视频和音频"></a>七、视频和音频</h3><ol><li><p>视频</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>音频</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><table><thead><tr><th align="center">属性</th><th align="center">值</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">autoplay</td><td align="center">autoplay</td><td align="center">如果出现该属性，则视频在就绪后马上播放</td></tr><tr><td align="center">controls</td><td align="center">controls</td><td align="center">如果出现该属性，则向用户显示控件，比如播放按钮</td></tr><tr><td align="center">height</td><td align="center">pixels</td><td align="center">设置视频播放器的高度</td></tr><tr><td align="center">loop</td><td align="center">loop</td><td align="center">如果出现该属性，则当媒介文件完成播放后再次开始播放</td></tr><tr><td align="center">muted</td><td align="center">muted</td><td align="center">规定视频的音频输出应该被静音</td></tr><tr><td align="center">poster</td><td align="center">URL</td><td align="center">规定视频下载时显示的图像，或者在用户点击播放按钮前显示图像</td></tr><tr><td align="center">preload</td><td align="center">preload</td><td align="center">如果出现该属性，则视频在页面加载时进行加载，并预备播放。<br>如果使用 “autoplay”，则忽略该属性。</td></tr><tr><td align="center">src</td><td align="center">url</td><td align="center">要播放的视频的URL。</td></tr><tr><td align="center">width</td><td align="center">pixels</td><td align="center">设置视频播放器的速度。</td></tr></tbody></table><p>js的api：</p><p>play：播放</p><p>pause：暂停</p><h3 id="八、本地存储"><a href="#八、本地存储" class="headerlink" title="八、本地存储"></a>八、本地存储</h3><ol><li><p><code>sessionStorage</code></p></li><li><p><code>localStorage</code></p><p>添加：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">storageStorage|<span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(key,value);</span><br><span class="line">storageStorage|<span class="variable language_">localStorage</span>.<span class="property">key</span> = value;</span><br><span class="line">storageStorage|<span class="variable language_">localStorage</span>[<span class="string">&#x27;key&#x27;</span>] = value;</span><br></pre></td></tr></table></figure><p>获取：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">storageStorage|<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(key,value);</span><br><span class="line">storageStorage|<span class="variable language_">localStorage</span>.<span class="property">key</span>;</span><br><span class="line">storageStorage|<span class="variable language_">localStorage</span>[<span class="string">&#x27;key&#x27;</span>];</span><br></pre></td></tr></table></figure><p>删除：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 全部删除：</span></span><br><span class="line">storageStorage|<span class="variable language_">localStorage</span>.<span class="title function_">clear</span>();</span><br><span class="line"><span class="comment">// 指定删除：</span></span><br><span class="line">storageStorage|<span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(key);</span><br></pre></td></tr></table></figure><p><strong>区别：</strong></p><p><strong>sessionStorage 关闭页面就消失</strong></p><p><strong>localStorage 除非手动清空，否则就算关闭页面也不会清空</strong></p><p><strong>本地存储进去的value类型都是字符串</strong></p></li></ol><h3 id="九、reset和Normalize"><a href="#九、reset和Normalize" class="headerlink" title="九、reset和Normalize"></a>九、reset和Normalize</h3><ol><li><h5 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* http://meyerweb.com/eric/tools/css/reset/ */</span></span><br><span class="line"><span class="comment">/* v1.0 | 20080212 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-tag">div</span>, <span class="selector-tag">span</span>, applet, <span class="selector-tag">object</span>, <span class="selector-tag">iframe</span>,</span><br><span class="line"><span class="selector-tag">h1</span>, <span class="selector-tag">h2</span>, <span class="selector-tag">h3</span>, <span class="selector-tag">h4</span>, <span class="selector-tag">h5</span>, <span class="selector-tag">h6</span>, <span class="selector-tag">p</span>, <span class="selector-tag">blockquote</span>, pre,</span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">abbr</span>, acronym, <span class="selector-tag">address</span>, big, <span class="selector-tag">cite</span>, <span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">del</span>, <span class="selector-tag">dfn</span>, <span class="selector-tag">em</span>, <span class="attribute">font</span>, <span class="selector-tag">img</span>, <span class="selector-tag">ins</span>, <span class="selector-tag">kbd</span>, <span class="selector-tag">q</span>, s, <span class="selector-tag">samp</span>,</span><br><span class="line">small, strike, <span class="selector-tag">strong</span>, sub, <span class="selector-tag">sup</span>, tt, <span class="selector-tag">var</span>,</span><br><span class="line"><span class="selector-tag">b</span>, u, <span class="selector-tag">i</span>, center,</span><br><span class="line"><span class="selector-tag">dl</span>, <span class="selector-tag">dt</span>, <span class="selector-tag">dd</span>, <span class="selector-tag">ol</span>, <span class="selector-tag">ul</span>, <span class="selector-tag">li</span>,</span><br><span class="line"><span class="selector-tag">fieldset</span>, <span class="selector-tag">form</span>, <span class="selector-tag">label</span>, <span class="selector-tag">legend</span>,</span><br><span class="line"><span class="selector-tag">table</span>, <span class="selector-tag">caption</span>, <span class="selector-tag">tbody</span>, <span class="selector-tag">tfoot</span>, <span class="selector-tag">thead</span>, <span class="selector-tag">tr</span>, <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">vertical-align</span>: baseline;</span><br><span class="line"><span class="attribute">background</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ol</span>, <span class="selector-tag">ul</span> &#123;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span>, <span class="selector-tag">q</span> &#123;</span><br><span class="line"><span class="attribute">quotes</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">blockquote</span><span class="selector-pseudo">:after</span>,</span><br><span class="line"><span class="selector-tag">q</span><span class="selector-pseudo">:before</span>, <span class="selector-tag">q</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line"><span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="attribute">content</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* remember to define focus styles! */</span></span><br><span class="line"><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line"><span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* remember to highlight inserts somehow! */</span></span><br><span class="line"><span class="selector-tag">ins</span> &#123;</span><br><span class="line"><span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">del</span> &#123;</span><br><span class="line"><span class="attribute">text-decoration</span>: line-through;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* tables still need &#x27;cellspacing=&quot;0&quot;&#x27; in the markup */</span></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line"><span class="attribute">border-collapse</span>: collapse;</span><br><span class="line"><span class="attribute">border-spacing</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="Normalize"><a href="#Normalize" class="headerlink" title="Normalize"></a>Normalize</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Document</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the line height in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Prevent adjustments of font size after orientation changes in iOS.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  -webkit-<span class="selector-tag">text</span>-size-adjust: <span class="number">100%</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Sections</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the margin in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Render the `main` element consistently in IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the font size and margin on `h1` elements within `section` and</span></span><br><span class="line"><span class="comment"> * `article` contexts in Chrome, Firefox, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">2em</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0.67em</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Grouping content</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Add the correct box sizing in Firefox.</span></span><br><span class="line"><span class="comment"> * 2. Show the overflow in Edge and IE.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">hr &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: content-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Correct the odd `em` font sizing in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">pre &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Text-level semantics</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the gray background on active links in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Remove the bottom border in Chrome 57-</span></span><br><span class="line"><span class="comment"> * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">abbr</span><span class="selector-attr">[title]</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">text-decoration</span>: underline dotted; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font weight in Chrome, Edge, and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">b</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bolder;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inheritance and scaling of font size in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Correct the odd `em` font sizing in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">code</span>,</span><br><span class="line"><span class="selector-tag">kbd</span>,</span><br><span class="line"><span class="selector-tag">samp</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: monospace, monospace; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct font size in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">small &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">80%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Prevent `sub` and `sup` elements from affecting the line height in</span></span><br><span class="line"><span class="comment"> * all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">sub,</span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">75%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sub &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: -<span class="number">0.25em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">sup</span> &#123;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">0.5em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Embedded content</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the border on images inside links in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">border-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Forms</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Change the font styles in all browsers.</span></span><br><span class="line"><span class="comment"> * 2. Remove the margin in Firefox and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span>,</span><br><span class="line"><span class="selector-tag">optgroup</span>,</span><br><span class="line"><span class="selector-tag">select</span>,</span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: inherit; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.15</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Show the overflow in IE.</span></span><br><span class="line"><span class="comment"> * 1. Show the overflow in Edge.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">input</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">overflow</span>: visible;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inheritance of text transform in Edge, Firefox, and IE.</span></span><br><span class="line"><span class="comment"> * 1. Remove the inheritance of text transform in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-tag">select</span> &#123; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">text-transform</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;button&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;reset&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;submit&quot;</span>]</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">appearance</span>: button;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inner border and padding in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]::-moz-focus-inner,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]::-moz-focus-inner &#123;</span><br><span class="line">  <span class="attribute">border-style</span>: none;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Restore the focus styles unset by the previous rule.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span>:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;button&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;reset&quot;</span>]:-moz-focusring,</span><br><span class="line">[type=<span class="string">&quot;submit&quot;</span>]:-moz-focusring &#123;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">1px</span> dotted ButtonText;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the padding in Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">fieldset</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0.35em</span> <span class="number">0.75em</span> <span class="number">0.625em</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the text wrapping in Edge and IE.</span></span><br><span class="line"><span class="comment"> * 2. Correct the color inheritance from `fieldset` elements in IE.</span></span><br><span class="line"><span class="comment"> * 3. Remove the padding so developers are not caught out when they zero out</span></span><br><span class="line"><span class="comment"> *    `fieldset` elements in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">legend</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">color</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">  <span class="attribute">display</span>: table; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 3 */</span></span><br><span class="line">  <span class="attribute">white-space</span>: normal; <span class="comment">/* 1 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct vertical alignment in Chrome, Firefox, and Opera.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">progress &#123;</span><br><span class="line">  <span class="attribute">vertical-align</span>: baseline;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the default vertical scrollbar in IE 10+.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Add the correct box sizing in IE 10.</span></span><br><span class="line"><span class="comment"> * 2. Remove the padding in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;checkbox&quot;</span>]</span>,</span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;radio&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Correct the cursor style of increment and decrement buttons in Chrome.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;number&quot;</span>]</span>::-webkit-inner-spin-button,</span><br><span class="line">[type=<span class="string">&quot;number&quot;</span>]::-webkit-outer-spin-button &#123;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the odd appearance in Chrome and Safari.</span></span><br><span class="line"><span class="comment"> * 2. Correct the outline style in Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">appearance</span>: textfield; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">outline-offset</span>: -<span class="number">2px</span>; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Remove the inner padding in Chrome and Safari on macOS.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span>::-webkit-search-decoration &#123;</span><br><span class="line">  -webkit-<span class="attribute">appearance</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. Correct the inability to style clickable types in iOS and Safari.</span></span><br><span class="line"><span class="comment"> * 2. Change font properties to `inherit` in Safari.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">::-webkit-file-upload-button &#123;</span><br><span class="line">  -webkit-<span class="attribute">appearance</span>: button; <span class="comment">/* 1 */</span></span><br><span class="line">  <span class="attribute">font</span>: inherit; <span class="comment">/* 2 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Interactive</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Add the correct display in Edge, IE 10+, and Firefox.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">details</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Add the correct display in all browsers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">summary</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: list-item;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Misc</span></span><br><span class="line"><span class="comment">   ========================================================================== */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 10+.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">template &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Add the correct display in IE 10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[hidden]</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="十、CSS-预处理器"><a href="#十、CSS-预处理器" class="headerlink" title="十、CSS 预处理器"></a>十、CSS 预处理器</h3><p>用专门的语言进行web页面样式设计，再通过编译器转换成正常的css文件</p><p>专门的语言：less、sass、stylus</p><ol><li><h4 id="less"><a href="#less" class="headerlink" title="less"></a>less</h4><p>官网：<a href="http://lesscss.cn/">http://lesscss.cn/</a></p><p>语法格式：</p><ol><li><p>变量</p><p><code>@变量名称:值</code></p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@bgColor:</span>pink;</span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@bgColor</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@bgColor</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="variable">@bgColor</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>可以使用运算符</p></li><li><p>自定义函数</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义</span></span><br><span class="line">.函数名(形参) &#123;</span><br><span class="line">函数体</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">.函数名(实参)</span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.fn</span>() &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="selector-class">.fn</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.fn</span>(<span class="variable">@fz</span>:<span class="number">80px</span>) &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="variable">@fz</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="selector-class">.fn</span>(<span class="number">24px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>嵌套</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    <span class="selector-tag">ul</span> &#123;</span><br><span class="line">        <span class="attribute">list-style</span>:none;</span><br><span class="line">        <span class="selector-tag">li</span> &#123;</span><br><span class="line">            <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">            <span class="selector-tag">span</span> &#123;</span><br><span class="line">                <span class="attribute">background-color</span>:red;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 给li加的</span></span><br><span class="line">            <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">                <span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><h4 id="sass"><a href="#sass" class="headerlink" title="sass"></a>sass</h4><p>基于Ruby语言</p><p>使用的时候用的是scss</p><ol><li><p>变量</p><p><code>$变量名称:值;</code></p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="variable">$h</span>:<span class="number">400px</span>;</span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="variable">$h</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运算</p></li><li><p>自定义函数</p><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@function</span> 函数名称(参数) &#123;</span><br><span class="line">    <span class="keyword">@return</span> 参数</span><br><span class="line">&#125;</span><br><span class="line">函数名称(参数)</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@function</span> fn(<span class="variable">$fz</span>:<span class="number">24px</span>) &#123;</span><br><span class="line">    <span class="keyword">@return</span> <span class="variable">$fz</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">300px</span> - <span class="number">298</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="variable">$h</span>;</span><br><span class="line">    <span class="attribute">background-color</span>:red;</span><br><span class="line">    &amp;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">        <span class="attribute">content</span>:<span class="string">&#x27;xxxxx&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">ul</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>:<span class="built_in">fn</span>();</span><br><span class="line">        <span class="selector-tag">li</span> &#123;</span><br><span class="line">            <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="十一、CSS3选择器和兼容"><a href="#十一、CSS3选择器和兼容" class="headerlink" title="十一、CSS3选择器和兼容"></a>十一、CSS3选择器和兼容</h3><h5 id="兼容"><a href="#兼容" class="headerlink" title="兼容"></a>兼容</h5><table><thead><tr><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">-webkit-</td><td align="center">Safari，谷歌浏览器等使用Webkit引擎的浏览器</td></tr><tr><td align="center">-moz-</td><td align="center">火狐等使用Mozilla浏览器引擎的浏览器</td></tr><tr><td align="center">-o-</td><td align="center">Opera浏览器</td></tr><tr><td align="center">-ms-</td><td align="center">Internet Explorer浏览器</td></tr></tbody></table><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">.user-name::-webkit-input-placeholder&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line">.user-name::-moz-input-placeholder&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line">.user-name::-o-input-placeholder&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line">.user-name::-ms-input-placeholder&#123;</span><br><span class="line">color:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span> <span class="attr">class</span>=<span class="string">&quot;user-name&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="十二、弹性盒布局-flex"><a href="#十二、弹性盒布局-flex" class="headerlink" title="十二、弹性盒布局-flex"></a>十二、弹性盒布局-flex</h3><ol><li><h5 id="弹性盒子"><a href="#弹性盒子" class="headerlink" title="弹性盒子"></a>弹性盒子</h5><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">父元素 &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h5 id="容器属性"><a href="#容器属性" class="headerlink" title="容器属性"></a>容器属性</h5><ul><li><h6 id="flex-direction"><a href="#flex-direction" class="headerlink" title="flex-direction"></a>flex-direction</h6><p>参数：row（默认）、column（纵向）</p><p>决定主轴的方向（即项目的排列方向）</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>；<span class="attribute">flex</span>；</span><br><span class="line">    <span class="attribute">flex-direction</span>:column;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h6 id="flex-wrap"><a href="#flex-wrap" class="headerlink" title="flex-wrap"></a>flex-wrap</h6><p>默认情况下，项目都排在一条线上，如果一条线排不下，如何换行</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621141922380.png" alt="image-20240621141922380"></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>:wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h6 id="flex-flow"><a href="#flex-flow" class="headerlink" title="flex-flow"></a>flex-flow</h6><p>direction 和 wrap 的集合</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">flex-flow</span>:row wrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h6 id="justify-content"><a href="#justify-content" class="headerlink" title="justify-content"></a>justify-content</h6><p>参数：</p><p>flex-start、</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621143443902.png" alt="image-20240621143443902"></p><p>flex-end、</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621143419351.png" alt="image-20240621143419351"></p><p>center、</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621143513360.png" alt="image-20240621143513360"></p><p>space-between、</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621143540250.png" alt="image-20240621143540250"></p><p>space-around</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621143559563.png" alt="image-20240621143559563"></p></li><li><h6 id="align-items"><a href="#align-items" class="headerlink" title="align-items"></a>align-items</h6><p>参数：</p><p>flex-start：</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621143844634.png" alt="image-20240621143844634"></p><p>flex-end：</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621143918520.png" alt="image-20240621143918520"></p><p>center：</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621144021245.png" alt="image-20240621144021245"></p><p>stretch：</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621144045924.png" alt="image-20240621144045924"></p><p>baseline：</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621144209319.png" alt="image-20240621144209319"></p></li></ul></li><li><h5 id="项目属性"><a href="#项目属性" class="headerlink" title="项目属性"></a>项目属性</h5><ul><li><h6 id="flex-grow"><a href="#flex-grow" class="headerlink" title="flex-grow"></a>flex-grow</h6><p>定义了项目的放大比例，默认为0，即如果存在剩余空间，也放不大</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621145206407.png" alt="image-20240621145206407"></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">flex-grow</span>:<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-class">.item2</span> &#123;</span><br><span class="line">    <span class="attribute">flex-grow</span>:<span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&#x27;item2&#x27;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621145601593.png" alt="image-20240621145601593"></p></li><li><h6 id="flex-shrink"><a href="#flex-shrink" class="headerlink" title="flex-shrink"></a>flex-shrink</h6><p>定义了项目的缩小比例，默认为1，即空间不住，该项目将缩小</p><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240621150019743.png" alt="image-20240621150019743"></p></li><li><h6 id="flex"><a href="#flex" class="headerlink" title="flex"></a>flex</h6><p>flex属性是flex-grow、flex-shrink、flex-basis的简写，默认值为0 1 auto，后两个属性可选</p></li></ul></li></ol><h3 id="十三、自适应布局"><a href="#十三、自适应布局" class="headerlink" title="十三、自适应布局"></a>十三、自适应布局</h3><ol><li><h5 id="布局单位"><a href="#布局单位" class="headerlink" title="布局单位"></a>布局单位</h5><p>px：固定单位</p><p>em、rem：相对单位</p><p>em：相对于父元素的font-size</p><p>rem：根（html）的font-size</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>:<span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.content</span> &#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>:<span class="number">1rem</span>;     //<span class="number">30px</span></span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>:<span class="number">1.1px</span>;   //<span class="number">30px</span></span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span>&gt;</span></span><br><span class="line">        1111</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意：移动端用的最多的是rem，好计算</p></li><li><h5 id="自适应布局"><a href="#自适应布局" class="headerlink" title="自适应布局"></a>自适应布局</h5><p>引入 <code>flexible.js</code> 文件</p></li></ol><h3 id="十四、transform"><a href="#十四、transform" class="headerlink" title="十四、transform"></a>十四、transform</h3><p>​transform：位移、缩放、旋转、倾斜 </p><ol><li><h5 id="transform-2D"><a href="#transform-2D" class="headerlink" title="transform-2D"></a>transform-2D</h5><ol><li><p>位移</p><p><code>translate(x,y)</code></p><p><code>translateX(x)</code></p><p><code>translateY(y)</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>:<span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:red;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* transform:translate(50px,200px); */</span></span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>:<span class="built_in">translateX</span>(<span class="number">100%</span>);  <span class="comment">/* 100*100% */</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>缩放</p><p><code>scale(x,y)</code></p><p><code>scaleX(x)</code></p><p><code>scale(y)</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">2</span>,<span class="number">0.5</span>)  <span class="comment">/* x,y */</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240625142025765.png" alt="image-20240625142025765"></p><p><strong>面试题</strong>：谷歌浏览器默认字体大小是16px，那么如何显示小于16px的字体呢？</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">    -webkit-<span class="attribute">transform</span>:<span class="built_in">scale</span>(.<span class="number">5</span>); <span class="comment">/* 20*0.5=10px */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>旋转</p><p><code>rotate(angle)</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>:<span class="built_in">rotate</span>(<span class="number">180deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>倾斜</p><p><code>skew(x-angle,y-angle)</code></p><p><code>skewX(angle)</code></p><p><code>skewY(angle)</code></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>:<span class="built_in">skew</span>(<span class="number">45deg</span>,<span class="number">10deg</span>)  <span class="comment">/* x,y */</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p> <img src="C:\Users\32424\AppData\Roaming\Typora\typora-user-images\image-20240625143224732.png" alt="image-20240625143224732"></p></li></ol></li><li><h5 id="transform-3D（多了Z轴）"><a href="#transform-3D（多了Z轴）" class="headerlink" title="transform-3D（多了Z轴）"></a>transform-3D（多了Z轴）</h5><p>​<strong>如果要用3d了，必须给”父元素”加入一个 perspective 属性规定3D元素的透视效果</strong></p><p>​<code>perspective:400px</code> 值越大，离我们越远，越小越近</p><p>​<code>perspactive-origin</code> 规定中心位置</p><p>​<code>transform-origin</code> 如果定义3d，让子元素都是3d空间</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>:<span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">perspective</span>:<span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* perspective-origin:5% 90%; */</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>:<span class="built_in">rotateY</span>(<span class="number">45deg</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="十五、CSS动画"><a href="#十五、CSS动画" class="headerlink" title="十五、CSS动画"></a>十五、CSS动画</h3><ol><li><h5 id="animation基本使用"><a href="#animation基本使用" class="headerlink" title="animation基本使用"></a>animation基本使用</h5><table><thead><tr><th align="center">参数</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center"><code>animation-name</code></td><td align="center">规定需要绑定到选择器的 keyframe 名称</td></tr><tr><td align="center"><code>animation-duration</code></td><td align="center">规定完成动画所花费的时间，以秒或毫秒计</td></tr><tr><td align="center"><code>animation-timing-function</code></td><td align="center">规定动画的速度曲线</td></tr><tr><td align="center"><code>animation-delay</code></td><td align="center">规定在动画开始之前的延迟</td></tr><tr><td align="center"><code>animation-iteration-count</code></td><td align="center">规定动画应该播放的次数</td></tr><tr><td align="center"><code>animation-direction</code></td><td align="center">规定是否应该轮流反向播放动画</td></tr></tbody></table><p><strong>要用animation，必须要定义关键帧</strong></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span>&#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.main</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-name</span>:xxx;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-duration</span>:<span class="number">3s</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-timing-function</span>:ease-in-out;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-delay</span>:<span class="number">5s</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-iteration-count</span>:infinite;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="keyword">@keyframes</span> xxx&#123;</span></span><br><span class="line"><span class="language-css">        <span class="number">0%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">50%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;mian&quot;</span>&gt;</span></span><br><span class="line">        随便</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>简写：<code>animation:名称 时间 速度曲线 延迟 次数 反向</code></p></li><li><h5 id="animation加载中动画"><a href="#animation加载中动画" class="headerlink" title="animation加载中动画"></a>animation加载中动画</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">margin</span>:<span class="number">50</span> auto;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>:<span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">list-style</span>:none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>:inline-block;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:pink;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation</span>:loading <span class="number">1.2s</span> infinite;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="keyword">@keyframes</span> loading&#123;</span></span><br><span class="line"><span class="language-css">        <span class="number">0%</span>,<span class="number">40%</span>,<span class="number">100%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>:<span class="built_in">scaleY</span>(.<span class="number">5</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="number">20%</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">transform</span>:<span class="built_in">scaleY</span>(.<span class="number">8</span>);</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-delay</span>:-<span class="number">1.1s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-delay</span>:-<span class="number">1s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-delay</span>:-<span class="number">0.9s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-delay</span>:-<span class="number">0.8s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">ul</span> <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>)&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">animation-delay</span>:-<span class="number">0.7s</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="animate动画库"><a href="#animate动画库" class="headerlink" title="animate动画库"></a>animate动画库</h5><p>class固定前缀：animate__animated</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no&quot;</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;animate.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">*&#123;<span class="attribute">margin</span>:<span class="number">0</span>;<span class="attribute">padding</span>:<span class="number">0</span>;&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">html</span>,<span class="selector-tag">body</span>,<span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css"><span class="attribute">flex-direction</span>: column;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>:<span class="number">100vw</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100vh</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">header</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">section</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css"><span class="attribute">flex</span>:<span class="number">1</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: <span class="number">#838384</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">section</span>&gt;<span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">100%</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.home</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css"><span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.my</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">footer</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>:<span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">footer</span> <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css"><span class="attribute">justify-content</span>: space-around;</span></span><br><span class="line"><span class="language-css"><span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css"><span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">footer</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">color</span>:<span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">line-height</span>: <span class="number">80px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;container&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;home animate__animated&#x27;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;my animate__animated&#x27;</span>&gt;</span>我的<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>我的<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>*学习路线*<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>*在线课程*<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;jquery-1.11.min.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">$(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">$(<span class="string">&quot;footer ul&gt;li&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> index = $(<span class="variable language_">this</span>).<span class="title function_">index</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">$(<span class="string">&#x27;section&gt;div&#x27;</span>).<span class="title function_">eq</span>(index).<span class="title function_">removeClass</span>(<span class="string">&#x27;animate__slideInRight animate__slideOutRight&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;animate__slideInRight&#x27;</span>).<span class="title function_">siblings</span>().<span class="title function_">removeClass</span>(<span class="string">&#x27;animate__slideInRight animate__slideOutRight&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;animate__slideOutRight&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">&#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><h5 id="transition"><a href="#transition" class="headerlink" title="transition"></a>transition</h5><p>简写：<code>transition:过渡的属性名称 时间 速度曲线 延迟</code></p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background</span>:red;</span><br><span class="line">    <span class="attribute">transition</span>:all <span class="number">2s</span>; <span class="comment">/*all过渡所有属性*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.main</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">background</span>:blue;</span><br><span class="line">    <span class="attribute">transform</span>:<span class="built_in">translateX</span>(<span class="number">100px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>animate 和 transition 有什么区别？</strong></p><p>使用区别：</p><ol><li><code>transition</code>：交互驱动</li><li><code>animation</code>：自己动，一般刷新页面就执行的动画</li></ol></li><li><p>无宽高如何居中</p><p><strong>面试题：一个盒子不给宽度和高度，如何水平垂直居中</strong></p><ol><li><p>弹性盒子flex</p></li><li><p>transform</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>:relative;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>:<span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.main</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>:absolute;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">left</span>:<span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">right</span>:<span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">transform</span>:<span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>网格布局</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.container</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>:grid;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>:center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>:center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>:<span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>:<span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>:pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">   </span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><h3 id="十六、响应式布局-媒体查询-media"><a href="#十六、响应式布局-媒体查询-media" class="headerlink" title="十六、响应式布局(媒体查询)@media"></a>十六、响应式布局(媒体查询)@media</h3><p>优点：一个url（一套代码）可以响应多端（电脑、ipad、手机）</p><p>缺点：存在兼容性、体积大</p><ol><li><h5 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h5><p><strong>@media</strong></p><p>语法格式：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">400px</span>)&#123;</span><br><span class="line">    代码体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@media</span> <span class="keyword">only</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>:<span class="number">400px</span>) <span class="keyword">and</span> (<span class="attribute">max-width</span>)&#123;</span><br><span class="line">    代码体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>only：可以排除不支持媒体查询的浏览器</p><p>screen：设备类型</p><p>max-width|min-width：小于max-width、大于min-width </p></li><li><h5 id="响应式图片"><a href="#响应式图片" class="headerlink" title="响应式图片"></a>响应式图片</h5><p>html5新增的标签</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pictrue</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">&quot;路径2&quot;</span> <span class="attr">media</span>=<span class="string">&#x27;&#123;max-width:800px&#125;&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">srcset</span>=<span class="string">&quot;路径1&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pictrue</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h5 id="响应式和自适应"><a href="#响应式和自适应" class="headerlink" title="响应式和自适应"></a>响应式和自适应</h5><p>响应式：”一个url”可以响应多端（电脑、ipad、手机）</p><p>自适应：可以在移动设备上适应（ipad、手机）</p></li></ol><h3 id="十七、移动端插件"><a href="#十七、移动端插件" class="headerlink" title="十七、移动端插件"></a>十七、移动端插件</h3><ol><li><h5 id="iScroll插件"><a href="#iScroll插件" class="headerlink" title="iScroll插件"></a>iScroll插件</h5><p>中文网：<a href="http://caibaojian.com/iscroll-5/">http://caibaojian.com/iscroll-5/</a></p><ul><li><p>引入iscroll.js文件</p></li><li><p>加入 <code>id=&quot;wrapper&quot;</code></p><ul><li>给滚动元素的父元素添加</li></ul></li><li><p>实例化</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> myScroll = <span class="keyword">new</span> <span class="title class_">IScroll</span>(<span class="string">&#x27;#wrapper&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">scrollbars</span>:<span class="literal">true</span> <span class="comment">// 显示滚动条</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li><li><h5 id="移动端300ms延迟"><a href="#移动端300ms延迟" class="headerlink" title="移动端300ms延迟"></a>移动端300ms延迟</h5><p><strong>面试：在移动端使用click事件有300ms延迟的问题</strong></p><p>点击两下会放大缩小页面会与点一下冲突，需要等待时间判断是否再点一下</p><p><strong>解决方式</strong></p><ol><li><p>禁止双击缩放（加入meta）</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>插件：fastclick.js</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;fastclick.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// fastclick</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(<span class="string">&#x27;addEventListener&#x27;</span> <span class="keyword">in</span> <span class="variable language_">document</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">FastClick</span>.<span class="title function_">attach</span>(<span class="variable language_">document</span>.<span class="property">body</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="literal">false</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// end</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="touch事件与穿透问题"><a href="#touch事件与穿透问题" class="headerlink" title="touch事件与穿透问题"></a>touch事件与穿透问题</h5><ol><li><p>移动端事件（touch）</p><p>touchstart：开始触摸事件</p><p>touchmove：手指滑动事件</p><p>touchend：触摸结束事件</p></li></ol><p><strong>面试题：移动端touch事件有穿透（点透）的问题，该怎么解决</strong></p><p>给整体页面加一个蒙层，同时在这个页面里面加一个链接，给蒙层给一个触摸事件，让蒙层消失，刷新页面触摸链接上面的蒙层时会穿透，跳转到链接网址</p><p><strong>解决方式：</strong></p><ol><li><p>阻止默认行为（通过事件对象阻止）</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">事件名.<span class="property">ontouchstart</span> = <span class="keyword">function</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    e.<span class="title function_">preventDefault</span>();</span><br><span class="line">    其他代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>fastclick.js</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;fastclick.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// fastclick</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(<span class="string">&#x27;addEventListener&#x27;</span> <span class="keyword">in</span> <span class="variable language_">document</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">FastClick</span>.<span class="title function_">attach</span>(<span class="variable language_">document</span>.<span class="property">body</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="literal">false</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// end</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><h5 id="zepto-js"><a href="#zepto-js" class="headerlink" title="zepto.js"></a>zepto.js</h5><p>是一个轻量级的、针对现代高级浏览器的 <strong>JavaScript 工具库</strong>，它兼容 <strong>jQuery 的 API</strong> </p><p>移动端触摸：tap</p></li><li><h5 id="懒加载以及原理"><a href="#懒加载以及原理" class="headerlink" title="懒加载以及原理"></a>懒加载以及原理</h5><p>优势：提升性能</p><p>实现原理：图片是通过img的src属性，当对src赋值时，基于这个问题，我们可以利用标签的自定义属性（data-xxx），来保存图片 的路径，当我们需要加载图片的时候，将data-xxx赋值给src就可以实现按需引入，按需加载</p><p>插件：lazyload</p></li></ol><p><strong>问题一：移动端，input的键盘的右下角显示搜索（2个字）</strong></p><p><strong>解决：</strong></p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;搜索课程名称或者关键词&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>问题二：如果我们在移动端点击了搜索，form表单有action就自动提交表单</strong></p><p><strong>解决：<code> onsubmit=&quot;return false&quot;</code></strong></p><p>例子：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&#x27;goSearch&#x27;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;search&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;搜索课程名称或者关键词&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>问题三：如何收起键盘</strong></p><p><strong>解决</strong>：<code>document.activeElement.blur();</code></p><p><strong>问题四：元素被触摸时产生的半透明遮罩怎么去掉 （a、button、input、textarea）</strong></p><p><strong>解决</strong>：<code>-webkit-tap-highlight-color:rgba(0,0,0,0);</code></p><p><strong>问题五：如何关闭ios键盘的首字母自动大写</strong></p><p><strong>解决</strong>：<code>&lt;input autocapitalize=&#39;off&#39;&gt;</code></p><p><strong>问题六：禁止ios&amp;安卓长按保存（下载）图片</strong></p><p><strong>解决</strong>：</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span>&#123;</span><br><span class="line">    -webkit-touch-callout:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>问题七：禁止ios&amp;安卓长按选中文字</strong></p><p><strong>解决</strong>：<code>-webkit-user-select:none;</code></p><p>​    </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;H5C3&quot;&gt;&lt;a href=&quot;#H5C3&quot; class=&quot;headerlink&quot; title=&quot;H5C3&quot;&gt;&lt;/a&gt;H5C3&lt;/h1&gt;&lt;h3 id=&quot;一、什么是html5&quot;&gt;&lt;a href=&quot;#一、什么是html5&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
  </entry>
  
</feed>
